2021-01-11 16:47:34 -Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-01-11 16:47:34 -HV000001: Hibernate Validator 6.1.6.Final
2021-01-11 16:47:34 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-11 16:47:34 -Starting DongApplication using Java 1.8.0_91 on LAPTOP-OMROCIRP with PID 5080 (F:\JavaWorkSpace\myblog\target\classes started by DM in F:\JavaWorkSpace\myblog)
2021-01-11 16:47:34 -Trying to load META-INF/validation.xml via TCCL
2021-01-11 16:47:34 -Running with Spring Boot v2.4.1, Spring v5.3.2
2021-01-11 16:47:34 -The following profiles are active: dev
2021-01-11 16:47:34 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-11 16:47:34 -Loading source class com.dong.DongApplication
2021-01-11 16:47:34 -No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-11 16:47:34 -Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-01-11 16:47:34 -Loaded expression factory via original TCCL
2021-01-11 16:47:34 -Matching URLs for reloading : [file:/F:/JavaWorkSpace/myblog/target/classes/]
2021-01-11 16:47:34 -Included patterns for restart : [/mybatis-plus-[\w-]+.jar]
2021-01-11 16:47:34 -Excluded patterns for restart : [/spring-boot-actuator/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot/(bin|build|out)/, /spring-boot-starter-[\w-]+/, /spring-boot-autoconfigure/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/]
2021-01-11 16:47:34 -Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-01-11 16:47:34 -For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-01-11 16:47:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe
2021-01-11 16:47:34 -Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2021-01-11 16:47:34 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2021-01-11 16:47:34 -HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-11 16:47:34 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-11 16:47:34 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-11 16:47:34 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-11 16:47:34 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-11 16:47:34 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\MvcConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\MybatisPlusConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\aspect\LogAspectJ.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\aspect\WebLogAspect.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\dataSourceConfig\DruidDBConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\interceptor\MyInterceptor.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\listener\HomeSystemListener.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\listener\ListenerRegistractionBeanConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\common\swagger2\SwaggerConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\filter\FilterRegistractionBeanConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\AdviceControllerArttype.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\ArticleUserFabulousController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\CommentController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\LoginController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\UserCoreController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\indexController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\jianlubokeController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\home\controller\zyfxController.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\lucene\luceneUtils.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\quartz\ArticleJob.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\quartz\MyAutoWiredSptingBeanJobFactory.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\quartz\QuartzManager.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\quartz\ScheduleJobInitListener.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\quartz\myJob.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\quartz\quartzConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\shiro\EhcacheConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\shiro\shiroConfig.class]
2021-01-11 16:47:34 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\AdminUserController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\ArctypeController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\ArticleController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\ArticleTagController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\DefaultAdminuserController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\DeptController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\DownloadController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\FileAdminController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\LinksController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\LogController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\MenuController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\NoticeController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\NoticeUserController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\PowerController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\RoleController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\RoleUserController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\SystemController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\SystemUserOnLineController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\TagController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\TaskController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\TvController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\UserController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\WheelController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\indexController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\loginController.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\controller\shiroControllerAdvice.class]
2021-01-11 16:47:35 -Ignored because not a concrete top-level class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\FileMapper.class]
2021-01-11 16:47:35 -Ignored because not a concrete top-level class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\MenuMapper.class]
2021-01-11 16:47:35 -Ignored because not a concrete top-level class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\UserMapper.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\ArticleServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\ArticleTagServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\ArticleUserFabulousServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\ArttypeServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\CommentServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\DefaultAdminuserServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\DeptServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\DownloadServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\FileServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\LinksServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\LogServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\MenuServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\NoticeServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\NoticeUserServiceImpl.class]
2021-01-11 16:47:35 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\OnlineUserService.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\PowerRoleServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\PowerServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\RoleServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\RoleUserServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\SystemServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\TagServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\TaskServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\TvServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\TvtypeServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\UserServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\UserTagServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\service\impl\WheelServiceImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\util\FileAdd.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\util\MyWebApplictionUtil.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\util\RndServlet.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\util\SpringEmailUtils.class]
2021-01-11 16:47:36 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\util\SystemColumnUrl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/springfox/documentation/swagger2/mappers/ServiceModelToSwagger2MapperImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/springfox/documentation/swagger2/mappers/VendorExtensionsMapperImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/springfox/documentation/swagger2/mappers/ParameterMapperImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/springfox/documentation/swagger2/mappers/ModelMapperImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/springfox/documentation/swagger2/mappers/LicenseMapperImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/springfox/documentation/swagger2/mappers/SecurityMapperImpl.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiListingReferenceScanner.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiDocumentationScanner.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiDescriptionReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiListingReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/CachingOperationReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/MediaTypeReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiListingScanner.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiModelReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/scanners/ApiDescriptionLookup.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationModelsProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationDeprecatedReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/ResponseMessagesReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationParameterReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/DefaultTagsProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationTagsReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/ApiOperationReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/DefaultOperationReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationParameterRequestConditionReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationParameterHeadersConditionReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/OperationResponseClassReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/operation/CachingOperationNameGenerator.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ParameterMultiplesReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ModelAttributeParameterExpander.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ParameterTypeReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ParameterRequiredReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ParameterDataTypeReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ParameterDefaultReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ParameterNameReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/readers/parameter/ExpandedParameterBuilder.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsManager.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/paths/QueryStringUriTemplateDecorator.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/paths/PathMappingDecorator.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/paths/PathSanitizer.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/paths/OperationPathDecorator.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/CachingModelDependencyProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/TypeNameExtractor.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/plugins/PropertyDiscriminatorBasedInheritancePlugin.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/plugins/XmlModelPlugin.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/plugins/SchemaPluginsManager.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/CachingModelPropertiesProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/ObjectMapperBeanPropertyNamingStrategy.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/bean/AccessorsProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/field/FieldProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/XmlPropertyPlugin.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/OptimizedModelPropertiesProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/property/FactoryMethodProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/CachingModelProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/DefaultModelDependencyProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/JacksonEnumTypeDeterminer.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/springfox/documentation/schema/DefaultModelProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/schema/ApiModelPropertyPropertyBuilder.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/schema/ApiModelTypeNameProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/schema/ApiModelBuilder.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationImplicitParameterReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/VendorExtensionsReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/SwaggerOperationResponseClassReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/SwaggerOperationModelsProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/SwaggerMediaTypeReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationHttpMethodReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationImplicitParametersReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationAuthReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationHiddenReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationSummaryReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/SwaggerResponseMessageReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationNicknameIntoUniqueIdReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationPositionReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/OperationNotesReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/operation/SwaggerOperationTagsReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/parameter/ApiParamParameterBuilder.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/readers/parameter/SwaggerExpandedParameterBuilder.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/web/SwaggerApiListingReader.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/web/ClassOrApiAnnotationResourceGrouping.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/web/InMemorySwaggerResourcesProvider.class]
2021-01-11 16:47:36 -Identified candidate component class: URL [jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/springfox/documentation/swagger/web/ApiResourceController.class]
2021-01-11 16:47:36 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.datasource.type' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.datasource.url' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.aop.auto' in PropertySource 'configurationProperties' with value of type Boolean
2021-01-11 16:47:37 -Found key 'spring.mail.host' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.mail.host' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.devtools.restart.enabled' in PropertySource 'configurationProperties' with value of type Boolean
2021-01-11 16:47:37 -Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\ArticleMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\ArticleTagMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\ArticleUserFabulousMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\ArttypeMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\CommentMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\DefaultAdminuserMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\DeptMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\DownloadMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\FileMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\LinksMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\LogMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\MenuMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\NoticeMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\NoticeUserMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\PowerMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\PowerRoleMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\RoleMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\RoleUserMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\SystemMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\TagMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\TaskMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\TvMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\TvtypeMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\UserMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\UserTagMapper.class]
2021-01-11 16:47:37 -Identified candidate component class: file [F:\JavaWorkSpace\myblog\target\classes\com\dong\system\mapper\WheelMapper.class]
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'articleMapper' and 'com.dong.system.mapper.ArticleMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'articleMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'articleTagMapper' and 'com.dong.system.mapper.ArticleTagMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'articleTagMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'articleUserFabulousMapper' and 'com.dong.system.mapper.ArticleUserFabulousMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'articleUserFabulousMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'arttypeMapper' and 'com.dong.system.mapper.ArttypeMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'arttypeMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'commentMapper' and 'com.dong.system.mapper.CommentMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'commentMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'defaultAdminuserMapper' and 'com.dong.system.mapper.DefaultAdminuserMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'defaultAdminuserMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'deptMapper' and 'com.dong.system.mapper.DeptMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'deptMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'downloadMapper' and 'com.dong.system.mapper.DownloadMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'downloadMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'fileMapper' and 'com.dong.system.mapper.FileMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'fileMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'linksMapper' and 'com.dong.system.mapper.LinksMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'linksMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'logMapper' and 'com.dong.system.mapper.LogMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'logMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'menuMapper' and 'com.dong.system.mapper.MenuMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'menuMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'noticeMapper' and 'com.dong.system.mapper.NoticeMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'noticeMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'noticeUserMapper' and 'com.dong.system.mapper.NoticeUserMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'noticeUserMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'powerMapper' and 'com.dong.system.mapper.PowerMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'powerMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'powerRoleMapper' and 'com.dong.system.mapper.PowerRoleMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'powerRoleMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'roleMapper' and 'com.dong.system.mapper.RoleMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'roleMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'roleUserMapper' and 'com.dong.system.mapper.RoleUserMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'roleUserMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'systemMapper' and 'com.dong.system.mapper.SystemMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'systemMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'tagMapper' and 'com.dong.system.mapper.TagMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'tagMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'taskMapper' and 'com.dong.system.mapper.TaskMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'taskMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'tvMapper' and 'com.dong.system.mapper.TvMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'tvMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'tvtypeMapper' and 'com.dong.system.mapper.TvtypeMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'tvtypeMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'userMapper' and 'com.dong.system.mapper.UserMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'userTagMapper' and 'com.dong.system.mapper.UserTagMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'userTagMapper'.
2021-01-11 16:47:37 -Creating MapperFactoryBean with name 'wheelMapper' and 'com.dong.system.mapper.WheelMapper' mapperInterface
2021-01-11 16:47:37 -Enabling autowire by type for MapperFactoryBean with name 'wheelMapper'.
2021-01-11 16:47:37 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.application.admin.enabled' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.aop.auto' in PropertySource 'configurationProperties' with value of type Boolean
2021-01-11 16:47:37 -Found key 'spring.mail.host' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:37 -Found key 'spring.devtools.restart.enabled' in PropertySource 'configurationProperties' with value of type Boolean
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'lifecycleBeanPostProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'shiroConfig'
2021-01-11 16:47:37 -Bean 'shiroConfig' of type [com.dong.shiro.shiroConfig$$EnhancerBySpringCGLIB$$2a8b691d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'defaultAdvisorAutoProxyCreator'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'methodValidationPostProcessor'
2021-01-11 16:47:37 -Creating shared instance of singleton bean 'securityManager'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'myModularRealmAuthenticator'
2021-01-11 16:47:38 -Bean 'myModularRealmAuthenticator' of type [com.dong.shiro.MyModularRealmAuthenticator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'myrealm'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'hashedCredentialsMatcher'
2021-01-11 16:47:38 -Bean 'hashedCredentialsMatcher' of type [org.apache.shiro.authc.credential.HashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'roleServiceImpl'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'roleMapper'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'sqlSessionFactory'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration'
2021-01-11 16:47:38 -Cannot find '.class' file for class [class com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$646918f9] - unable to determine constructor/method parameter names
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2021-01-11 16:47:38 -DeBug: MyBatis Plus Global configuration Initializing !
2021-01-11 16:47:38 -addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
2021-01-11 16:47:38 -addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
2021-01-11 16:47:38 -addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
2021-01-11 16:47:38 -addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
2021-01-11 16:47:38 -addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
2021-01-11 16:47:38 -addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
2021-01-11 16:47:38 -Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:38 -Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2021-01-11 16:47:38 -Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:38 -Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$646918f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'dataSource'
2021-01-11 16:47:38 -Creating shared instance of singleton bean 'druidDBConfig'
2021-01-11 16:47:38 -Found key 'spring.datasource.url' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.url' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.username' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.username' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.password' in PropertySource 'configurationProperties' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.password' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.driverClassName' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.driverClassName' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.initialSize' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.initialSize' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.minIdle' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.minIdle' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.maxActive' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.maxActive' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.maxWait' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.maxWait' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.timeBetweenEvictionRunsMillis' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.timeBetweenEvictionRunsMillis' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.minEvictableIdleTimeMillis' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.minEvictableIdleTimeMillis' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.validationQuery' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.validationQuery' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.testWhileIdle' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Boolean
2021-01-11 16:47:38 -Found key 'spring.datasource.testWhileIdle' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.testOnBorrow' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Boolean
2021-01-11 16:47:38 -Found key 'spring.datasource.testOnBorrow' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.testOnReturn' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Boolean
2021-01-11 16:47:38 -Found key 'spring.datasource.testOnReturn' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.poolPreparedStatements' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Boolean
2021-01-11 16:47:38 -Found key 'spring.datasource.poolPreparedStatements' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.maxPoolPreparedStatementPerConnectionSize' in PropertySource 'Config resource 'class path resource [application-dev.yml]' via location 'optional:classpath:/'' with value of type Integer
2021-01-11 16:47:38 -Found key 'spring.datasource.maxPoolPreparedStatementPerConnectionSize' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.filters' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:38 -Found key 'spring.datasource.filters' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:38 -Bean 'druidDBConfig' of type [com.dong.common.dataSourceConfig.DruidDBConfig$$EnhancerBySpringCGLIB$$724a0d85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:38 -{conn-10001} connected
2021-01-11 16:47:38 -{dataSource-1} inited
2021-01-11 16:47:38 -Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:38 -Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2021-01-11 16:47:38 -Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Article matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.ArticleTag matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.ArticleUserFabulous matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Arttype matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Comment matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.DefaultAdminuser matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Dept matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Download matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.FileEntity matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Links matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Log matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Menu matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Notice matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.NoticeUser matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.OnlineUser matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Power matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.PowerRole matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Role matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.RoleUser matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.System matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Tag matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Task matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Tree matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Tv matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Tvtype matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.User matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.UserTag matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Checking to see if class com.dong.system.entity.Wheel matches criteria [is assignable to Object]
2021-01-11 16:47:38 -Scanned package: 'com.dong.system.entity' for aliases
2021-01-11 16:47:38 -{conn-10001} pool-connect
2021-01-11 16:47:38 -{conn-10001} pool-recycle
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.pinglunnum
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.updateCount
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectArticleAll
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.insert
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.delete
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.deleteByMap
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.deleteById
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.deleteBatchIds
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.update
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.updateById
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectById
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectBatchIds
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectByMap
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectOne
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectCount
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectMaps
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectMapsPage
2021-01-11 16:47:38 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\ArticleMapper.xml]'
2021-01-11 16:47:39 -Warn: Could not find @TableId in Class: com.dong.system.entity.ArticleTag.
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleTagMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\ArticleTagMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArticleUserFabulousMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\ArticleUserFabulousMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectbyId
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectAll
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectparentid
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.ArttypeMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\ArttypeMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectByArticleId
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.CommentMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\CommentMapper.xml]'
2021-01-11 16:47:39 -Warn: Could not find @TableId in Class: com.dong.system.entity.DefaultAdminuser.
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DefaultAdminuserMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\DefaultAdminuserMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.listParentDept
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.listAllDept
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DeptMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\DeptMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.DownloadMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\DownloadMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.FileMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\FileMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LinksMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\LinksMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.LogMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\LogMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectMenuAll
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.selectPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.MenuMapper.mySelectById
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\MenuMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\NoticeMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectNotUser
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.noticebyid
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.delete
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.deleteByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.deleteById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.deleteBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.update
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.updateById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectById
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectBatchIds
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectByMap
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectOne
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectCount
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectMaps
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectMapsPage
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectObjs
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectList
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.NoticeUserMapper.selectPage
2021-01-11 16:47:39 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\NoticeUserMapper.xml]'
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectAllMenu
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectByUserId
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.PowerMapper.insert
2021-01-11 16:47:39 -addMappedStatement: com.dong.system.mapper.PowerMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\PowerMapper.xml]'
2021-01-11 16:47:40 -Warn: Could not find @TableId in Class: com.dong.system.entity.PowerRole.
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.PowerRoleMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\PowerRoleMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectUserid
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\RoleMapper.xml]'
2021-01-11 16:47:40 -Warn: Could not find @TableId in Class: com.dong.system.entity.RoleUser.
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.RoleUserMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\RoleUserMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.SystemMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\SystemMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TagMapper.selectByArticleId
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\TagMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TaskMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\TaskMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\TvMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectDistinct
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.TvtypeMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\TvtypeMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.updatelogupdate
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.updateJfADD
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.SelectByName
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.SelectByEmail
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectByUserRole
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectByAllRole
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.SelectByAdminName
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\UserMapper.xml]'
2021-01-11 16:47:40 -Warn: Could not find @TableId in Class: com.dong.system.entity.UserTag.
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.UserTagMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\UserTagMapper.xml]'
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectAll
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.getusername
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.insert
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.delete
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.deleteByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.deleteById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.deleteBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.update
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.updateById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectById
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectBatchIds
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectByMap
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectOne
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectCount
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectMaps
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectMapsPage
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectObjs
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectList
2021-01-11 16:47:40 -addMappedStatement: com.dong.system.mapper.WheelMapper.selectPage
2021-01-11 16:47:40 -Parsed mapper file: 'file [F:\JavaWorkSpace\myblog\target\classes\mybatis\system\WheelMapper.xml]'
2021-01-11 16:47:40 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'sqlSessionTemplate'
2021-01-11 16:47:40 -Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2021-01-11 16:47:40 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'roleMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'roleServiceImpl' of type [com.dong.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'powerServiceImpl'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'powerMapper'
2021-01-11 16:47:40 -Bean 'powerMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'powerMapper' of type [com.sun.proxy.$Proxy77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'powerServiceImpl' of type [com.dong.system.service.impl.PowerServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Initializing bean [myrealm]...
2021-01-11 16:47:40 -No authorizationCache instance set.  Checking for a cacheManager...
2021-01-11 16:47:40 -No cache or cacheManager properties have been set.  Authorization cache cannot be obtained.
2021-01-11 16:47:40 -Bean 'myrealm' of type [com.dong.shiro.myRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'myadminrealm'
2021-01-11 16:47:40 -Initializing bean [myadminrealm]...
2021-01-11 16:47:40 -Bean 'myadminrealm' of type [com.dong.shiro.myAdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'rememberMeManager'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'rememberMeCookie'
2021-01-11 16:47:40 -Bean 'rememberMeCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'rememberMeManager' of type [org.apache.shiro.web.mgt.CookieRememberMeManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'sessionManager'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'mysessionListener'
2021-01-11 16:47:40 -Bean 'mysessionListener' of type [com.dong.shiro.SessionListenersUser] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'sessionCookie'
2021-01-11 16:47:40 -Bean 'sessionCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'sessionDAO'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'shiroehcacheManager'
2021-01-11 16:47:40 -Initializing bean [shiroehcacheManager]...
2021-01-11 16:47:40 -cacheManager property not set.  Constructing CacheManager instance... 
2021-01-11 16:47:40 -Opening resource from class path [config/ehcache.xml]
2021-01-11 16:47:40 -Configuring ehcache from InputStream
2021-01-11 16:47:40 -Ignoring ehcache attribute xmlns:xsi
2021-01-11 16:47:40 -Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
2021-01-11 16:47:40 -Disk Store Path: D:/ehcache
2021-01-11 16:47:40 -propertiesString is null.
2021-01-11 16:47:40 -No CacheManagerEventListenerFactory class specified. Skipping...
2021-01-11 16:47:40 -No BootstrapCacheLoaderFactory class specified. Skipping...
2021-01-11 16:47:40 -CacheWriter factory not configured. Skipping...
2021-01-11 16:47:40 -No CacheExceptionHandlerFactory class specified. Skipping...
2021-01-11 16:47:40 -No BootstrapCacheLoaderFactory class specified. Skipping...
2021-01-11 16:47:40 -CacheWriter factory not configured. Skipping...
2021-01-11 16:47:40 -No CacheExceptionHandlerFactory class specified. Skipping...
2021-01-11 16:47:40 -No BootstrapCacheLoaderFactory class specified. Skipping...
2021-01-11 16:47:40 -CacheWriter factory not configured. Skipping...
2021-01-11 16:47:40 -No CacheExceptionHandlerFactory class specified. Skipping...
2021-01-11 16:47:40 -No BootstrapCacheLoaderFactory class specified. Skipping...
2021-01-11 16:47:40 -CacheWriter factory not configured. Skipping...
2021-01-11 16:47:40 -No CacheExceptionHandlerFactory class specified. Skipping...
2021-01-11 16:47:40 -Using diskstore path D:\ehcache
2021-01-11 16:47:40 -Holding exclusive lock on D:\ehcache\.ehcache-diskstore.lock
2021-01-11 16:47:40 -Matching data file missing (or empty) for index file. Deleting index file D:\ehcache\shiro-active%0053ession%0043ache.index
2021-01-11 16:47:40 -Failed to delete file shiro-active%0053ession%0043ache.index
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: REMOTE_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_COMMIT
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_ROLLBACK
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_RECOVERY
2021-01-11 16:47:40 -Mocking Operation Statistic: CLUSTER_EVENT
2021-01-11 16:47:40 -Mocking Operation Statistic: NONSTOP
2021-01-11 16:47:40 -Initialised cache: shiro-activeSessionCache
2021-01-11 16:47:40 -CacheDecoratorFactory not configured. Skipping for 'shiro-activeSessionCache'.
2021-01-11 16:47:40 -CacheDecoratorFactory not configured for defaultCache. Skipping for 'shiro-activeSessionCache'.
2021-01-11 16:47:40 -Cache: jlbk.shiro.systemcache has a maxElementsInMemory of 0. This might lead to performance degradation or OutOfMemoryError at Terracotta client.From Ehcache 2.0 onwards this has been changed to mean a store with no capacity limit. Set it to 1 if you want no elements cached in memory
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: REMOTE_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_COMMIT
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_ROLLBACK
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_RECOVERY
2021-01-11 16:47:40 -Mocking Operation Statistic: CLUSTER_EVENT
2021-01-11 16:47:40 -Mocking Operation Statistic: NONSTOP
2021-01-11 16:47:40 -Initialised cache: jlbk.shiro.systemcache
2021-01-11 16:47:40 -CacheDecoratorFactory not configured. Skipping for 'jlbk.shiro.systemcache'.
2021-01-11 16:47:40 -CacheDecoratorFactory not configured for defaultCache. Skipping for 'jlbk.shiro.systemcache'.
2021-01-11 16:47:40 -Cache: lemonCache has a maxElementsInMemory of 0. This might lead to performance degradation or OutOfMemoryError at Terracotta client.From Ehcache 2.0 onwards this has been changed to mean a store with no capacity limit. Set it to 1 if you want no elements cached in memory
2021-01-11 16:47:40 -Initialized net.sf.ehcache.store.MemoryStore for lemonCache
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_DISK_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_DISK_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: REMOTE_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: DISK_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: DISK_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: DISK_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_COMMIT
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_ROLLBACK
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_RECOVERY
2021-01-11 16:47:40 -Mocking Operation Statistic: CLUSTER_EVENT
2021-01-11 16:47:40 -Mocking Operation Statistic: NONSTOP
2021-01-11 16:47:40 -Initialised cache: lemonCache
2021-01-11 16:47:40 -CacheDecoratorFactory not configured. Skipping for 'lemonCache'.
2021-01-11 16:47:40 -CacheDecoratorFactory not configured for defaultCache. Skipping for 'lemonCache'.
2021-01-11 16:47:40 -implicit cacheManager created successfully.
2021-01-11 16:47:40 -Bean 'shiroehcacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'sessionIdGenerator'
2021-01-11 16:47:40 -Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -CacheManager [org.apache.shiro.cache.ehcache.EhCacheManager@4dc9aa2e] configured.  Building authentication cache 'com.dong.shiro.myRealm.authenticationCache'
2021-01-11 16:47:40 -Cache with name 'com.dong.shiro.myRealm.authenticationCache' does not yet exist.  Creating now.
2021-01-11 16:47:40 -Cache: com.dong.shiro.myRealm.authenticationCache has a maxElementsInMemory of 0. This might lead to performance degradation or OutOfMemoryError at Terracotta client.From Ehcache 2.0 onwards this has been changed to mean a store with no capacity limit. Set it to 1 if you want no elements cached in memory
2021-01-11 16:47:40 -Matching data file missing (or empty) for index file. Deleting index file D:\ehcache\com%002edong%002eshiro%002emy%0052ealm%002eauthentication%0043ache.index
2021-01-11 16:47:40 -Failed to delete file com%002edong%002eshiro%002emy%0052ealm%002eauthentication%0043ache.index
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: REMOTE_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_COMMIT
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_ROLLBACK
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_RECOVERY
2021-01-11 16:47:40 -Mocking Operation Statistic: CLUSTER_EVENT
2021-01-11 16:47:40 -Mocking Operation Statistic: NONSTOP
2021-01-11 16:47:40 -Initialised cache: com.dong.shiro.myRealm.authenticationCache
2021-01-11 16:47:40 -CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.dong.shiro.myRealm.authenticationCache'.
2021-01-11 16:47:40 -Added EhCache named [com.dong.shiro.myRealm.authenticationCache]
2021-01-11 16:47:40 -No authorizationCache instance set.  Checking for a cacheManager...
2021-01-11 16:47:40 -CacheManager [org.apache.shiro.cache.ehcache.EhCacheManager@4dc9aa2e] has been configured.  Building authorization cache named [com.dong.shiro.myRealm.authorizationCache]
2021-01-11 16:47:40 -Cache with name 'com.dong.shiro.myRealm.authorizationCache' does not yet exist.  Creating now.
2021-01-11 16:47:40 -Cache: com.dong.shiro.myRealm.authorizationCache has a maxElementsInMemory of 0. This might lead to performance degradation or OutOfMemoryError at Terracotta client.From Ehcache 2.0 onwards this has been changed to mean a store with no capacity limit. Set it to 1 if you want no elements cached in memory
2021-01-11 16:47:40 -Matching data file missing (or empty) for index file. Deleting index file D:\ehcache\com%002edong%002eshiro%002emy%0052ealm%002eauthorization%0043ache.index
2021-01-11 16:47:40 -Failed to delete file com%002edong%002eshiro%002emy%0052ealm%002eauthorization%0043ache.index
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: REMOTE_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_COMMIT
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_ROLLBACK
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_RECOVERY
2021-01-11 16:47:40 -Mocking Operation Statistic: CLUSTER_EVENT
2021-01-11 16:47:40 -Mocking Operation Statistic: NONSTOP
2021-01-11 16:47:40 -Initialised cache: com.dong.shiro.myRealm.authorizationCache
2021-01-11 16:47:40 -CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.dong.shiro.myRealm.authorizationCache'.
2021-01-11 16:47:40 -Added EhCache named [com.dong.shiro.myRealm.authorizationCache]
2021-01-11 16:47:40 -CacheManager [org.apache.shiro.cache.ehcache.EhCacheManager@4dc9aa2e] configured.  Building authentication cache 'com.dong.shiro.myAdminRealm.authenticationCache.1'
2021-01-11 16:47:40 -Cache with name 'com.dong.shiro.myAdminRealm.authenticationCache.1' does not yet exist.  Creating now.
2021-01-11 16:47:40 -Cache: com.dong.shiro.myAdminRealm.authenticationCache.1 has a maxElementsInMemory of 0. This might lead to performance degradation or OutOfMemoryError at Terracotta client.From Ehcache 2.0 onwards this has been changed to mean a store with no capacity limit. Set it to 1 if you want no elements cached in memory
2021-01-11 16:47:40 -Matching data file missing (or empty) for index file. Deleting index file D:\ehcache\com%002edong%002eshiro%002emy%0041dmin%0052ealm%002eauthentication%0043ache%002e1.index
2021-01-11 16:47:40 -Failed to delete file com%002edong%002eshiro%002emy%0041dmin%0052ealm%002eauthentication%0043ache%002e1.index
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LOCAL_OFFHEAP_SIZE_BYTES
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: WRITER_QUEUE_LENGTH
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: REMOTE_SIZE
2021-01-11 16:47:40 -Mocking Pass-Through Statistic: LAST_REJOIN_TIMESTAMP
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_GET
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_PUT
2021-01-11 16:47:40 -Mocking Operation Statistic: OFFHEAP_REMOVE
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_COMMIT
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_ROLLBACK
2021-01-11 16:47:40 -Mocking Operation Statistic: XA_RECOVERY
2021-01-11 16:47:40 -Mocking Operation Statistic: CLUSTER_EVENT
2021-01-11 16:47:40 -Mocking Operation Statistic: NONSTOP
2021-01-11 16:47:40 -Initialised cache: com.dong.shiro.myAdminRealm.authenticationCache.1
2021-01-11 16:47:40 -CacheDecoratorFactory not configured for defaultCache. Skipping for 'com.dong.shiro.myAdminRealm.authenticationCache.1'.
2021-01-11 16:47:40 -Added EhCache named [com.dong.shiro.myAdminRealm.authenticationCache.1]
2021-01-11 16:47:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'dataSourceInitializerPostProcessor'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2021-01-11 16:47:40 -Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'objectMapperConfigurer'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'authorizationAttributeSourceAdvisor'
2021-01-11 16:47:40 -Autowiring by type from bean name 'authorizationAttributeSourceAdvisor' via factory method to bean named 'mysessionListener'
2021-01-11 16:47:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'org.springframework.cache.annotation.ProxyCachingConfiguration'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2021-01-11 16:47:40 -Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2021-01-11 16:47:40 -Found AspectJ method: public java.lang.Object com.dong.common.aspect.LogAspectJ.around(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
2021-01-11 16:47:40 -Found AspectJ method: public java.lang.Object com.dong.common.aspect.WebLogAspect.doAround(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable
2021-01-11 16:47:40 -Found AspectJ method: public void com.dong.common.aspect.WebLogAspect.doBefore(org.aspectj.lang.JoinPoint) throws java.lang.Throwable
2021-01-11 16:47:40 -Found AspectJ method: public void com.dong.common.aspect.WebLogAspect.doAfterReturning(java.lang.Object) throws java.lang.Throwable
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'transactionAttributeSource'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'transactionInterceptor'
2021-01-11 16:47:41 -Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'cacheOperationSource'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'cacheInterceptor'
2021-01-11 16:47:41 -Autowiring by type from bean name 'cacheInterceptor' via factory method to bean named 'cacheOperationSource'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.cache.config.internalCacheAdvisor' via factory method to bean named 'cacheOperationSource'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.cache.config.internalCacheAdvisor' via factory method to bean named 'cacheInterceptor'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'shiroFilter'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2021-01-11 16:47:41 -Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@76936bfe]
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2021-01-11 16:47:41 -Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2021-01-11 16:47:41 -Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2021-01-11 16:47:41 -Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2021-01-11 16:47:41 -Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'errorPageCustomizer'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'dispatcherServletRegistration'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'dispatcherServlet'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-11 16:47:41 -Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-11 16:47:41 -Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2021-01-11 16:47:41 -Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'multipartConfigElement'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2021-01-11 16:47:41 -Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2021-01-11 16:47:41 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2021-01-11 16:47:41 -Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2021-01-11 16:47:41 -Code archive: D:\Tools\Maven3.2.3\LocalWarehouse\org\springframework\boot\spring-boot\2.4.1\spring-boot-2.4.1.jar
2021-01-11 16:47:41 -Code archive: D:\Tools\Maven3.2.3\LocalWarehouse\org\springframework\boot\spring-boot\2.4.1\spring-boot-2.4.1.jar
2021-01-11 16:47:41 -None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2021-01-11 16:47:41 -Tomcat initialized with port(s): 8889 (http)
2021-01-11 16:47:41 -Initializing ProtocolHandler ["http-nio-0.0.0.0-8889"]
2021-01-11 16:47:41 -Starting service [Tomcat]
2021-01-11 16:47:41 -Starting Servlet engine: [Apache Tomcat/9.0.41]
2021-01-11 16:47:42 -Initializing Spring embedded WebApplicationContext
2021-01-11 16:47:42 -Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2021-01-11 16:47:42 -Root WebApplicationContext: initialization completed in 7823 ms
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'druidServlet'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'filterRegistrationBean'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'servletListenerRegistrationBean1'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'listenerRegistractionBeanConfig'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'servletListenerRegistrationBean2'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'homeSystemListener'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'systemServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'systemMapper'
2021-01-11 16:47:42 -Autowiring by type from bean name 'servletListenerRegistrationBean2' via factory method to bean named 'homeSystemListener'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'xssRequestFilter'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'filterRegistractionBeanConfig'
2021-01-11 16:47:42 -Creating Shiro Filter instance.
2021-01-11 16:47:42 -Creating chain [/homestatic/**] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/homestatic/**] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/admin/login] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/admin/login] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/static/**] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/static/**] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/login] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/login] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/admin/yzm] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/admin/yzm] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/admin/code] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/admin/code] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/upload/**] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/upload/**] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/swagger-ui.html] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/swagger-ui.html] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/autherror] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/autherror] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/admin/logout] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/admin/logout] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/error/404.html] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/error/404.html] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/unauthorized/**] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/unauthorized/**] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/admin/sendEmail/*] from String definition [anon]
2021-01-11 16:47:42 -Attempting to apply path [/admin/sendEmail/*] to filter [anon] with config [null]
2021-01-11 16:47:42 -Creating chain [/admin/**] from String definition [user]
2021-01-11 16:47:42 -Attempting to apply path [/admin/**] to filter [user] with config [null]
2021-01-11 16:47:42 -Creating chain [/**] from String definition [anon,rembuser]
2021-01-11 16:47:42 -Attempting to apply path [/**] to filter [anon] with config [null]
2021-01-11 16:47:42 -Attempting to apply path [/**] to filter [rembuser] with config [null]
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'kickoutSessionControlFilter'
2021-01-11 16:47:42 -Autowiring by type from bean name 'kickoutSessionControlFilter' via factory method to bean named 'mysessionListener'
2021-01-11 16:47:42 -Using existing EHCache named [jlbk.shiro.systemcache]
2021-01-11 16:47:42 -Found filter chain candidate filter 'kickoutSessionControlFilter'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'requestContextFilter'
2021-01-11 16:47:42 -Found filter chain candidate filter 'requestContextFilter'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'formContentFilter'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2021-01-11 16:47:42 -Found filter chain candidate filter 'formContentFilter'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'characterEncodingFilter'
2021-01-11 16:47:42 -Found filter chain candidate filter 'characterEncodingFilter'
2021-01-11 16:47:42 -Mapping filters: filterRegistrationBean urls=[/*] order=2147483646, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, shiroFilter urls=[/*] order=2147483647, kickoutSessionControlFilter urls=[/*] order=2147483647
2021-01-11 16:47:42 -Mapping servlets: statViewServlet urls=[/druid/*], dispatcherServlet urls=[/]
2021-01-11 16:47:42 -Creating a new SqlSession
2021-01-11 16:47:42 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c7da90] was not registered for synchronization because synchronization is not active
2021-01-11 16:47:42 -Fetching JDBC Connection from DataSource
2021-01-11 16:47:42 -{conn-10001} pool-connect
2021-01-11 16:47:42 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:47:42 -==>  Preparing: SELECT id,title,keyword,description,usertext,logo,weixin,beiantext,state,developer,powerby FROM sys_system 
2021-01-11 16:47:42 -{conn-10001, pstmt-20000} created. SELECT  id,title,keyword,description,usertext,logo,weixin,beiantext,state,developer,powerby  FROM sys_system
2021-01-11 16:47:42 -==> Parameters: 
2021-01-11 16:47:42 -{conn-10001, pstmt-20000} Parameters : []
2021-01-11 16:47:42 -{conn-10001, pstmt-20000} Types : []
2021-01-11 16:47:42 -{conn-10001, pstmt-20000} executed. 42.0043 millis. SELECT  id,title,keyword,description,usertext,logo,weixin,beiantext,state,developer,powerby  FROM sys_system
2021-01-11 16:47:42 -{conn-10001, pstmt-20000, rs-50000} open
2021-01-11 16:47:42 -{conn-10001, pstmt-20000, rs-50000} Header: [id, title, keyword, description, usertext, logo, weixin, beiantext, state, developer, powerby]
2021-01-11 16:47:42 -{conn-10001, pstmt-20000, rs-50000} Result: [1, DM个人博客, java，php，web前端，sql，数据库，互联网，it，大数据，spring，微服务, 我的个人博客, 生命不息，学习不止, /upload/default/1573882095032.png, /upload/default/1573882187204.jpg, 粤88888, 1, 董猛, 所有文章未经授权禁止转载、摘编、复制或建立镜像，如有违反，追究法律责任。举报邮箱：<a href="http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=256350962@qq.com" rel="nofollow">256350962@qq.com</a>]
2021-01-11 16:47:42 -<==      Total: 1
2021-01-11 16:47:42 -{conn-10001, pstmt-20000, rs-50000} closed
2021-01-11 16:47:42 -{conn-10001, pstmt-20000} clearParameters. 
2021-01-11 16:47:42 -{conn-10001, pstmt-20000} enter cache
2021-01-11 16:47:42 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c7da90]
2021-01-11 16:47:42 -{conn-10001} pool-recycle
2021-01-11 16:47:42 -Filter 'requestContextFilter' configured for use
2021-01-11 16:47:42 -Filter 'characterEncodingFilter' configured for use
2021-01-11 16:47:42 -Filter 'formContentFilter' configured for use
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'dongApplication'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'mvcConfig'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'fileAdd'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'mybatisPlusConfig'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'logAspectJ'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'logServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'logMapper'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'webLogAspect'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'myInterceptor'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'swaggerConfig'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'adviceControllerArttype'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'arttypeServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'arttypeMapper'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'tagServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'tagMapper'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'articleUserFabulousController'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'articleUserFabulousServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'articleUserFabulousMapper'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'commentController'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'commentServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'commentMapper'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'HomeLoginController'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'userServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'userMapper'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'defaultAdminuserServiceImpl'
2021-01-11 16:47:42 -Creating shared instance of singleton bean 'defaultAdminuserMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'userCoreController'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'userTagServiceImpl'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'userTagMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'articleServiceImpl'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'luceneUtils'
2021-01-11 16:47:43 -Autowiring by type from bean name 'luceneUtils' via constructor to bean named 'fileAdd'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'articleMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'wheelServiceImpl'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'wheelMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'linksServiceImpl'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'linksMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'articleTagServiceImpl'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'articleTagMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'homeindexController'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'jianlubokeController'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'zyfxController'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'downloadServiceImpl'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'downloadMapper'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'articleJob'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'myAutoWiredSptingBeanJobFactory'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'quartzManager'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'scheduler'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'quartzConfig'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'schedulerFactoryBean'
2021-01-11 16:47:43 -Creating shared instance of singleton bean 'properties'
2021-01-11 16:47:43 -Using default implementation for ThreadExecutor
2021-01-11 16:47:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-01-11 16:47:44 -Quartz Scheduler v.2.2.1 created.
2021-01-11 16:47:44 -RAMJobStore initialized.
2021-01-11 16:47:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-01-11 16:47:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-01-11 16:47:44 -Quartz scheduler version: 2.2.1
2021-01-11 16:47:44 -JobFactory set to: com.dong.quartz.MyAutoWiredSptingBeanJobFactory@5670976a
2021-01-11 16:47:44 -Autowiring by type from bean name 'quartzManager' via constructor to bean named 'scheduler'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'taskServiceImpl'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'taskMapper'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'scheduleJobInitListener'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'myJob'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'ehcacheConfig'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'adminUserController'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'systemColumnUrl'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'menuServiceImpl'
2021-01-11 16:47:44 -Creating shared instance of singleton bean 'menuMapper'
2021-01-11 16:47:45 -Checking for available updated version of Quartz...
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'roleUserServiceImpl'
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'roleUserMapper'
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'deptServiceImpl'
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'deptMapper'
2021-01-11 16:47:45 -Quartz version update check failed: Server returned HTTP response code: 403 for URL: http://www.terracotta.org/kit/reflector?kitID=quartz&pageID=update.properties&id=-1062692351&os-name=Windows+10&jvm-name=Java+HotSpot%28TM%29+64-Bit+Server+VM&jvm-version=1.8.0_91&platform=amd64&tc-version=2.2.1&tc-product=Quartz&source=Quartz&uptime-secs=1&patch=UNKNOWN
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'arctypeController'
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'articleController'
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'fileServiceImpl'
2021-01-11 16:47:45 -Creating shared instance of singleton bean 'fileMapper'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'articleTagController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'defaultAdminuserController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'deptController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'downloadController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'fileAdminController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'linksController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'logController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'menuController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'noticeController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'noticeServiceImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'noticeMapper'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'noticeUserServiceImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'noticeUserMapper'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'noticeUserController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'powerController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'powerRoleServiceImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'powerRoleMapper'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'roleController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'roleUserController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'systemController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'systemUserOnLineController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'onlineUserService'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'tagController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'taskController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'tvController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'userController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'wheelController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'indexController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'springEmailUtils'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'mailSender'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2021-01-11 16:47:46 -Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2021-01-11 16:47:46 -Found key 'spring.mail.username' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:46 -Found key 'spring.mail.username' in PropertySource 'environmentProperties' with value of type String
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'loginController'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'rndServlet'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'shiroControllerAdvice'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'tvServiceImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'tvMapper'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'tvtypeServiceImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'tvtypeMapper'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'myWebApplictionUtil'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'serviceModelToSwagger2MapperImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'modelMapperImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'parameterMapperImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'securityMapperImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'licenseMapperImpl'
2021-01-11 16:47:46 -Creating shared instance of singleton bean 'vendorExtensionsMapperImpl'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiListingReferenceScanner'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiDocumentationScanner'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiListingScanner'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiDescriptionReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'cachingOperationReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiOperationReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'documentationPluginsManager'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'documentationPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiListingBuilderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterBuilderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'expandedParameterBuilderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationBuilderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'resourceGroupingStrategyRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationModelsProviderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaultsProviderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'pathDecoratorRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiListingScannerPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'cachingOperationNameGenerator'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiOperationReader' via constructor to bean named 'documentationPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiOperationReader' via constructor to bean named 'cachingOperationNameGenerator'
2021-01-11 16:47:47 -Autowiring by type from bean name 'cachingOperationReader' via constructor to bean named 'apiOperationReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiDescriptionLookup'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'cachingOperationReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'documentationPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'apiDescriptionLookup'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiModelReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'cachingModelProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaultModelProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'springfox.documentation.schema.configuration.ModelsConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'cachingModelPropertiesProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'optimized'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'accessorsProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'accessorsProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'fieldProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'fieldProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'factoryMethodProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'factoryMethodProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'objectMapperBeanPropertyNamingStrategy'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'schemaPluginsManager'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'modelPropertyBuilderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'modelBuilderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'syntheticModelProviderPluginRegistry'
2021-01-11 16:47:47 -Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'modelPropertyBuilderPluginRegistry'
2021-01-11 16:47:47 -Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'modelBuilderPluginRegistry'
2021-01-11 16:47:47 -Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'syntheticModelProviderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'typeNameExtractor'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'typeNameProviderPluginRegistry'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'typeNameProviderPluginRegistry'
2021-01-11 16:47:47 -Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'accessorsProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'fieldProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'factoryMethodProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'objectMapperBeanPropertyNamingStrategy'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'schemaPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'optimized' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Autowiring by type from bean name 'cachingModelPropertiesProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'cachingModelPropertiesProvider' via constructor to bean named 'optimized'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'cachingModelDependencyProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaultModelDependencyProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'cachingModelPropertiesProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'schemaPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'cachingModelDependencyProvider' via constructor to bean named 'defaultModelDependencyProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'cachingModelPropertiesProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'cachingModelDependencyProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'schemaPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Autowiring by type from bean name 'cachingModelProvider' via constructor to bean named 'defaultModelProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'cachingModelProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'documentationPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiDescriptionReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiModelReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'documentationPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiDocumentationScanner' via constructor to bean named 'apiListingReferenceScanner'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiDocumentationScanner' via constructor to bean named 'apiListingScanner'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiListingReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'mediaTypeReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationModelsProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationModelsProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationDeprecatedReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'responseMessagesReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationParameterReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'modelAttributeParameterExpander'
2021-01-11 16:47:47 -Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'fieldProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'accessorsProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationParameterReader' via constructor to bean named 'modelAttributeParameterExpander'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationParameterReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaultTagsProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationTagsReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationTagsReader' via constructor to bean named 'defaultTagsProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaultOperationReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationParameterRequestConditionReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationParameterRequestConditionReader' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationParameterHeadersConditionReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationParameterHeadersConditionReader' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationResponseClassReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationResponseClassReader' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterMultiplesReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterTypeReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterRequiredReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'springfox.documentation.spring.web.SpringfoxWebMvcConfiguration'
2021-01-11 16:47:47 -Autowiring by type from bean name 'descriptionResolver' via factory method to bean named 'environment'
2021-01-11 16:47:47 -Autowiring by type from bean name 'parameterRequiredReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterDataTypeReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterDefaultReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'parameterDefaultReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'parameterNameReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'expandedParameterBuilder'
2021-01-11 16:47:47 -Autowiring by type from bean name 'expandedParameterBuilder' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'expandedParameterBuilder' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'documentationPluginsBootstrapper'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'webMvcRequestHandlerProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'methodResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'methodResolver' via factory method to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@68c3645'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@68c3645'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'mvcConversionService'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:47 -Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:47 -Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:47 -178 mappings in 'requestMappingHandlerMapping'
2021-01-11 16:47:47 -Autowiring by type from bean name 'webMvcRequestHandlerProvider' via constructor to bean named 'methodResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'webMvcRequestHandlerProvider' via constructor to bean named 'requestMappingHandlerMapping'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'resourceGroupCache'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaults'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'documentationPluginsManager'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'webMvcRequestHandlerProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'resourceGroupCache'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'apiDocumentationScanner'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'defaults'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'servletContext'
2021-01-11 16:47:47 -Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'environment'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'queryStringUriTemplateDecorator'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'pathMappingDecorator'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'pathSanitizer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationPathDecorator'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'propertyDiscriminatorBasedInheritancePlugin'
2021-01-11 16:47:47 -Autowiring by type from bean name 'propertyDiscriminatorBasedInheritancePlugin' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'propertyDiscriminatorBasedInheritancePlugin' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'xmlModelPlugin'
2021-01-11 16:47:47 -Autowiring by type from bean name 'xmlModelPlugin' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'xmlPropertyPlugin'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiModelPropertyPropertyBuilder'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiModelPropertyPropertyBuilder' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiModelTypeNameProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiModelBuilder'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationImplicitParameterReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationImplicitParameterReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'vendorExtensionsReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerOperationResponseClassReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerOperationModelsProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerOperationModelsProvider' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerMediaTypeReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationHttpMethodReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationImplicitParametersReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationImplicitParametersReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationAuthReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationHiddenReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationSummaryReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationSummaryReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerResponseMessageReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'typeNameExtractor'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'typeResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationNicknameIntoUniqueIdReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationPositionReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'operationNotesReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'operationNotesReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerOperationTagsReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerOperationTagsReader' via constructor to bean named 'defaultTagsProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerParameterDescriptionReader'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerParameterDescriptionReader' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerParameterDescriptionReader' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerExpandedParameterBuilder'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerExpandedParameterBuilder' via constructor to bean named 'descriptionResolver'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swaggerExpandedParameterBuilder' via constructor to bean named 'jacksonEnumTypeDeterminer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swaggerApiListingReader'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'classOrApiAnnotationResourceGrouping'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'inMemorySwaggerResourcesProvider'
2021-01-11 16:47:47 -Autowiring by type from bean name 'inMemorySwaggerResourcesProvider' via constructor to bean named 'environment'
2021-01-11 16:47:47 -Autowiring by type from bean name 'inMemorySwaggerResourcesProvider' via constructor to bean named 'resourceGroupCache'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'apiResourceController'
2021-01-11 16:47:47 -Autowiring by type from bean name 'apiResourceController' via constructor to bean named 'inMemorySwaggerResourcesProvider'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'app.upload-com.dong.util.FileAdd'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'jsonSerializer'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swagger2Module'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration'
2021-01-11 16:47:47 -Autowiring by type from bean name 'jsonSerializer' via factory method to bean named 'swagger2Module'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'springfox.documentation.swagger.configuration.SwaggerCommonConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'swagger2ControllerMapping'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swagger2ControllerMapping' via factory method to bean named 'environment'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swagger2ControllerMapping' via factory method to bean named 'resourceGroupCache'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swagger2ControllerMapping' via factory method to bean named 'serviceModelToSwagger2MapperImpl'
2021-01-11 16:47:47 -Autowiring by type from bean name 'swagger2ControllerMapping' via factory method to bean named 'jsonSerializer'
2021-01-11 16:47:47 -initialising the handler methods
2021-01-11 16:47:47 -Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'docket2'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'docket'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'shiroDialect'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'shirocacheManager'
2021-01-11 16:47:47 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar!/ehcache-failsafe.xml
2021-01-11 16:47:47 -Configuring ehcache from URL: jar:file:/D:/Tools/Maven3.2.3/LocalWarehouse/net/sf/ehcache/ehcache/2.10.6/ehcache-2.10.6.jar!/ehcache-failsafe.xml
2021-01-11 16:47:47 -Configuring ehcache from InputStream
2021-01-11 16:47:47 -Ignoring ehcache attribute xmlns:xsi
2021-01-11 16:47:47 -Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
2021-01-11 16:47:47 -Disk Store Path: C:\Users\DM\AppData\Local\Temp\
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'taskExecutorBuilder'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2021-01-11 16:47:47 -Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2021-01-11 16:47:47 -Creating shared instance of singleton bean 'defaultValidator'
2021-01-11 16:47:47 -Loaded expression factory via original TCCL
2021-01-11 16:47:47 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-01-11 16:47:47 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-01-11 16:47:47 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-01-11 16:47:47 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-11 16:47:47 -Trying to load META-INF/validation.xml via user class loader
2021-01-11 16:47:47 -Trying to load META-INF/validation.xml via TCCL
2021-01-11 16:47:47 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-11 16:47:47 -No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-11 16:47:47 -Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2021-01-11 16:47:47 -HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-11 16:47:47 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-11 16:47:47 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-11 16:47:47 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-11 16:47:47 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-11 16:47:47 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'error'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'beanNameViewResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'conventionErrorViewResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'errorAttributes'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'basicErrorController'
2021-01-11 16:47:48 -Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mvcValidator'
2021-01-11 16:47:48 -Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:48 -Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2021-01-11 16:47:48 -Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:48 -Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'messageConverters'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'stringHttpMessageConverter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'jacksonObjectMapper'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'parameterNamesModule'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'jsonComponentModule'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2021-01-11 16:47:48 -Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'applicationTaskExecutor'
2021-01-11 16:47:48 -Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2021-01-11 16:47:48 -Initializing ExecutorService 'applicationTaskExecutor'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2021-01-11 16:47:48 -Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'liveReloadServerEventListener'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'optionalLiveReloadServer'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
2021-01-11 16:47:48 -Starting live reload server on port 35729
2021-01-11 16:47:48 -LiveReload server is running on port 35729
2021-01-11 16:47:48 -Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
2021-01-11 16:47:48 -ControllerAdvice beans: 1 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2021-01-11 16:47:48 -Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:48 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'localeResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mvcUrlPathHelper'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mvcPathMatcher'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2021-01-11 16:47:48 -Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'beanNameHandlerMapping'
2021-01-11 16:47:48 -Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'routerFunctionMapping'
2021-01-11 16:47:48 -Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'resourceHandlerMapping'
2021-01-11 16:47:48 -Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:48 -Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-11 16:47:48 -Patterns [/webjars/**, /**, /upload/**] in 'resourceHandlerMapping'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'handlerFunctionAdapter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2021-01-11 16:47:48 -Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2021-01-11 16:47:48 -Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'handlerExceptionResolver'
2021-01-11 16:47:48 -Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:48 -ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mvcViewResolver'
2021-01-11 16:47:48 -Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'themeResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'flashMapManager'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'viewNameTranslator'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'defaultViewResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'viewResolver'
2021-01-11 16:47:48 -Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@68c3645'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'thymeleafViewResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'templateEngine'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafDefaultConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'templateEngine' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'defaultTemplateResolver'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'java8TimeDialect'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafJava8TimeDialect'
2021-01-11 16:47:48 -Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'spring.thymeleaf-org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'thymeleafViewResolver' via factory method to bean named 'templateEngine'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2021-01-11 16:47:48 -Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5974fd8f] - unable to determine constructor/method parameter names
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@fcabffe'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'pagehelper-com.github.pagehelper.autoconfigure.PageHelperProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'pageHelperProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'applicationAvailability'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'java.lang.Object'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'cacheManager'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'cacheManagerCustomizers'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration'
2021-01-11 16:47:48 -Autowiring by type from bean name 'cacheManager' via factory method to bean named 'cacheManagerCustomizers'
2021-01-11 16:47:48 -Autowiring by type from bean name 'cacheManager' via factory method to bean named 'shirocacheManager'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'cacheAutoConfigurationValidator'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'cacheAutoConfigurationValidator' via factory method to bean named 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'lifecycleProcessor'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'jdbcTemplate'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2021-01-11 16:47:48 -Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2021-01-11 16:47:48 -Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.quartz-org.springframework.boot.autoconfigure.quartz.QuartzProperties'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'taskSchedulerBuilder'
2021-01-11 16:47:48 -Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2021-01-11 16:47:48 -Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'transactionManager'
2021-01-11 16:47:49 -Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'transactionTemplate'
2021-01-11 16:47:49 -Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'multipartResolver'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
2021-01-11 16:47:49 -Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'fileSystemWatcherFactory'
2021-01-11 16:47:49 -Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'classPathFileSystemWatcher'
2021-01-11 16:47:49 -Creating shared instance of singleton bean 'classPathRestartStrategy'
2021-01-11 16:47:49 -Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
2021-01-11 16:47:49 -Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
2021-01-11 16:47:50 -Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
2021-01-11 16:47:50 -Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
2021-01-11 16:47:50 -Starting beans in phase 2147483646
2021-01-11 16:47:50 -Starting ProtocolHandler ["http-nio-0.0.0.0-8889"]
2021-01-11 16:47:50 -Tomcat started on port(s): 8889 (http) with context path ''
2021-01-11 16:47:50 -Successfully started bean 'webServerStartStop'
2021-01-11 16:47:50 -Starting beans in phase 2147483647
2021-01-11 16:47:50 -Context refreshed
2021-01-11 16:47:50 -Found 2 custom documentation plugin(s)
2021-01-11 16:47:50 -Total number of request handlers 178
2021-01-11 16:47:50 -Adding key: [/], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/Register], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/Register], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/admininfo], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/admininfo], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/infoinsert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/infoinsert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/logoupload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/logoupload], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/obtaintree], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/obtaintree], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/treeView], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/treeView], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators/uploadlogo], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/uploadlogo], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/administrators], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/addpage], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/addpage], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/arttypejson], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/arttypejson], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/arctype], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/deleteAll], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/deleteAll], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/deleteIndexAll], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/deleteIndexAll], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/deleteimage], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/deleteimage], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/indexAll], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/indexAll], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/serach], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/serach], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/shall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/shall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/shstate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/shstate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/trial], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/trial], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/ueditorurl], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/ueditorurl], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/updatedz], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updatedz], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/updatemf], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updatemf], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/updatepl], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updatepl], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/updaterm], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updaterm], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/upload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/upload], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article/uploads/{name}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/uploads/{name}], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/article], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/code], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/code], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept/menujson], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/menujson], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/dept], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/fileadmin/downolad], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/downolad], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/fileadmin/list], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/list], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/fileadmin/remove], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/remove], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/fileadmin/upload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/upload], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/fileadmin], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/links], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/log/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/log/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/log/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/log/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/log], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/log], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/login], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/login], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/logout], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/logout], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/main], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/main], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/state], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/state], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/notice], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/noticeuser/see], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/noticeuser/see], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/noticeuser], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/noticeuser], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/passwordedit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/passwordedit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/power/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/power/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/power/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/power/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/power/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/power], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/role], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/sendEmail/{title}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/sendEmail/{title}], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/loweradd], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/loweradd], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/lowerinsert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/lowerinsert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemcolumn], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemparameters/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemparameters/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/systemparameters], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemparameters], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/tager/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/tager/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/tager/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/tager], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/selectall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/selectall], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/state], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/state], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/task], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/updatepass], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/updatepass], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/addjf], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/addjf], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/insertjf], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/insertjf], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/state], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/state], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/user], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/useronline/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/useronline/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/useronline/selectuseronline], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline/selectuseronline], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/useronline], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel/upload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/upload], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/wheel], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin/yzm], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/yzm], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/admin], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/articleEdit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/articleEdit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/blog], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/blog], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/download], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/download], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/error], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[text/html]}}
2021-01-11 16:47:50 -Adding key: [/error], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/fabulous], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/fabulous], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/home/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/home/login], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/home/zhuc], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/home/zhuc], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/info/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/info/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/jianluboke/{id}/{pid}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/jianluboke/{id}/{pid}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/jianluboke/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/jianluboke/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/login], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/logout], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/logout], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/pinglun/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/pinglun/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/pingluninsert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/pingluninsert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/pl], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/pl], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/serach], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/serach], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/swagger-resources/configuration/security], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/security], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/swagger-resources/configuration/ui], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/ui], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/swagger-resources], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/tag/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/tag/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/unauthorized], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/unauthorized], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/usercore/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/usercore/articlebk], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore/articlebk], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/usercore/articlezy], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore/articlezy], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/usercore], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/userinfo], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/userinfo], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/zhuc], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/zhuc], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/zyfx/{id}/{pid}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/zyfx/{id}/{pid}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Adding key: [/zyfx/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/zyfx/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:50 -Combined number of request handlers 178
2021-01-11 16:47:50 -Scanning for api listing references
2021-01-11 16:47:50 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:50 -Reading parameters models for handlerMethod |fabulous|
2021-01-11 16:47:50 -Finished reading parameters models for handlerMethod |fabulous|
2021-01-11 16:47:50 -Reading parameters models for handlerMethod |fabulous|
2021-01-11 16:47:50 -Skipping model of type Ljava/lang/Object; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:50 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:50 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:50 -Setting spring response class to: object
2021-01-11 16:47:50 -Setting response class to:object
2021-01-11 16:47:50 -Authorization count 0 for method fabulous
2021-01-11 16:47:50 -Adding return parameter of type Ljava/util/List<Lcom/dong/system/entity/Comment;>;
2021-01-11 16:47:50 -Reading parameters models for handlerMethod |pinglun|
2021-01-11 16:47:50 -Finished reading parameters models for handlerMethod |pinglun|
2021-01-11 16:47:50 -Reading parameters models for handlerMethod |pinglun|
2021-01-11 16:47:50 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/Comment;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:50 -Did not find any parameter models for java.util.List<com.dong.system.entity.Comment>
2021-01-11 16:47:50 -Adding type for parameter Lcom/dong/system/entity/Comment;
2021-01-11 16:47:50 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/Comment;
2021-01-11 16:47:50 -Reading property commentId
2021-01-11 16:47:50 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:50 -Name 'commentId' renamed to 'commentId'
2021-01-11 16:47:50 -Adding property commentId to model
2021-01-11 16:47:50 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:50 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:50 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:50 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:51 -Reading property context
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Name 'context' renamed to 'context'
2021-01-11 16:47:51 -Adding property context to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Reading property parentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Name 'parentid' renamed to 'parentid'
2021-01-11 16:47:51 -Adding property parentid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Reading property articleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Name 'articleid' renamed to 'articleid'
2021-01-11 16:47:51 -Adding property articleid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property replyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Name 'replyBody' renamed to 'replyBody'
2021-01-11 16:47:51 -Adding property replyBody to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Reading property user
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Name 'user' renamed to 'user'
2021-01-11 16:47:51 -Adding property user to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Reading property hfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Name 'hfusername' renamed to 'hfusername'
2021-01-11 16:47:51 -Adding property hfusername to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Reading property fabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Name 'fabulous' renamed to 'fabulous'
2021-01-11 16:47:51 -Adding property fabulous to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Adding type Ljava/util/List<Lcom/dong/system/entity/Comment;>; for parameter replyBody
2021-01-11 16:47:51 -Adding collectionElement type Lcom/dong/system/entity/Comment;
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Lcom/dong/system/entity/Comment;
2021-01-11 16:47:51 -Adding type Lcom/dong/system/entity/User; for parameter user
2021-01-11 16:47:51 -Recursively resolving dependencies for type Lcom/dong/system/entity/User;
2021-01-11 16:47:51 -Reading property userId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Name 'userId' renamed to 'userId'
2021-01-11 16:47:51 -Adding property userId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Reading property username
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Name 'username' renamed to 'username'
2021-01-11 16:47:51 -Adding property username to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Reading property password
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Name 'password' renamed to 'password'
2021-01-11 16:47:51 -Adding property password to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Reading property xpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Name 'xpassword' renamed to 'xpassword'
2021-01-11 16:47:51 -Adding property xpassword to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Reading property name
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Name 'name' renamed to 'name'
2021-01-11 16:47:51 -Adding property name to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Reading property sex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Name 'sex' renamed to 'sex'
2021-01-11 16:47:51 -Adding property sex to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Reading property isVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Name 'isVip' renamed to 'isVip'
2021-01-11 16:47:51 -Adding property isVip to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property updatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Name 'updatetime' renamed to 'updatetime'
2021-01-11 16:47:51 -Adding property updatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Reading property lastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Name 'lastlogin' renamed to 'lastlogin'
2021-01-11 16:47:51 -Adding property lastlogin to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Reading property context
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Name 'context' renamed to 'context'
2021-01-11 16:47:51 -Adding property context to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Reading property city
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Name 'city' renamed to 'city'
2021-01-11 16:47:51 -Adding property city to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Reading property address
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Name 'address' renamed to 'address'
2021-01-11 16:47:51 -Adding property address to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Reading property logo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Name 'logo' renamed to 'logo'
2021-01-11 16:47:51 -Adding property logo to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Reading property work
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Name 'work' renamed to 'work'
2021-01-11 16:47:51 -Adding property work to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Reading property role
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Name 'role' renamed to 'role'
2021-01-11 16:47:51 -Adding property role to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Reading property depaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Name 'depaid' renamed to 'depaid'
2021-01-11 16:47:51 -Adding property depaid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Reading property logincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Name 'logincount' renamed to 'logincount'
2021-01-11 16:47:51 -Adding property logincount to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Reading property hobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Name 'hobby' renamed to 'hobby'
2021-01-11 16:47:51 -Adding property hobby to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Reading property jf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Name 'jf' renamed to 'jf'
2021-01-11 16:47:51 -Adding property jf to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Reading property isAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Name 'isAdmin' renamed to 'isAdmin'
2021-01-11 16:47:51 -Adding property isAdmin to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Reading property email
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Name 'email' renamed to 'email'
2021-01-11 16:47:51 -Adding property email to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Reading property phone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Name 'phone' renamed to 'phone'
2021-01-11 16:47:51 -Adding property phone to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Reading property area
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Name 'area' renamed to 'area'
2021-01-11 16:47:51 -Adding property area to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Reading property birthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Name 'birthday' renamed to 'birthday'
2021-01-11 16:47:51 -Adding property birthday to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Reading property province
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Name 'province' renamed to 'province'
2021-01-11 16:47:51 -Adding property province to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Adding type Ljava/util/List<Lcom/dong/system/entity/Role;>; for parameter role
2021-01-11 16:47:51 -Adding collectionElement type Lcom/dong/system/entity/Role;
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Lcom/dong/system/entity/Role;
2021-01-11 16:47:51 -Reading property roleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Name 'roleId' renamed to 'roleId'
2021-01-11 16:47:51 -Adding property roleId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Reading property name
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Name 'name' renamed to 'name'
2021-01-11 16:47:51 -Adding property name to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property updatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Name 'updatetime' renamed to 'updatetime'
2021-01-11 16:47:51 -Adding property updatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Reading property sign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Name 'sign' renamed to 'sign'
2021-01-11 16:47:51 -Adding property sign to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Reading property context
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Name 'context' renamed to 'context'
2021-01-11 16:47:51 -Adding property context to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Reading property powers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Name 'powers' renamed to 'powers'
2021-01-11 16:47:51 -Adding property powers to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Adding type [Ljava/lang/Integer; for parameter powers
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Ljava/lang/Integer;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Integer; as seen
2021-01-11 16:47:51 -Inferred 10 properties. Properties found articleid, commentId, context, createtime, createuserid, fabulous, hfusername, parentid, replyBody, user
2021-01-11 16:47:51 -Inferred 28 properties. Properties found address, area, birthday, city, context, createtime, createuserid, depaid, email, hobby, isAdmin, isVip, jf, lastlogin, logincount, logo, name, password, phone, province, role, sex, state, updatetime, userId, username, work, xpassword
2021-01-11 16:47:51 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/Role;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Inferred 9 properties. Properties found context, createtime, createuserid, name, powers, roleId, sign, state, updatetime
2021-01-11 16:47:51 -Skipping model of type [Ljava/lang/Integer; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Adding a new model with key Comment对象
2021-01-11 16:47:51 -Adding a new model with key User对象
2021-01-11 16:47:51 -Adding a new model with key Role对象
2021-01-11 16:47:51 -Setting spring response class to: List
2021-01-11 16:47:51 -Setting response class to:List
2021-01-11 16:47:51 -Authorization count 0 for method pinglun
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |pingluninsert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |pingluninsert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |pingluninsert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Comment
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5cfac0ee
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5cfac0ee, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7599da82
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7599da82, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c94cbdd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c94cbdd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f226647
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f226647, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73b03852
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73b03852, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48c6a16c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48c6a16c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c6518a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c6518a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2efa1fcb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2efa1fcb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@21cac7dc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@21cac7dc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3029464a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3029464a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a77b1d0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a77b1d0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@819b013
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@819b013, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aa29cf1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aa29cf1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70c380f9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70c380f9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22f1ebce
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22f1ebce, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c2aae75
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c2aae75, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50022541
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50022541, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d127417
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d127417, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70905be0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70905be0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19a01a81
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19a01a81, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58490cd9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58490cd9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16b5790b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16b5790b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64886f66
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64886f66, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d650564
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d650564, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d5af1d5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d5af1d5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@509ab054
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@509ab054, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@774e167e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@774e167e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22d573d6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22d573d6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@183bea00
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@183bea00, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1da6f143
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1da6f143, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a5ce96f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a5ce96f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@131e6231
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@131e6231, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5432e1b8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5432e1b8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e342e94
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e342e94, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3dea7ac
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3dea7ac, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6331520c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6331520c, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: replyBody
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Comment>
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@746c393
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@746c393, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@192daf39
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@192daf39, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39722c39
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39722c39, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8992adf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8992adf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@378405dd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@378405dd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43243073
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43243073, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b9fdfca
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b9fdfca, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a11cfb4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a11cfb4, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method pingluninsert
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleInfo|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articleInfo|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleInfo|
2021-01-11 16:47:51 -Skipping model of type Ljava/lang/String; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method articleInfo
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlebk|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articlebk|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlebk|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method articlebk
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlezy|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articlezy|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlezy|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method articlezy
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method serach
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |tag|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |tag|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |tag|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method tag
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method updatepl
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |blog|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |blog|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |blog|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method blog
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method indexpid
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insetuser|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insetuser|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insetuser|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e2cdb9a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e2cdb9a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@659fca18
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@659fca18, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@794d74f1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@794d74f1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@561273d0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@561273d0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67a85d85
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67a85d85, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7cfc9462
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7cfc9462, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e849df0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e849df0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b4def03
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b4def03, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@166b01b9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@166b01b9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3839b446
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3839b446, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bea8e51
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bea8e51, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e382dad
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e382dad, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@557701ee
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@557701ee, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20191482
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20191482, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50248bdf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50248bdf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3db18844
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3db18844, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55642674
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55642674, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ec7ea20
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ec7ea20, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ac9f254
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ac9f254, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b0bb6e1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b0bb6e1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fa87e72
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fa87e72, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e8f054d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e8f054d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b611d9a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b611d9a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d4b18a9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d4b18a9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@516cb89c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@516cb89c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@273f6a91
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@273f6a91, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14812e21
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14812e21, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@61faf248
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@61faf248, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55e61eb3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55e61eb3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@9519d7c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@9519d7c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14bc5a51
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14bc5a51, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22e2923c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22e2923c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47941355
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47941355, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@422bcca6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@422bcca6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@34336860
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@34336860, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2f67fa8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2f67fa8, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insetuser
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74ebc474
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74ebc474, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4dce354
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4dce354, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@54dac353
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@54dac353, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41684c73
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41684c73, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5952c962
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5952c962, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a77575f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a77575f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3835cb19
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3835cb19, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bbd03b8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bbd03b8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74a6a819
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74a6a819, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@183bbce4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@183bbce4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70a34472
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70a34472, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e8be516
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e8be516, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3162b9e3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3162b9e3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@747bffb7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@747bffb7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f53500f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f53500f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bda43a7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bda43a7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7077992c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7077992c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6359fff9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6359fff9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ef18b5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ef18b5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f21b4b4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f21b4b4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43d3e285
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43d3e285, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6f596b31
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6f596b31, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@118decdf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@118decdf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@138b7e4e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@138b7e4e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f106170
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f106170, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b349b40
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b349b40, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15a179ed
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15a179ed, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d101c19
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d101c19, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1147ed2a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1147ed2a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ee69ad9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ee69ad9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4016eef9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4016eef9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d3bd236
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d3bd236, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@333b4206
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@333b4206, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@596126ea
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@596126ea, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e776a19
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e776a19, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d1ea783
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d1ea783, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method login
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loginout
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |zhuc|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |zhuc|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |zhuc|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method zhuc
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Adding return parameter of type Lorg/springframework/web/servlet/ModelAndView;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleEdit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articleEdit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleEdit|
2021-01-11 16:47:51 -Reading property view
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Name 'view' renamed to 'view'
2021-01-11 16:47:51 -Adding property view to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Reading property model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Name 'model' renamed to 'model'
2021-01-11 16:47:51 -Adding property model to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Reading property status
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Name 'status' renamed to 'status'
2021-01-11 16:47:51 -Adding property status to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Reading property empty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Name 'empty' renamed to 'empty'
2021-01-11 16:47:51 -Adding property empty to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Reading property modelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Name 'modelMap' renamed to 'modelMap'
2021-01-11 16:47:51 -Adding property modelMap to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Reading property viewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Name 'viewName' renamed to 'viewName'
2021-01-11 16:47:51 -Adding property viewName to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Reading property reference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Name 'reference' renamed to 'reference'
2021-01-11 16:47:51 -Adding property reference to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Inferred 7 properties. Properties found empty, model, modelMap, reference, status, view, viewName
2021-01-11 16:47:51 -Generated parameter model id: ModelAndView, name: ModelAndView, schema: {} models
2021-01-11 16:47:51 -Adding a new model with key ModelAndView
2021-01-11 16:47:51 -Adding type Lorg/springframework/ui/ModelMap; for parameter modelMap
2021-01-11 16:47:51 -Recursively resolving dependencies for value type Ljava/lang/Object;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Adding type Lorg/springframework/web/servlet/View; for parameter view
2021-01-11 16:47:51 -Recursively resolving dependencies for type Lorg/springframework/web/servlet/View;
2021-01-11 16:47:51 -Reading property contentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Name 'contentType' renamed to 'contentType'
2021-01-11 16:47:51 -Adding property contentType to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Inferred 1 properties. Properties found contentType
2021-01-11 16:47:51 -Adding a new model with key View
2021-01-11 16:47:51 -Setting spring response class to: ModelAndView
2021-01-11 16:47:51 -Setting response class to:ModelAndView
2021-01-11 16:47:51 -Authorization count 0 for method articleEdit
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |userinfo|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |userinfo|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |userinfo|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method userinfo
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |download|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |download|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |download|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method download
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method indexpid
2021-01-11 16:47:51 -Generating unique operation named: indexpidUsingGET_1
2021-01-11 16:47:51 -Total number of request handlers 178
2021-01-11 16:47:51 -Adding key: [/], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/Register], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/Register], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/admininfo], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/admininfo], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/infoinsert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/infoinsert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/logoupload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/logoupload], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/obtaintree], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/obtaintree], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/treeView], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/treeView], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators/uploadlogo], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators/uploadlogo], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/administrators], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/administrators], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/addpage], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/addpage], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/arttypejson], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/arttypejson], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/arctype], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/arctype], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/deleteAll], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/deleteAll], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/deleteIndexAll], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/deleteIndexAll], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/deleteimage], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/deleteimage], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/indexAll], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/indexAll], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/serach], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/serach], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/shall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/shall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/shstate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/shstate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/trial], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/trial], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/ueditorurl], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/ueditorurl], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/updatedz], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updatedz], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/updatemf], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updatemf], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/updatepl], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updatepl], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/updaterm], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/updaterm], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/upload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/upload], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article/uploads/{name}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article/uploads/{name}], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/article], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/article], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/code], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/code], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept/menujson], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/menujson], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/dept], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/dept], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/fileadmin/downolad], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/downolad], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/fileadmin/list], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/list], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/fileadmin/remove], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/remove], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/fileadmin/upload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin/upload], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/fileadmin], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/fileadmin], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/links], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/links], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/log/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/log/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/log/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/log/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/log], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/log], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/login], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/login], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/logout], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/logout], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/main], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/main], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/state], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/state], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/notice], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/notice], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/noticeuser/see], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/noticeuser/see], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/noticeuser], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/noticeuser], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/passwordedit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/passwordedit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/power/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/power/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/power/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/power/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/power/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/power], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/power], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/role], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/role], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/sendEmail/{title}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/sendEmail/{title}], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/loweradd], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/loweradd], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/lowerinsert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/lowerinsert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn/updatestate], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn/updatestate], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemcolumn], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemcolumn], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemparameters/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemparameters/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/systemparameters], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/systemparameters], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/tager/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/tager/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/tager/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/tager], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/tager], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/selectall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/selectall], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/state], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/state], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/task], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/task], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/updatepass], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/updatepass], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/addjf], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/addjf], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/insertjf], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/insertjf], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/state], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/state], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/user], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/user], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/useronline/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/useronline/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/useronline/selectuseronline], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline/selectuseronline], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/useronline], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/useronline], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/deleteall], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/deleteall], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/edit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/edit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/insert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/insert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/update], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/update], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel/upload], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel/upload], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/wheel], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/wheel], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin/yzm], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin/yzm], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/admin], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/admin], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/articleEdit], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/articleEdit], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/blog], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/blog], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/delete], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/delete], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/download], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/download], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/error], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[text/html]}}
2021-01-11 16:47:51 -Adding key: [/error], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/error], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/fabulous], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/fabulous], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/home/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/home/login], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/home/zhuc], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/home/zhuc], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/info/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/info/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/jianluboke/{id}/{pid}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/jianluboke/{id}/{pid}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/jianluboke/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/jianluboke/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/login], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/login], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/logout], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/logout], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/pinglun/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/pinglun/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/pingluninsert], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/pingluninsert], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/pl], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/pl], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/serach], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/serach], supportedMethods=[POST], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/swagger-resources/configuration/security], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/security], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/swagger-resources/configuration/ui], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources/configuration/ui], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/swagger-resources], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/swagger-resources], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/tag/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/tag/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/unauthorized], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/unauthorized], supportedMethods=[], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/usercore/add], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore/add], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/usercore/articlebk], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore/articlebk], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/usercore/articlezy], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore/articlezy], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/usercore], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/usercore], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/userinfo], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/userinfo], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/zhuc], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/zhuc], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/zyfx/{id}/{pid}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/zyfx/{id}/{pid}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Adding key: [/zyfx/{id}], WebMvcRequestHandler{key=RequestHandlerKey{pathMappings=[/zyfx/{id}], supportedMethods=[GET], supportedMediaTypes=[], producibleMediaTypes=[]}}
2021-01-11 16:47:51 -Combined number of request handlers 178
2021-01-11 16:47:51 -Scanning for api listing references
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Skipping model of type Ljava/lang/String; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |admininfo|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |admininfo|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |admininfo|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method admininfo
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Skipping model of type Ljava/lang/Object; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Skipping model of type Ljava/lang/Integer; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Marking base type Ljava/lang/Integer; as seen
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_1
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_1
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_1
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_1
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_1
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_1
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |install|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |install|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |install|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13db7094
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13db7094, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@686b6559
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@686b6559, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b737603
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b737603, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64cd04f6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64cd04f6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ba39d66
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ba39d66, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78d168e6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78d168e6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4822da91
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4822da91, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44449dd7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44449dd7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@603eac51
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@603eac51, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@369f18c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@369f18c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b228808
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b228808, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@11f2d3be
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@11f2d3be, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30ac8bb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30ac8bb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fa3bcc7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fa3bcc7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57b65975
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57b65975, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ac0c28
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ac0c28, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50bbcd3e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50bbcd3e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@703a615d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@703a615d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15a2f3de
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15a2f3de, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@770d700e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@770d700e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@795191ec
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@795191ec, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a423712
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a423712, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@587c1387
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@587c1387, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44ed8586
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44ed8586, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3146b206
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3146b206, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a77f99b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a77f99b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42af3d79
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42af3d79, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ac6411f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ac6411f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e9408c3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e9408c3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2bea9fab
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2bea9fab, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@10953b5a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@10953b5a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48835eee
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48835eee, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69f952d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69f952d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79775592
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79775592, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4001fe0d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4001fe0d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1227accd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1227accd, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method install
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |logoup|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |logoup|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |logoup|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.http.HttpSession
2021-01-11 16:47:51 -Attempting to expand expandable property: servletContext
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.ServletContext
2021-01-11 16:47:51 -Attempting to expand expandable property: servletNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: servlets
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<javax.servlet.Servlet>
2021-01-11 16:47:51 -Attempting to expand expandable property: attributeNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: initParameterNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: servletRegistrations
2021-01-11 16:47:51 -Expanding parameter type: java.util.Map<java.lang.String,javax.servlet.ServletRegistration>
2021-01-11 16:47:51 -Attempting to expand expandable property: defaultSessionTrackingModes
2021-01-11 16:47:51 -Expanding parameter type: java.util.Set<javax.servlet.SessionTrackingMode>
2021-01-11 16:47:51 -Attempting to expand expandable property: effectiveSessionTrackingModes
2021-01-11 16:47:51 -Expanding parameter type: java.util.Set<javax.servlet.SessionTrackingMode>
2021-01-11 16:47:51 -Attempting to expand expandable property: jspConfigDescriptor
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.descriptor.JspConfigDescriptor
2021-01-11 16:47:51 -Attempting to expand expandable property: taglibs
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<javax.servlet.descriptor.TaglibDescriptor>
2021-01-11 16:47:51 -Attempting to expand expandable property: jspPropertyGroups
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<javax.servlet.descriptor.JspPropertyGroupDescriptor>
2021-01-11 16:47:51 -Attempting to expand collection/array field: taglibs
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.descriptor.TaglibDescriptor
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5788d095
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5788d095, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2fadf191
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2fadf191, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: jspPropertyGroups
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.descriptor.JspPropertyGroupDescriptor
2021-01-11 16:47:51 -Attempting to expand expandable property: urlPatterns
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: includePreludes
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: includeCodas
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand collection/array field: urlPatterns
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@34b8a0b9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@34b8a0b9, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: includePreludes
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@a1ddf0d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@a1ddf0d, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: includeCodas
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b88eb6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b88eb6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57f45d83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57f45d83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2525c0f0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2525c0f0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7459fec6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7459fec6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b4bd8b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b4bd8b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b511b9f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b511b9f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40c575fd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40c575fd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6439c08b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6439c08b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73c6f0dd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73c6f0dd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18c709c5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18c709c5, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: sessionCookieConfig
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.SessionCookieConfig
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@32d0afce
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@32d0afce, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76595a1c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76595a1c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@325d0c12
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@325d0c12, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@12f4a2bd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@12f4a2bd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25edd1f2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25edd1f2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19d8f6e9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19d8f6e9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@433f545c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@433f545c, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: filterRegistrations
2021-01-11 16:47:51 -Expanding parameter type: java.util.Map<java.lang.String,javax.servlet.FilterRegistration>
2021-01-11 16:47:51 -Attempting to expand collection/array field: defaultSessionTrackingModes
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a4fd29
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a4fd29, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: effectiveSessionTrackingModes
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42845cba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42845cba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74c6cb83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74c6cb83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76c8d25b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76c8d25b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4dccfe4d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4dccfe4d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45d74e5f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45d74e5f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fa9b0d8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fa9b0d8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fbceb41
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fbceb41, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50141959
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50141959, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fde41f1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fde41f1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@778afc50
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@778afc50, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6f904105
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6f904105, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ffc40b2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ffc40b2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@224fb753
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@224fb753, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: valueNames
2021-01-11 16:47:51 -Expanding parameter type: java.lang.String[]
2021-01-11 16:47:51 -Attempting to expand expandable property: attributeNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: sessionContext
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.http.HttpSessionContext
2021-01-11 16:47:51 -Attempting to expand expandable property: ids
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand collection/array field: valueNames
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1759bef3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1759bef3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@dbe6ccf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@dbe6ccf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@373df069
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@373df069, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69ff7f17
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69ff7f17, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f55ad86
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f55ad86, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@37b4f7d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@37b4f7d1, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method logoup
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |logoupload|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |logoupload|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |logoupload|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method logoupload
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/List<Lcom/dong/system/entity/Tree;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |obtaintree|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |obtaintree|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |obtaintree|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/Tree;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.List<com.dong.system.entity.Tree<com.dong.system.entity.Dept>>
2021-01-11 16:47:51 -Adding type for parameter Lcom/dong/system/entity/Tree<Lcom/dong/system/entity/Dept;>;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/Tree<Lcom/dong/system/entity/Dept;>;
2021-01-11 16:47:51 -Adding type for parameter Lcom/dong/system/entity/Dept;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/Dept;
2021-01-11 16:47:51 -Reading property deptId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDeptId
2021-01-11 16:47:51 -Name 'deptId' renamed to 'deptId'
2021-01-11 16:47:51 -Adding property deptId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDeptId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDeptId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDeptId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDeptId
2021-01-11 16:47:51 -Reading property parentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Name 'parentId' renamed to 'parentId'
2021-01-11 16:47:51 -Adding property parentId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Reading property name
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Name 'name' renamed to 'name'
2021-01-11 16:47:51 -Adding property name to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Reading property num
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getNum
2021-01-11 16:47:51 -Name 'num' renamed to 'num'
2021-01-11 16:47:51 -Adding property num to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getNum
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getNum
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getNum
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getNum
2021-01-11 16:47:51 -Reading property isDelete
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsDelete
2021-01-11 16:47:51 -Name 'isDelete' renamed to 'isDelete'
2021-01-11 16:47:51 -Adding property isDelete to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsDelete
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsDelete
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsDelete
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsDelete
2021-01-11 16:47:51 -Reading property id
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getId
2021-01-11 16:47:51 -Name 'id' renamed to 'id'
2021-01-11 16:47:51 -Adding property id to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getId
2021-01-11 16:47:51 -Reading property title
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTitle
2021-01-11 16:47:51 -Name 'title' renamed to 'title'
2021-01-11 16:47:51 -Adding property title to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTitle
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTitle
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTitle
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTitle
2021-01-11 16:47:51 -Reading property text
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getText
2021-01-11 16:47:51 -Name 'text' renamed to 'text'
2021-01-11 16:47:51 -Adding property text to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getText
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getText
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getText
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getText
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Reading property checked
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isChecked
2021-01-11 16:47:51 -Name 'checked' renamed to 'checked'
2021-01-11 16:47:51 -Adding property checked to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isChecked
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isChecked
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isChecked
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isChecked
2021-01-11 16:47:51 -Reading property attributes
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAttributes
2021-01-11 16:47:51 -Name 'attributes' renamed to 'attributes'
2021-01-11 16:47:51 -Adding property attributes to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAttributes
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAttributes
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAttributes
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAttributes
2021-01-11 16:47:51 -Reading property children
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getChildren
2021-01-11 16:47:51 -Name 'children' renamed to 'children'
2021-01-11 16:47:51 -Adding property children to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getChildren
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getChildren
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getChildren
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getChildren
2021-01-11 16:47:51 -Reading property parentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Name 'parentId' renamed to 'parentId'
2021-01-11 16:47:51 -Adding property parentId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentId
2021-01-11 16:47:51 -Adding type Ljava/util/List<Lcom/dong/system/entity/Tree;>; for parameter children
2021-01-11 16:47:51 -Adding collectionElement type Lcom/dong/system/entity/Tree<Lcom/dong/system/entity/Dept;>;
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Lcom/dong/system/entity/Tree<Lcom/dong/system/entity/Dept;>;
2021-01-11 16:47:51 -Adding type for parameter Lcom/dong/system/entity/Dept;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/Dept;
2021-01-11 16:47:51 -Inferred 8 properties. Properties found attributes, checked, children, id, parentId, state, text, title
2021-01-11 16:47:51 -Inferred 5 properties. Properties found deptId, isDelete, name, num, parentId
2021-01-11 16:47:51 -Adding a new model with key Dept对象
2021-01-11 16:47:51 -Adding a new model with key Tree«Dept对象»
2021-01-11 16:47:51 -Setting spring response class to: List
2021-01-11 16:47:51 -Setting response class to:List
2021-01-11 16:47:51 -Authorization count 0 for method obtaintree
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |treeView|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |treeView|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |treeView|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method treeView
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20ca4e80
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20ca4e80, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23f7176c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23f7176c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@518d3d45
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@518d3d45, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4179268a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4179268a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23b175e4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23b175e4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38e65a89
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38e65a89, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b93fc5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b93fc5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8fc142e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8fc142e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a727a02
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a727a02, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60bfe3f2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60bfe3f2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38e13caf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38e13caf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40b31849
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40b31849, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@788843f8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@788843f8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67379f68
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67379f68, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@eabe8ac
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@eabe8ac, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3406ed02
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3406ed02, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6f11e835
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6f11e835, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2fc80749
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2fc80749, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ef77494
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ef77494, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d1ae8b5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d1ae8b5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1daae763
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1daae763, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@72b759d0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@72b759d0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3721c0c6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3721c0c6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d54d9d7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d54d9d7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@578fb4e1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@578fb4e1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fbe1e19
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fbe1e19, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26a0cad8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26a0cad8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d8135ba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d8135ba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3783b257
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3783b257, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58223c68
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58223c68, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78f4cbbe
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78f4cbbe, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c4c0dff
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c4c0dff, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@46f70b2b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@46f70b2b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f7fbee1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f7fbee1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51082d8b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51082d8b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5da7e1a0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5da7e1a0, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method updatestate
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |userinfoinsert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |userinfoinsert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |userinfoinsert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50e16b7d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50e16b7d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2782f490
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2782f490, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1739adb5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1739adb5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@71d185be
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@71d185be, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fc8f014
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fc8f014, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@fdeb509
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@fdeb509, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55d0f542
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55d0f542, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28516633
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28516633, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2aedea95
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2aedea95, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7905eb1c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7905eb1c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@401e3c54
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@401e3c54, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@429ceb16
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@429ceb16, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@143ad3c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@143ad3c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57c8eb03
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57c8eb03, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@436402af
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@436402af, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fd27db2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fd27db2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f5215b8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f5215b8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5148171
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5148171, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66869a06
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66869a06, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a754489
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a754489, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75557baa
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75557baa, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@546b6378
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@546b6378, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66f9559
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66f9559, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63ec811
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63ec811, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58686b57
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58686b57, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5717a381
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5717a381, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2da82167
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2da82167, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d260a83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d260a83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@468fe0a3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@468fe0a3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2cee5858
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2cee5858, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40a1f7bb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40a1f7bb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2dbe9f3e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2dbe9f3e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@148de8d2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@148de8d2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a7f4e83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a7f4e83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@52c7458
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@52c7458, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5cb25cac
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5cb25cac, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method userinfoinsert
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |arctypeadd|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |arctypeadd|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |arctypeadd|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/Object;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method arctypeadd
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |arctypeindex|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |arctypeindex|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |arctypeindex|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method arctypeindex
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |arctypeinset|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |arctypeinset|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |arctypeinset|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.Map<java.lang.String,java.lang.String>
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Arttype
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d7382d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d7382d1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@99d91c0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@99d91c0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7998694
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7998694, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@116425fe
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@116425fe, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30204809
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30204809, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5556cc5c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5556cc5c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1eb04d44
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1eb04d44, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ecbd0b9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ecbd0b9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1c99b569
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1c99b569, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f4eae8a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f4eae8a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6308064a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6308064a, with type: 
2021-01-11 16:47:51 -Setting spring response class to: Map«string,string»
2021-01-11 16:47:51 -Setting response class to:Map«string,string»
2021-01-11 16:47:51 -Authorization count 0 for method arctypeinset
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Lorg/springframework/web/servlet/ModelAndView;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading property view
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Name 'view' renamed to 'view'
2021-01-11 16:47:51 -Adding property view to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getView
2021-01-11 16:47:51 -Reading property model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Name 'model' renamed to 'model'
2021-01-11 16:47:51 -Adding property model to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModel
2021-01-11 16:47:51 -Reading property status
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Name 'status' renamed to 'status'
2021-01-11 16:47:51 -Adding property status to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Reading property empty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Name 'empty' renamed to 'empty'
2021-01-11 16:47:51 -Adding property empty to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isEmpty
2021-01-11 16:47:51 -Reading property modelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Name 'modelMap' renamed to 'modelMap'
2021-01-11 16:47:51 -Adding property modelMap to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getModelMap
2021-01-11 16:47:51 -Reading property viewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Name 'viewName' renamed to 'viewName'
2021-01-11 16:47:51 -Adding property viewName to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getViewName
2021-01-11 16:47:51 -Reading property reference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Name 'reference' renamed to 'reference'
2021-01-11 16:47:51 -Adding property reference to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReference
2021-01-11 16:47:51 -Inferred 7 properties. Properties found empty, model, modelMap, reference, status, view, viewName
2021-01-11 16:47:51 -Generated parameter model id: ModelAndView, name: ModelAndView, schema: {} models
2021-01-11 16:47:51 -Adding a new model with key ModelAndView
2021-01-11 16:47:51 -Adding type Lorg/springframework/ui/ModelMap; for parameter modelMap
2021-01-11 16:47:51 -Recursively resolving dependencies for value type Ljava/lang/Object;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Object; as seen
2021-01-11 16:47:51 -Adding type Lorg/springframework/web/servlet/View; for parameter view
2021-01-11 16:47:51 -Recursively resolving dependencies for type Lorg/springframework/web/servlet/View;
2021-01-11 16:47:51 -Reading property contentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Name 'contentType' renamed to 'contentType'
2021-01-11 16:47:51 -Adding property contentType to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContentType
2021-01-11 16:47:51 -Inferred 1 properties. Properties found contentType
2021-01-11 16:47:51 -Adding a new model with key View
2021-01-11 16:47:51 -Setting spring response class to: ModelAndView
2021-01-11 16:47:51 -Setting response class to:ModelAndView
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |menujson|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |menujson|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |menujson|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method menujson
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Arttype
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ce6357f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ce6357f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79816dcf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79816dcf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@228bf6ed
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@228bf6ed, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74d0bc04
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74d0bc04, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@9e0222c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@9e0222c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7bfdc9ca
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7bfdc9ca, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63c64c6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63c64c6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@777dd899
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@777dd899, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f047518
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f047518, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a2250ab
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a2250ab, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f5d037d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f5d037d, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Integer>
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/Integer;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/Integer;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Integer; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-11 16:47:51 -Marking base type Ljava/lang/String; as seen
2021-01-11 16:47:51 -Adding type for parameter Ljava/lang/Integer;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Ljava/lang/Integer;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Integer; as seen
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,int»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,int»
2021-01-11 16:47:51 -Authorization count 0 for method updatestate
2021-01-11 16:47:51 -Generating unique operation named: updatestateUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteAll|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteAll|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteAll|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method deleteAll
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteBatchIndex|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteBatchIndex|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteBatchIndex|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method deleteBatchIndex
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteimage|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteimage|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteimage|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Trying to infer dataType java.lang.String[]
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method deleteimage
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method fileimage
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileupload|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fileupload|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileupload|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method fileupload
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_2
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_2
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_2
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_2
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_2
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_2
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexAll|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |indexAll|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexAll|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method indexAll
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Article
2021-01-11 16:47:51 -Attempting to expand expandable property: tag
2021-01-11 16:47:51 -Expanding parameter type: java.lang.String[]
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26558eae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26558eae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30355fde
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30355fde, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@335b429e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@335b429e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c49a28e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c49a28e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b2a9e2a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b2a9e2a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41fbf13e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41fbf13e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@285d042d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@285d042d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@29819e7a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@29819e7a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38b9f95b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38b9f95b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ae7420c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ae7420c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31b3e71a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31b3e71a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@569ebd27
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@569ebd27, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@362a1fbb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@362a1fbb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6eddc50
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6eddc50, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b9c970b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b9c970b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6dad8604
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6dad8604, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@54ac8bd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@54ac8bd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e6c75c4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e6c75c4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a783cd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a783cd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@bbb85b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@bbb85b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53e787d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53e787d1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ea80a3c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ea80a3c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@632c53cf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@632c53cf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e084691
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e084691, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@513e978e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@513e978e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fd99e7f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fd99e7f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e6a1e60
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e6a1e60, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@322af5f2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@322af5f2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@178d86de
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@178d86de, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14a4d836
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14a4d836, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aa34ddc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aa34ddc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6fc3ac1f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6fc3ac1f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14837c4f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14837c4f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26547381
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26547381, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3689073a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3689073a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44d8e6a0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44d8e6a0, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: arttype
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Arttype
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7885fe0d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7885fe0d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5dd2dd29
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5dd2dd29, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@577818c3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@577818c3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@207c4056
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@207c4056, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77dea7c2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77dea7c2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3cae1785
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3cae1785, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b87bed3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b87bed3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@693b3505
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@693b3505, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6bd97f57
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6bd97f57, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@27074f96
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@27074f96, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31601c83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31601c83, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: tag
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66cf05ad
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66cf05ad, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5934e911
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5934e911, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2875df07
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2875df07, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5dcef5a4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5dcef5a4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18cd1bc4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18cd1bc4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60c46394
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60c46394, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a6ee843
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a6ee843, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@249260ce
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@249260ce, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67897f0b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67897f0b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43ef0026
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43ef0026, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e8ec4e8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e8ec4e8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39ad51e7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39ad51e7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@157000fe
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@157000fe, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e25cc46
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e25cc46, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5674e4ee
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5674e4ee, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@505b5ae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@505b5ae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@10672200
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@10672200, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@10208bb6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@10208bb6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@61025ec8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@61025ec8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@49022f83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@49022f83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60dc7381
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60dc7381, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74352917
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74352917, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@732cd47
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@732cd47, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5c57b40d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5c57b40d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1f74301
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1f74301, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method serach
2021-01-11 16:47:51 -Generating unique operation named: serachUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |shall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |shall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |shall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method shall
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |shstate|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |shstate|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |shstate|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method shstate
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |trial|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |trial|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |trial|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method trial
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |ueditor|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |ueditor|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |ueditor|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method ueditor
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Article
2021-01-11 16:47:51 -Attempting to expand expandable property: tag
2021-01-11 16:47:51 -Expanding parameter type: java.lang.String[]
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@724c020c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@724c020c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@565faf66
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@565faf66, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36eef12b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36eef12b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e232d6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e232d6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e217ee8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e217ee8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@552edad5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@552edad5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14880ef2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14880ef2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76ffa37
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76ffa37, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@511786e2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@511786e2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74b2f883
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74b2f883, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28e904ec
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28e904ec, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@338aee68
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@338aee68, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@627884aa
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@627884aa, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ed1e86
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ed1e86, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5deffcd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5deffcd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23256608
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23256608, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ad555c4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ad555c4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@364b9291
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@364b9291, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44193302
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44193302, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c0418af
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c0418af, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c1f0f9e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c1f0f9e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@462adf96
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@462adf96, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ba67572
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ba67572, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@278bddc9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@278bddc9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73bc5559
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73bc5559, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@637af2d7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@637af2d7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b0f062f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b0f062f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6293e512
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6293e512, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73946284
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73946284, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@474cca6b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@474cca6b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@249182d3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@249182d3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@59d75826
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@59d75826, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@98791da
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@98791da, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28b90d13
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28b90d13, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1685cd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1685cd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63e3eb81
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63e3eb81, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: arttype
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Arttype
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bcfdac
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bcfdac, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7dfa116e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7dfa116e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6fb420bf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6fb420bf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2f99b3d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2f99b3d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60ca5753
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60ca5753, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4d164b45
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4d164b45, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3693b80
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3693b80, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4d8768a3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4d8768a3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fc5ce8f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fc5ce8f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f6fe51
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f6fe51, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a0960f4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a0960f4, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: tag
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@88d0ae2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@88d0ae2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39255471
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39255471, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2f1a6597
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2f1a6597, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ec0e70c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ec0e70c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b18432c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b18432c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74c7f0b9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74c7f0b9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@549eb21d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@549eb21d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@34a47876
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@34a47876, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f2d1463
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f2d1463, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@465f91ed
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@465f91ed, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67f0cd61
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67f0cd61, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70007e21
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70007e21, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6799f24e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6799f24e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5df3d7a9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5df3d7a9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c0992b3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c0992b3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f8b0265
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f8b0265, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67289258
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67289258, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@24254f8b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@24254f8b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5449ddb6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5449ddb6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43467570
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43467570, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60df9512
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60df9512, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e88d795
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e88d795, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74b6139f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74b6139f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18c0771e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18c0771e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30dc3fec
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30dc3fec, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatedz|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatedz|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatedz|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method updatedz
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatemf|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatemf|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatemf|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method updatemf
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method updatepl
2021-01-11 16:47:51 -Generating unique operation named: updateplUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updaterm|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updaterm|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updaterm|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method updaterm
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fabulous|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fabulous|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fabulous|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method fabulous
2021-01-11 16:47:51 -Generating unique operation named: fabulousUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/List<Lcom/dong/system/entity/Comment;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |pinglun|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |pinglun|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |pinglun|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/Comment;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.List<com.dong.system.entity.Comment>
2021-01-11 16:47:51 -Adding type for parameter Lcom/dong/system/entity/Comment;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/Comment;
2021-01-11 16:47:51 -Reading property commentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:51 -Name 'commentId' renamed to 'commentId'
2021-01-11 16:47:51 -Adding property commentId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCommentId
2021-01-11 16:47:51 -Reading property context
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Name 'context' renamed to 'context'
2021-01-11 16:47:51 -Adding property context to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Reading property parentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Name 'parentid' renamed to 'parentid'
2021-01-11 16:47:51 -Adding property parentid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentid
2021-01-11 16:47:51 -Reading property articleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Name 'articleid' renamed to 'articleid'
2021-01-11 16:47:51 -Adding property articleid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArticleid
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property replyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Name 'replyBody' renamed to 'replyBody'
2021-01-11 16:47:51 -Adding property replyBody to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getReplyBody
2021-01-11 16:47:51 -Reading property user
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Name 'user' renamed to 'user'
2021-01-11 16:47:51 -Adding property user to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser
2021-01-11 16:47:51 -Reading property hfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Name 'hfusername' renamed to 'hfusername'
2021-01-11 16:47:51 -Adding property hfusername to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHfusername
2021-01-11 16:47:51 -Reading property fabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Name 'fabulous' renamed to 'fabulous'
2021-01-11 16:47:51 -Adding property fabulous to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFabulous
2021-01-11 16:47:51 -Adding type Ljava/util/List<Lcom/dong/system/entity/Comment;>; for parameter replyBody
2021-01-11 16:47:51 -Adding collectionElement type Lcom/dong/system/entity/Comment;
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Lcom/dong/system/entity/Comment;
2021-01-11 16:47:51 -Adding type Lcom/dong/system/entity/User; for parameter user
2021-01-11 16:47:51 -Recursively resolving dependencies for type Lcom/dong/system/entity/User;
2021-01-11 16:47:51 -Reading property userId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Name 'userId' renamed to 'userId'
2021-01-11 16:47:51 -Adding property userId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserId
2021-01-11 16:47:51 -Reading property username
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Name 'username' renamed to 'username'
2021-01-11 16:47:51 -Adding property username to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Reading property password
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Name 'password' renamed to 'password'
2021-01-11 16:47:51 -Adding property password to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPassword
2021-01-11 16:47:51 -Reading property xpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Name 'xpassword' renamed to 'xpassword'
2021-01-11 16:47:51 -Adding property xpassword to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXpassword
2021-01-11 16:47:51 -Reading property name
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Name 'name' renamed to 'name'
2021-01-11 16:47:51 -Adding property name to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Reading property sex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Name 'sex' renamed to 'sex'
2021-01-11 16:47:51 -Adding property sex to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSex
2021-01-11 16:47:51 -Reading property isVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Name 'isVip' renamed to 'isVip'
2021-01-11 16:47:51 -Adding property isVip to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsVip
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property updatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Name 'updatetime' renamed to 'updatetime'
2021-01-11 16:47:51 -Adding property updatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Reading property lastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Name 'lastlogin' renamed to 'lastlogin'
2021-01-11 16:47:51 -Adding property lastlogin to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastlogin
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Reading property context
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Name 'context' renamed to 'context'
2021-01-11 16:47:51 -Adding property context to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Reading property city
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Name 'city' renamed to 'city'
2021-01-11 16:47:51 -Adding property city to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCity
2021-01-11 16:47:51 -Reading property address
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Name 'address' renamed to 'address'
2021-01-11 16:47:51 -Adding property address to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAddress
2021-01-11 16:47:51 -Reading property logo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Name 'logo' renamed to 'logo'
2021-01-11 16:47:51 -Adding property logo to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogo
2021-01-11 16:47:51 -Reading property work
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Name 'work' renamed to 'work'
2021-01-11 16:47:51 -Adding property work to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getWork
2021-01-11 16:47:51 -Reading property role
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Name 'role' renamed to 'role'
2021-01-11 16:47:51 -Adding property role to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRole
2021-01-11 16:47:51 -Reading property depaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Name 'depaid' renamed to 'depaid'
2021-01-11 16:47:51 -Adding property depaid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDepaid
2021-01-11 16:47:51 -Reading property logincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Name 'logincount' renamed to 'logincount'
2021-01-11 16:47:51 -Adding property logincount to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogincount
2021-01-11 16:47:51 -Reading property hobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Name 'hobby' renamed to 'hobby'
2021-01-11 16:47:51 -Adding property hobby to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHobby
2021-01-11 16:47:51 -Reading property jf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Name 'jf' renamed to 'jf'
2021-01-11 16:47:51 -Adding property jf to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJf
2021-01-11 16:47:51 -Reading property isAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Name 'isAdmin' renamed to 'isAdmin'
2021-01-11 16:47:51 -Adding property isAdmin to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsAdmin
2021-01-11 16:47:51 -Reading property email
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Name 'email' renamed to 'email'
2021-01-11 16:47:51 -Adding property email to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getEmail
2021-01-11 16:47:51 -Reading property phone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Name 'phone' renamed to 'phone'
2021-01-11 16:47:51 -Adding property phone to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPhone
2021-01-11 16:47:51 -Reading property area
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Name 'area' renamed to 'area'
2021-01-11 16:47:51 -Adding property area to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getArea
2021-01-11 16:47:51 -Reading property birthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Name 'birthday' renamed to 'birthday'
2021-01-11 16:47:51 -Adding property birthday to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getBirthday
2021-01-11 16:47:51 -Reading property province
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Name 'province' renamed to 'province'
2021-01-11 16:47:51 -Adding property province to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProvince
2021-01-11 16:47:51 -Adding type Ljava/util/List<Lcom/dong/system/entity/Role;>; for parameter role
2021-01-11 16:47:51 -Adding collectionElement type Lcom/dong/system/entity/Role;
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Lcom/dong/system/entity/Role;
2021-01-11 16:47:51 -Reading property roleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Name 'roleId' renamed to 'roleId'
2021-01-11 16:47:51 -Adding property roleId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRoleId
2021-01-11 16:47:51 -Reading property name
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Name 'name' renamed to 'name'
2021-01-11 16:47:51 -Adding property name to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property updatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Name 'updatetime' renamed to 'updatetime'
2021-01-11 16:47:51 -Adding property updatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Reading property sign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Name 'sign' renamed to 'sign'
2021-01-11 16:47:51 -Adding property sign to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSign
2021-01-11 16:47:51 -Reading property context
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Name 'context' renamed to 'context'
2021-01-11 16:47:51 -Adding property context to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContext
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Reading property powers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Name 'powers' renamed to 'powers'
2021-01-11 16:47:51 -Adding property powers to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPowers
2021-01-11 16:47:51 -Adding type [Ljava/lang/Integer; for parameter powers
2021-01-11 16:47:51 -Recursively resolving dependencies for collectionElement type Ljava/lang/Integer;
2021-01-11 16:47:51 -Marking base type Ljava/lang/Integer; as seen
2021-01-11 16:47:51 -Inferred 10 properties. Properties found articleid, commentId, context, createtime, createuserid, fabulous, hfusername, parentid, replyBody, user
2021-01-11 16:47:51 -Inferred 28 properties. Properties found address, area, birthday, city, context, createtime, createuserid, depaid, email, hobby, isAdmin, isVip, jf, lastlogin, logincount, logo, name, password, phone, province, role, sex, state, updatetime, userId, username, work, xpassword
2021-01-11 16:47:51 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/Role;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Inferred 9 properties. Properties found context, createtime, createuserid, name, powers, roleId, sign, state, updatetime
2021-01-11 16:47:51 -Skipping model of type [Ljava/lang/Integer; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Adding a new model with key Comment对象
2021-01-11 16:47:51 -Adding a new model with key User对象
2021-01-11 16:47:51 -Adding a new model with key Role对象
2021-01-11 16:47:51 -Setting spring response class to: List
2021-01-11 16:47:51 -Setting response class to:List
2021-01-11 16:47:51 -Authorization count 0 for method pinglun
2021-01-11 16:47:51 -Generating unique operation named: pinglunUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |pingluninsert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |pingluninsert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |pingluninsert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Comment
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@185b3b12
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@185b3b12, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6fb55796
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6fb55796, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@72b20064
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@72b20064, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51c06629
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51c06629, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@265db58f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@265db58f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63115f35
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63115f35, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@142c213
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@142c213, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53610d3c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53610d3c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@715a37db
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@715a37db, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@518540e9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@518540e9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7691e842
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7691e842, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6954bdb2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6954bdb2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b2d5ac
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b2d5ac, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fcb4fdb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fcb4fdb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a14ffcb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a14ffcb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58194c90
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58194c90, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d8975df
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d8975df, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70b9fc5d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70b9fc5d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d3eaf26
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d3eaf26, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f510ddd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f510ddd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39c0b665
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39c0b665, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a4fe14
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a4fe14, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e8b2679
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e8b2679, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69b3f190
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69b3f190, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55fc115d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55fc115d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@748911a8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@748911a8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@430649ae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@430649ae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@35cf0f2f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@35cf0f2f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c9632
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c9632, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c34c3ca
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c34c3ca, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4d0eb6db
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4d0eb6db, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@757e22
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@757e22, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64acd518
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64acd518, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e1c70d4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e1c70d4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@469ca9a2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@469ca9a2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d334b3d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d334b3d, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: replyBody
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Comment>
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65452ba8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65452ba8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f2e43d2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f2e43d2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45ca8275
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45ca8275, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@91ee90f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@91ee90f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@517e56f5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@517e56f5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cf3afdb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cf3afdb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7dbb511a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7dbb511a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3138933
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3138933, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method pingluninsert
2021-01-11 16:47:51 -Generating unique operation named: pingluninsertUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_3
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_3
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_3
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_3
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_3
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_3
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Dept
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@132d1d92
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@132d1d92, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1874de6a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1874de6a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6356bf98
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6356bf98, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57e78444
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57e78444, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c5dc2a7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c5dc2a7, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |menujson|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |menujson|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |menujson|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method menujson
2021-01-11 16:47:51 -Generating unique operation named: menujsonUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Dept
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2fb66000
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2fb66000, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d3cd7ab
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d3cd7ab, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@599a564a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@599a564a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d4d1f0b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d4d1f0b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4167d2c2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4167d2c2, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileadmin|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fileadmin|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileadmin|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method fileadmin
2021-01-11 16:47:51 -Adding return parameter of type Lorg/springframework/core/io/InputStreamResource;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |filedownold|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |filedownold|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |filedownold|
2021-01-11 16:47:51 -Reading property inputStream
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getInputStream
2021-01-11 16:47:51 -Name 'inputStream' renamed to 'inputStream'
2021-01-11 16:47:51 -Adding property inputStream to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getInputStream
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getInputStream
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getInputStream
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getInputStream
2021-01-11 16:47:51 -Reading property description
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Name 'description' renamed to 'description'
2021-01-11 16:47:51 -Adding property description to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Reading property open
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpen
2021-01-11 16:47:51 -Name 'open' renamed to 'open'
2021-01-11 16:47:51 -Adding property open to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpen
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpen
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpen
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpen
2021-01-11 16:47:51 -Reading property url
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURL
2021-01-11 16:47:51 -Name 'url' renamed to 'url'
2021-01-11 16:47:51 -Adding property url to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURL
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURL
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURL
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURL
2021-01-11 16:47:51 -Reading property file
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Name 'file' renamed to 'file'
2021-01-11 16:47:51 -Adding property file to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Reading property readable
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReadable
2021-01-11 16:47:51 -Name 'readable' renamed to 'readable'
2021-01-11 16:47:51 -Adding property readable to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReadable
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReadable
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReadable
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isReadable
2021-01-11 16:47:51 -Reading property filename
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFilename
2021-01-11 16:47:51 -Name 'filename' renamed to 'filename'
2021-01-11 16:47:51 -Adding property filename to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFilename
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFilename
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFilename
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFilename
2021-01-11 16:47:51 -Reading property uri
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURI
2021-01-11 16:47:51 -Name 'uri' renamed to 'uri'
2021-01-11 16:47:51 -Adding property uri to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURI
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURI
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURI
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getURI
2021-01-11 16:47:51 -Inferred 8 properties. Properties found description, file, filename, inputStream, open, readable, uri, url
2021-01-11 16:47:51 -Generated parameter model id: InputStreamResource, name: InputStreamResource, schema: {} models
2021-01-11 16:47:51 -Adding a new model with key InputStreamResource
2021-01-11 16:47:51 -Adding type Ljava/io/File; for parameter file
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/io/File;
2021-01-11 16:47:51 -Reading property path
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Name 'path' renamed to 'path'
2021-01-11 16:47:51 -Adding property path to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Reading property name
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Name 'name' renamed to 'name'
2021-01-11 16:47:51 -Adding property name to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getName
2021-01-11 16:47:51 -Reading property canonicalPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalPath
2021-01-11 16:47:51 -Name 'canonicalPath' renamed to 'canonicalPath'
2021-01-11 16:47:51 -Adding property canonicalPath to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalPath
2021-01-11 16:47:51 -Reading property parent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParent
2021-01-11 16:47:51 -Name 'parent' renamed to 'parent'
2021-01-11 16:47:51 -Adding property parent to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParent
2021-01-11 16:47:51 -Reading property absolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Name 'absolute' renamed to 'absolute'
2021-01-11 16:47:51 -Adding property absolute to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Reading property absoluteFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsoluteFile
2021-01-11 16:47:51 -Name 'absoluteFile' renamed to 'absoluteFile'
2021-01-11 16:47:51 -Adding property absoluteFile to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsoluteFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsoluteFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsoluteFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsoluteFile
2021-01-11 16:47:51 -Reading property absolutePath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsolutePath
2021-01-11 16:47:51 -Name 'absolutePath' renamed to 'absolutePath'
2021-01-11 16:47:51 -Adding property absolutePath to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsolutePath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsolutePath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsolutePath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAbsolutePath
2021-01-11 16:47:51 -Reading property canonicalFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalFile
2021-01-11 16:47:51 -Name 'canonicalFile' renamed to 'canonicalFile'
2021-01-11 16:47:51 -Adding property canonicalFile to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCanonicalFile
2021-01-11 16:47:51 -Reading property freeSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFreeSpace
2021-01-11 16:47:51 -Name 'freeSpace' renamed to 'freeSpace'
2021-01-11 16:47:51 -Adding property freeSpace to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFreeSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFreeSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFreeSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFreeSpace
2021-01-11 16:47:51 -Reading property parentFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentFile
2021-01-11 16:47:51 -Name 'parentFile' renamed to 'parentFile'
2021-01-11 16:47:51 -Adding property parentFile to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getParentFile
2021-01-11 16:47:51 -Reading property totalSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTotalSpace
2021-01-11 16:47:51 -Name 'totalSpace' renamed to 'totalSpace'
2021-01-11 16:47:51 -Adding property totalSpace to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTotalSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTotalSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTotalSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTotalSpace
2021-01-11 16:47:51 -Reading property usableSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsableSpace
2021-01-11 16:47:51 -Name 'usableSpace' renamed to 'usableSpace'
2021-01-11 16:47:51 -Adding property usableSpace to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsableSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsableSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsableSpace
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsableSpace
2021-01-11 16:47:51 -Reading property directory
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isDirectory
2021-01-11 16:47:51 -Name 'directory' renamed to 'directory'
2021-01-11 16:47:51 -Adding property directory to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isDirectory
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isDirectory
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isDirectory
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isDirectory
2021-01-11 16:47:51 -Reading property file
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isFile
2021-01-11 16:47:51 -Name 'file' renamed to 'file'
2021-01-11 16:47:51 -Adding property file to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isFile
2021-01-11 16:47:51 -Reading property hidden
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isHidden
2021-01-11 16:47:51 -Name 'hidden' renamed to 'hidden'
2021-01-11 16:47:51 -Adding property hidden to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isHidden
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isHidden
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isHidden
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isHidden
2021-01-11 16:47:51 -Reading property executable
2021-01-11 16:47:51 -Reading property lastModified
2021-01-11 16:47:51 -Reading property readable
2021-01-11 16:47:51 -Reading property writable
2021-01-11 16:47:51 -Adding type Ljava/io/File; for parameter absoluteFile
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/io/File;
2021-01-11 16:47:51 -Adding type Ljava/io/File; for parameter canonicalFile
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/io/File;
2021-01-11 16:47:51 -Adding type Ljava/io/File; for parameter parentFile
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/io/File;
2021-01-11 16:47:51 -Adding type Ljava/io/InputStream; for parameter inputStream
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/io/InputStream;
2021-01-11 16:47:51 -Adding type Ljava/net/URI; for parameter uri
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/net/URI;
2021-01-11 16:47:51 -Reading property scheme
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getScheme
2021-01-11 16:47:51 -Name 'scheme' renamed to 'scheme'
2021-01-11 16:47:51 -Adding property scheme to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getScheme
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getScheme
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getScheme
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getScheme
2021-01-11 16:47:51 -Reading property fragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFragment
2021-01-11 16:47:51 -Name 'fragment' renamed to 'fragment'
2021-01-11 16:47:51 -Adding property fragment to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFragment
2021-01-11 16:47:51 -Reading property authority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Name 'authority' renamed to 'authority'
2021-01-11 16:47:51 -Adding property authority to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Reading property userInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Name 'userInfo' renamed to 'userInfo'
2021-01-11 16:47:51 -Adding property userInfo to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Reading property host
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Name 'host' renamed to 'host'
2021-01-11 16:47:51 -Adding property host to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Reading property port
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Name 'port' renamed to 'port'
2021-01-11 16:47:51 -Adding property port to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Reading property path
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Name 'path' renamed to 'path'
2021-01-11 16:47:51 -Adding property path to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Reading property query
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Name 'query' renamed to 'query'
2021-01-11 16:47:51 -Adding property query to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Reading property schemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSchemeSpecificPart
2021-01-11 16:47:51 -Name 'schemeSpecificPart' renamed to 'schemeSpecificPart'
2021-01-11 16:47:51 -Adding property schemeSpecificPart to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSchemeSpecificPart
2021-01-11 16:47:51 -Reading property absolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Name 'absolute' renamed to 'absolute'
2021-01-11 16:47:51 -Adding property absolute to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isAbsolute
2021-01-11 16:47:51 -Reading property opaque
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpaque
2021-01-11 16:47:51 -Name 'opaque' renamed to 'opaque'
2021-01-11 16:47:51 -Adding property opaque to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpaque
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpaque
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpaque
2021-01-11 16:47:51 -Evaluating unwrapped getter for member isOpaque
2021-01-11 16:47:51 -Reading property rawAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawAuthority
2021-01-11 16:47:51 -Name 'rawAuthority' renamed to 'rawAuthority'
2021-01-11 16:47:51 -Adding property rawAuthority to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawAuthority
2021-01-11 16:47:51 -Reading property rawFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawFragment
2021-01-11 16:47:51 -Name 'rawFragment' renamed to 'rawFragment'
2021-01-11 16:47:51 -Adding property rawFragment to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawFragment
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawFragment
2021-01-11 16:47:51 -Reading property rawPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawPath
2021-01-11 16:47:51 -Name 'rawPath' renamed to 'rawPath'
2021-01-11 16:47:51 -Adding property rawPath to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawPath
2021-01-11 16:47:51 -Reading property rawQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawQuery
2021-01-11 16:47:51 -Name 'rawQuery' renamed to 'rawQuery'
2021-01-11 16:47:51 -Adding property rawQuery to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawQuery
2021-01-11 16:47:51 -Reading property rawSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawSchemeSpecificPart
2021-01-11 16:47:51 -Name 'rawSchemeSpecificPart' renamed to 'rawSchemeSpecificPart'
2021-01-11 16:47:51 -Adding property rawSchemeSpecificPart to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawSchemeSpecificPart
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawSchemeSpecificPart
2021-01-11 16:47:51 -Reading property rawUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawUserInfo
2021-01-11 16:47:51 -Name 'rawUserInfo' renamed to 'rawUserInfo'
2021-01-11 16:47:51 -Adding property rawUserInfo to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRawUserInfo
2021-01-11 16:47:51 -Adding type Ljava/net/URL; for parameter url
2021-01-11 16:47:51 -Recursively resolving dependencies for type Ljava/net/URL;
2021-01-11 16:47:51 -Reading property protocol
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProtocol
2021-01-11 16:47:51 -Name 'protocol' renamed to 'protocol'
2021-01-11 16:47:51 -Adding property protocol to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProtocol
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProtocol
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProtocol
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getProtocol
2021-01-11 16:47:51 -Reading property host
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Name 'host' renamed to 'host'
2021-01-11 16:47:51 -Adding property host to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Reading property port
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Name 'port' renamed to 'port'
2021-01-11 16:47:51 -Adding property port to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPort
2021-01-11 16:47:51 -Reading property file
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Name 'file' renamed to 'file'
2021-01-11 16:47:51 -Adding property file to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getFile
2021-01-11 16:47:51 -Reading property query
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Name 'query' renamed to 'query'
2021-01-11 16:47:51 -Adding property query to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getQuery
2021-01-11 16:47:51 -Reading property authority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Name 'authority' renamed to 'authority'
2021-01-11 16:47:51 -Adding property authority to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getAuthority
2021-01-11 16:47:51 -Reading property path
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Name 'path' renamed to 'path'
2021-01-11 16:47:51 -Adding property path to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getPath
2021-01-11 16:47:51 -Reading property userInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Name 'userInfo' renamed to 'userInfo'
2021-01-11 16:47:51 -Adding property userInfo to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserInfo
2021-01-11 16:47:51 -Reading property ref
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRef
2021-01-11 16:47:51 -Name 'ref' renamed to 'ref'
2021-01-11 16:47:51 -Adding property ref to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRef
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRef
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRef
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getRef
2021-01-11 16:47:51 -Reading property content
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContent
2021-01-11 16:47:51 -Name 'content' renamed to 'content'
2021-01-11 16:47:51 -Adding property content to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getContent
2021-01-11 16:47:51 -Reading property defaultPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDefaultPort
2021-01-11 16:47:51 -Name 'defaultPort' renamed to 'defaultPort'
2021-01-11 16:47:51 -Adding property defaultPort to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDefaultPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDefaultPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDefaultPort
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDefaultPort
2021-01-11 16:47:51 -Reading property deserializedFields
2021-01-11 16:47:51 -Reading property serializedHashCode
2021-01-11 16:47:51 -Inferred 15 properties. Properties found absolute, absoluteFile, absolutePath, canonicalFile, canonicalPath, directory, file, freeSpace, hidden, name, parent, parentFile, path, totalSpace, usableSpace
2021-01-11 16:47:51 -Inferred 0 properties. Properties found 
2021-01-11 16:47:51 -Inferred 17 properties. Properties found absolute, authority, fragment, host, opaque, path, port, query, rawAuthority, rawFragment, rawPath, rawQuery, rawSchemeSpecificPart, rawUserInfo, scheme, schemeSpecificPart, userInfo
2021-01-11 16:47:51 -Inferred 11 properties. Properties found authority, content, defaultPort, file, host, path, port, protocol, query, ref, userInfo
2021-01-11 16:47:51 -Adding a new model with key InputStream
2021-01-11 16:47:51 -Adding a new model with key File
2021-01-11 16:47:51 -Adding a new model with key URI
2021-01-11 16:47:51 -Adding a new model with key URL
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Setting spring response class to: InputStreamResource
2021-01-11 16:47:51 -Setting response class to:InputStreamResource
2021-01-11 16:47:51 -Authorization count 0 for method filedownold
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method fileimage
2021-01-11 16:47:51 -Generating unique operation named: fileimageUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |filelist|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |filelist|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |filelist|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method filelist
2021-01-11 16:47:51 -Adding return parameter of type Lcom/dong/util/HttpResult;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileremove|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fileremove|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileremove|
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Reading property msg
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getMsg
2021-01-11 16:47:51 -Name 'msg' renamed to 'msg'
2021-01-11 16:47:51 -Adding property msg to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getMsg
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getMsg
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getMsg
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getMsg
2021-01-11 16:47:51 -Inferred 2 properties. Properties found msg, state
2021-01-11 16:47:51 -Generated parameter model id: HttpResult, name: HttpResult, schema: {} models
2021-01-11 16:47:51 -Adding a new model with key HttpResult
2021-01-11 16:47:51 -Setting spring response class to: HttpResult
2021-01-11 16:47:51 -Setting response class to:HttpResult
2021-01-11 16:47:51 -Authorization count 0 for method fileremove
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleInfo|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articleInfo|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleInfo|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method articleInfo
2021-01-11 16:47:51 -Generating unique operation named: articleInfoUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlebk|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articlebk|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlebk|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method articlebk
2021-01-11 16:47:51 -Generating unique operation named: articlebkUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlezy|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articlezy|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articlezy|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method articlezy
2021-01-11 16:47:51 -Generating unique operation named: articlezyUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_4
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |serach|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method serach
2021-01-11 16:47:51 -Generating unique operation named: serachUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |tag|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |tag|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |tag|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method tag
2021-01-11 16:47:51 -Generating unique operation named: tagUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatepl|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method updatepl
2021-01-11 16:47:51 -Generating unique operation named: updateplUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleadd|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articleadd|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleadd|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method articleadd
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |main|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |main|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |main|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method main
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |navbar|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |navbar|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |navbar|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method navbar
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |passwordedit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |passwordedit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |passwordedit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method passwordedit
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |sendEmail|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |sendEmail|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |sendEmail|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method sendEmail
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |blog|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |blog|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |blog|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method blog
2021-01-11 16:47:51 -Generating unique operation named: blogUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method indexpid
2021-01-11 16:47:51 -Generating unique operation named: indexpidUsingGET_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_5
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Links
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@120395c8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@120395c8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@744656d7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@744656d7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@391127e8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@391127e8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14ccee35
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14ccee35, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1aef84b1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1aef84b1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5cd999d5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5cd999d5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cc7cbc1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cc7cbc1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1f892d2a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1f892d2a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7925e866
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7925e866, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Links
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b699680
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b699680, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ddf1cba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ddf1cba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3befbfbf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3befbfbf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44bf7695
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44bf7695, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33952514
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33952514, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26bad510
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26bad510, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@606e843f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@606e843f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5f5a4d79
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5f5a4d79, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@457d6e03
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@457d6e03, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_6
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |AdminRegister|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |AdminRegister|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |AdminRegister|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bf25be6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bf25be6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e13031f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e13031f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b557f3c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b557f3c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16a25fb5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16a25fb5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5edb2df2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5edb2df2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7876c6cd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7876c6cd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@381afa60
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@381afa60, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c414521
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c414521, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@757ca2fb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@757ca2fb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f6292f9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f6292f9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26558904
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26558904, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a83758b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a83758b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d6c2174
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d6c2174, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@56429f7a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@56429f7a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d9b3823
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d9b3823, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5110c965
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5110c965, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13eb3572
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13eb3572, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@664333c9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@664333c9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@27d4502
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@27d4502, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55f1ffc9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55f1ffc9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ffb00a0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ffb00a0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6059b5ed
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6059b5ed, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8e4a9b1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8e4a9b1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@52b110d3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@52b110d3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1508e425
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1508e425, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38d3cdb4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38d3cdb4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1557423e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1557423e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fbaffcf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fbaffcf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1dc103d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1dc103d1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bd9c3b0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bd9c3b0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14303047
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14303047, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c6ce189
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c6ce189, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1926a45e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1926a45e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c172089
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c172089, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79b08744
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79b08744, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@123b5152
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@123b5152, with type: 
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method AdminRegister
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |LoginUrl|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |LoginUrl|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |LoginUrl|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method LoginUrl
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |adminLogin|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |adminLogin|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |adminLogin|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.http.HttpSession
2021-01-11 16:47:51 -Attempting to expand expandable property: servletContext
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.ServletContext
2021-01-11 16:47:51 -Attempting to expand expandable property: servletNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: servlets
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<javax.servlet.Servlet>
2021-01-11 16:47:51 -Attempting to expand expandable property: attributeNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: initParameterNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: servletRegistrations
2021-01-11 16:47:51 -Expanding parameter type: java.util.Map<java.lang.String,javax.servlet.ServletRegistration>
2021-01-11 16:47:51 -Attempting to expand expandable property: defaultSessionTrackingModes
2021-01-11 16:47:51 -Expanding parameter type: java.util.Set<javax.servlet.SessionTrackingMode>
2021-01-11 16:47:51 -Attempting to expand expandable property: effectiveSessionTrackingModes
2021-01-11 16:47:51 -Expanding parameter type: java.util.Set<javax.servlet.SessionTrackingMode>
2021-01-11 16:47:51 -Attempting to expand expandable property: jspConfigDescriptor
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.descriptor.JspConfigDescriptor
2021-01-11 16:47:51 -Attempting to expand expandable property: taglibs
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<javax.servlet.descriptor.TaglibDescriptor>
2021-01-11 16:47:51 -Attempting to expand expandable property: jspPropertyGroups
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<javax.servlet.descriptor.JspPropertyGroupDescriptor>
2021-01-11 16:47:51 -Attempting to expand collection/array field: taglibs
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.descriptor.TaglibDescriptor
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@551ecda
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@551ecda, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e341a86
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e341a86, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: jspPropertyGroups
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.descriptor.JspPropertyGroupDescriptor
2021-01-11 16:47:51 -Attempting to expand expandable property: urlPatterns
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: includePreludes
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: includeCodas
2021-01-11 16:47:51 -Expanding parameter type: java.util.Collection<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand collection/array field: urlPatterns
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c4e21e3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c4e21e3, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: includePreludes
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@537814b1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@537814b1, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: includeCodas
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30b791ae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@30b791ae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@95afec6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@95afec6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@467332cb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@467332cb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5230f2c6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5230f2c6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@cc29a88
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@cc29a88, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e846604
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e846604, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bf71fd0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bf71fd0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23f9d4fc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23f9d4fc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7dce75fa
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7dce75fa, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e44ec0c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e44ec0c, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: sessionCookieConfig
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.SessionCookieConfig
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13f7990c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13f7990c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fc1403d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fc1403d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@11ae879a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@11ae879a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48532d2f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48532d2f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67c3f2d0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67c3f2d0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@721696bd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@721696bd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17e15d32
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17e15d32, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: filterRegistrations
2021-01-11 16:47:51 -Expanding parameter type: java.util.Map<java.lang.String,javax.servlet.FilterRegistration>
2021-01-11 16:47:51 -Attempting to expand collection/array field: defaultSessionTrackingModes
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2bcf036c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2bcf036c, with type: 
2021-01-11 16:47:51 -Attempting to expand collection/array field: effectiveSessionTrackingModes
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33c0b9a5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33c0b9a5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58e9930f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58e9930f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79c8741b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79c8741b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78ec77c6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78ec77c6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@268c0a61
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@268c0a61, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@717cc0d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@717cc0d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3faf1724
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3faf1724, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c853534
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6c853534, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64865d61
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64865d61, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e26a709
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e26a709, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e3e7ab0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e3e7ab0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b825bfb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b825bfb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62ff4bad
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62ff4bad, with type: 
2021-01-11 16:47:51 -Attempting to expand expandable property: valueNames
2021-01-11 16:47:51 -Expanding parameter type: java.lang.String[]
2021-01-11 16:47:51 -Attempting to expand expandable property: attributeNames
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand expandable property: sessionContext
2021-01-11 16:47:51 -Expanding parameter type: javax.servlet.http.HttpSessionContext
2021-01-11 16:47:51 -Attempting to expand expandable property: ids
2021-01-11 16:47:51 -Expanding parameter type: java.util.Enumeration<java.lang.String>
2021-01-11 16:47:51 -Attempting to expand collection/array field: valueNames
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50869455
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50869455, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@500eaf4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@500eaf4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15fbebd5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15fbebd5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@525383a1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@525383a1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48b812bf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48b812bf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62f8d62c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62f8d62c, with type: 
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method adminLogin
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |codeequal|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |codeequal|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |codeequal|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method codeequal
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method login
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loginout
2021-01-11 16:47:51 -Generating unique operation named: loginoutUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type V
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |yzmcode|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |yzmcode|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |yzmcode|
2021-01-11 16:47:51 -Skipping model of type V as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for void
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Setting spring response class to: null
2021-01-11 16:47:51 -Authorization count 0 for method yzmcode
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insetuser|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insetuser|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insetuser|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42701776
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42701776, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70b33a54
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70b33a54, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19fada0a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19fada0a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70e409ae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70e409ae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d5691a8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d5691a8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@345e71cc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@345e71cc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b3bc7c7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b3bc7c7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2bc20877
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2bc20877, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5e7cee5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5e7cee5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@192a73f3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@192a73f3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@93bed78
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@93bed78, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17ad17c2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17ad17c2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ce50918
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ce50918, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@561a549c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@561a549c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f7027dc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f7027dc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4be94ce3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4be94ce3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fd34fb6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fd34fb6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e36a135
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e36a135, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50863de8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50863de8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5109ed4f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5109ed4f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f2b627
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f2b627, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fd68085
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fd68085, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ede97ea
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ede97ea, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60a36eeb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60a36eeb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7171af56
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7171af56, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a08cb55
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a08cb55, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50e36639
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@50e36639, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b4c9ef8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b4c9ef8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@573b9fd8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@573b9fd8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b75b409
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b75b409, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cd1f0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cd1f0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f18345b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f18345b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44d6b73f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44d6b73f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22658650
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@22658650, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44e020bd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@44e020bd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a546e96
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a546e96, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insetuser
2021-01-11 16:47:51 -Generating unique operation named: insetuserUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |login|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75422da
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75422da, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75eaace2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75eaace2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bf75133
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3bf75133, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fd1e3de
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5fd1e3de, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47bed50e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47bed50e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6713eca7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6713eca7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66ec57bf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66ec57bf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36f397af
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36f397af, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fda9043
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7fda9043, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1bfd01be
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1bfd01be, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@59746e10
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@59746e10, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@625f133d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@625f133d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b22c73b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b22c73b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@821c910
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@821c910, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@68030177
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@68030177, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5750853
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5750853, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39a28a4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@39a28a4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@859125f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@859125f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7821a29a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7821a29a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55bb0a5d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55bb0a5d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@736c746
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@736c746, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@473df615
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@473df615, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@327db91a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@327db91a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f99b4ea
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f99b4ea, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ea448a8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ea448a8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26819a37
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26819a37, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79eb5294
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79eb5294, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b2787a7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b2787a7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@27ea7f63
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@27ea7f63, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d10198b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d10198b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e4c954f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2e4c954f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19e1359e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@19e1359e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d0450a6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6d0450a6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6055c0cc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6055c0cc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2af9d764
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2af9d764, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a244a60
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a244a60, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method login
2021-01-11 16:47:51 -Generating unique operation named: loginUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loginout|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loginout
2021-01-11 16:47:51 -Generating unique operation named: loginoutUsingGET_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |zhuc|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |zhuc|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |zhuc|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method zhuc
2021-01-11 16:47:51 -Generating unique operation named: zhucUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_12
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Menu
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31e7821b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31e7821b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40a1bdfd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40a1bdfd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@440d8164
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@440d8164, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fac2841
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fac2841, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b914965
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b914965, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@761245bf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@761245bf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5e3cecb8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5e3cecb8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c291e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c291e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@553c1625
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@553c1625, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@24df45ad
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@24df45ad, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@596e2e3f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@596e2e3f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2852abf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2852abf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@56ce9b8e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@56ce9b8e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8e25ed7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8e25ed7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b2e9055
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b2e9055, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@299e6855
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@299e6855, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33908f57
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33908f57, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f787b81
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f787b81, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40abe803
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40abe803, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a2dfc83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a2dfc83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2df022a6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2df022a6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51a8f0ea
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51a8f0ea, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e5cf12c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e5cf12c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3be0c580
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3be0c580, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17a92548
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17a92548, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@110a8f7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@110a8f7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28ecfc68
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@28ecfc68, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@159de030
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@159de030, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b4004ae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b4004ae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f134a21
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f134a21, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d3f017
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d3f017, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ab51c5d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ab51c5d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@319b02d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@319b02d1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@640c0481
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@640c0481, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b40035f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7b40035f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@29c5bf9e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@29c5bf9e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d5ed78b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d5ed78b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b23ad60
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b23ad60, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55304281
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@55304281, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48fc38ff
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48fc38ff, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@35abbb41
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@35abbb41, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6258c33f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6258c33f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4bca344b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4bca344b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7251f3aa
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7251f3aa, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ac82f12
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ac82f12, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e2d564f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e2d564f, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loweradd|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |loweradd|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |loweradd|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method loweradd
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |lowerinsert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |lowerinsert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |lowerinsert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Menu
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@54b97d30
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@54b97d30, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51e12621
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@51e12621, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3de0973f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3de0973f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14526e85
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14526e85, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@a864902
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@a864902, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@520ea65d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@520ea65d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6bee8a4c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6bee8a4c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ccfe7f2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ccfe7f2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@732215b4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@732215b4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ae84350
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ae84350, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7da4fa23
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7da4fa23, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8848ede
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8848ede, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@438859e4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@438859e4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b526006
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b526006, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d237022
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d237022, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1c655d1b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1c655d1b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64cf4cc1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64cf4cc1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3ab97a67
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3ab97a67, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c9daf72
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c9daf72, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aa6a07f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aa6a07f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14115cae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14115cae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@650a6609
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@650a6609, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@343da3e5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@343da3e5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b275845
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b275845, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15cd91a3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15cd91a3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2341973d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2341973d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7aba3a3b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7aba3a3b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4beeb059
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4beeb059, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3257700e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3257700e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d80e106
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d80e106, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36c07b6f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36c07b6f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8927996
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8927996, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14cbf8a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14cbf8a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b5ef674
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b5ef674, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ef0ed73
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ef0ed73, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@35b56ff2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@35b56ff2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62e574bb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62e574bb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8016846
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@8016846, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@37f0a284
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@37f0a284, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@46d346aa
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@46d346aa, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c1ab882
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c1ab882, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3eccdf07
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3eccdf07, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62762862
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@62762862, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3865e7c1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3865e7c1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@616296e7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@616296e7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@390e592b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@390e592b, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method lowerinsert
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Menu
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2077187d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2077187d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69251af0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69251af0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47c1b9db
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47c1b9db, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2104c32a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2104c32a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a4591a8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a4591a8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7bf6fe8a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7bf6fe8a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31339f4e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31339f4e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36a907d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36a907d1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cb9b057
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6cb9b057, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fce097d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fce097d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f03a362
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f03a362, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25d43c48
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25d43c48, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57b66a1b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57b66a1b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@688c0471
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@688c0471, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e74efdd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e74efdd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a76bcba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a76bcba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@52518409
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@52518409, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d8de7c8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d8de7c8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@441ef1a3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@441ef1a3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2be206f6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2be206f6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@754dbe4f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@754dbe4f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@474cb489
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@474cb489, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@746cc62a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@746cc62a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f82bbe7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f82bbe7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57a5db9e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@57a5db9e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@756fc51f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@756fc51f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67a0000e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67a0000e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d27c29e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d27c29e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4427978f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4427978f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f6be529
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4f6be529, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@282c3cba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@282c3cba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b1c2813
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b1c2813, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53ff4910
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53ff4910, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43adbceb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43adbceb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aad81c8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@aad81c8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40bb6c3e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40bb6c3e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@602d6542
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@602d6542, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c15346
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3c15346, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@654d44b5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@654d44b5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c7dcea0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c7dcea0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e2385d3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e2385d3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@144004e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@144004e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63aec608
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63aec608, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69bd3e18
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69bd3e18, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ba223e1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7ba223e1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ac51aab
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ac51aab, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method updatestate
2021-01-11 16:47:51 -Generating unique operation named: updatestateUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_13
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_7
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Notice
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20974065
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20974065, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65493fbc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65493fbc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16f5d1c7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16f5d1c7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1c551592
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1c551592, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6dbea15
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6dbea15, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a4381ad
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a4381ad, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@120016cb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@120016cb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@264d689c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@264d689c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f1fb502
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f1fb502, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@49671da5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@49671da5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bc3ec0c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bc3ec0c, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_4
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method state
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Notice
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65c9db11
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65c9db11, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@212ef828
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@212ef828, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@cb7ae0b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@cb7ae0b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b32e3c4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b32e3c4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2008a0e0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2008a0e0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76b1f371
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@76b1f371, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4747cc5a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4747cc5a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bf72bb5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bf72bb5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e9d9f8b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e9d9f8b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@474ed952
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@474ed952, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e12e8fd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e12e8fd, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_8
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_8
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_8
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_8
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_8
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_8
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |see|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |see|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |see|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method see
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_10
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_9
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_9
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_9
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_9
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_9
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_9
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Power
2021-01-11 16:47:51 -Attempting to expand expandable property: menu
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Menu
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e90c2e4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@e90c2e4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41895334
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41895334, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1e3a965a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1e3a965a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14d7f310
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@14d7f310, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@521c8378
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@521c8378, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@59876afc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@59876afc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1345bfd0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1345bfd0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@382191db
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@382191db, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ca29940
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6ca29940, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7719e257
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7719e257, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b9a58cd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b9a58cd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64adbcd4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64adbcd4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c31eb4f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c31eb4f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3402bbc4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3402bbc4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64458bd1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64458bd1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67ad7f85
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67ad7f85, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4650242f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4650242f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1589af45
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1589af45, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ddaa526
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5ddaa526, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5107b84f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5107b84f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16319f1c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16319f1c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e1ae918
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e1ae918, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@46e19668
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@46e19668, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a488b3b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a488b3b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@301b2811
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@301b2811, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@29505523
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@29505523, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63c8d4b7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@63c8d4b7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d378aa6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d378aa6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@648570b1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@648570b1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fd7d84f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4fd7d84f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a1fd06e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a1fd06e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bcc1531
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5bcc1531, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1403e601
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1403e601, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65e7416e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@65e7416e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@716f711c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@716f711c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a31879d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a31879d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6528c73
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6528c73, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64599f77
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64599f77, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1af872eb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1af872eb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@261c0870
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@261c0870, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1cb5aa03
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1cb5aa03, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4503fc54
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4503fc54, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31a230c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31a230c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ea64b22
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4ea64b22, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f721547
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7f721547, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25c9a7a1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25c9a7a1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@464d7121
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@464d7121, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2001af5d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2001af5d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b66565f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1b66565f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d55f256
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d55f256, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d6a66b9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d6a66b9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41709e5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@41709e5, with type: 
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_5
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Power
2021-01-11 16:47:51 -Attempting to expand expandable property: menu
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Menu
2021-01-11 16:47:51 -Attempting to expand expandable property: user
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66b96912
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66b96912, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b73ce5c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b73ce5c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2577fadd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2577fadd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@408bb622
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@408bb622, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b249fd7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b249fd7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e60a7c1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7e60a7c1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64db0bc2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64db0bc2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79fc8bdd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@79fc8bdd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d1c94ab
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d1c94ab, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6444f51b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6444f51b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@536888cf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@536888cf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@508eecf9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@508eecf9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40f095b2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@40f095b2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3df4c9a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3df4c9a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33a84d8f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33a84d8f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77b1034d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77b1034d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ef33abd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@ef33abd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ea3a9df
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ea3a9df, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5f964db1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5f964db1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20428665
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20428665, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@37f37602
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@37f37602, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4addc72
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4addc72, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69bbe293
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69bbe293, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5dfe206f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5dfe206f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@71911eb4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@71911eb4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1bb502b8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1bb502b8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d2cc427
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2d2cc427, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fd74b5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1fd74b5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78e0be80
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78e0be80, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b73c3e6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b73c3e6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b52b53
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b52b53, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a87af2c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6a87af2c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@176e0842
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@176e0842, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@425785ba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@425785ba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b11c110
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6b11c110, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3cb8fd91
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3cb8fd91, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@679ddd0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@679ddd0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@553406ba
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@553406ba, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33a7b4ce
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33a7b4ce, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60b37a93
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60b37a93, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d187e79
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5d187e79, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5397a0d0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5397a0d0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@288b2fd3
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@288b2fd3, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@654a4a26
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@654a4a26, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7bbf1b40
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7bbf1b40, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15c0a5c7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15c0a5c7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66bcecfd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@66bcecfd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6eb3952c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6eb3952c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16236923
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@16236923, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7cef0504
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7cef0504, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@fdd351f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@fdd351f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23a2fb6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23a2fb6, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_11
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_10
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_10
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23d24a12
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@23d24a12, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@81eb39c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@81eb39c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@517b60a8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@517b60a8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@12d949a5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@12d949a5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64f18fb5
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@64f18fb5, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@198e42e4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@198e42e4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13fa1f5d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@13fa1f5d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b36e8e6
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b36e8e6, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4820b5ee
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4820b5ee, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_6
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67fbf62b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67fbf62b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@776ef302
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@776ef302, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@465da527
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@465da527, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b9ff7c7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@b9ff7c7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ab714bf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1ab714bf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a410208
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a410208, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@311ee8fa
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@311ee8fa, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@454b00d1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@454b00d1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75b8f99e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@75b8f99e, with type: 
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |updatestate|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method updatestate
2021-01-11 16:47:51 -Generating unique operation named: updatestateUsingPOST_3
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |unauthorized|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |unauthorized|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |unauthorized|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method unauthorized
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_17
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_11
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_11
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.System
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f91b83f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3f91b83f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48bc21c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@48bc21c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e2cc4cc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3e2cc4cc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7530add7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7530add7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4752b30e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4752b30e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d1302da
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1d1302da, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45c1bf10
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45c1bf10, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@356ffc6a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@356ffc6a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6777e30a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6777e30a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@627738ec
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@627738ec, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a06328d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2a06328d, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_12
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_7
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_18
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_12
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_12
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_12
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_12
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_12
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_12
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_12
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/List<Lcom/dong/system/entity/OnlineUser;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |select|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |select|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |select|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/OnlineUser;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.List<com.dong.system.entity.OnlineUser>
2021-01-11 16:47:51 -Adding type for parameter Lcom/dong/system/entity/OnlineUser;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/OnlineUser;
2021-01-11 16:47:51 -Reading property user_id
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser_id
2021-01-11 16:47:51 -Name 'user_id' renamed to 'user_id'
2021-01-11 16:47:51 -Adding property user_id to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser_id
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser_id
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser_id
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUser_id
2021-01-11 16:47:51 -Reading property xhid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXhid
2021-01-11 16:47:51 -Name 'xhid' renamed to 'xhid'
2021-01-11 16:47:51 -Adding property xhid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXhid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXhid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXhid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getXhid
2021-01-11 16:47:51 -Reading property username
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Name 'username' renamed to 'username'
2021-01-11 16:47:51 -Adding property username to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUsername
2021-01-11 16:47:51 -Reading property isadmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsadmin
2021-01-11 16:47:51 -Name 'isadmin' renamed to 'isadmin'
2021-01-11 16:47:51 -Adding property isadmin to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsadmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsadmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsadmin
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getIsadmin
2021-01-11 16:47:51 -Reading property logindatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogindatetime
2021-01-11 16:47:51 -Name 'logindatetime' renamed to 'logindatetime'
2021-01-11 16:47:51 -Adding property logindatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogindatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogindatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogindatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogindatetime
2021-01-11 16:47:51 -Reading property lastdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastdatetime
2021-01-11 16:47:51 -Name 'lastdatetime' renamed to 'lastdatetime'
2021-01-11 16:47:51 -Adding property lastdatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLastdatetime
2021-01-11 16:47:51 -Reading property logoutdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogoutdatetime
2021-01-11 16:47:51 -Name 'logoutdatetime' renamed to 'logoutdatetime'
2021-01-11 16:47:51 -Adding property logoutdatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogoutdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogoutdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogoutdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getLogoutdatetime
2021-01-11 16:47:51 -Reading property host
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Name 'host' renamed to 'host'
2021-01-11 16:47:51 -Adding property host to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getHost
2021-01-11 16:47:51 -Reading property systemHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSystemHost
2021-01-11 16:47:51 -Name 'systemHost' renamed to 'systemHost'
2021-01-11 16:47:51 -Adding property systemHost to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSystemHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSystemHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSystemHost
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getSystemHost
2021-01-11 16:47:51 -Reading property userAgent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserAgent
2021-01-11 16:47:51 -Name 'userAgent' renamed to 'userAgent'
2021-01-11 16:47:51 -Adding property userAgent to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserAgent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserAgent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserAgent
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUserAgent
2021-01-11 16:47:51 -Reading property status
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Name 'status' renamed to 'status'
2021-01-11 16:47:51 -Adding property status to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getStatus
2021-01-11 16:47:51 -Inferred 11 properties. Properties found host, isadmin, lastdatetime, logindatetime, logoutdatetime, status, systemHost, userAgent, user_id, username, xhid
2021-01-11 16:47:51 -Adding a new model with key OnlineUser
2021-01-11 16:47:51 -Setting spring response class to: List
2021-01-11 16:47:51 -Setting response class to:List
2021-01-11 16:47:51 -Authorization count 0 for method select
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.util.HashMap<java.lang.String,java.lang.Object>
2021-01-11 16:47:51 -Setting spring response class to: HashMap«string,object»
2021-01-11 16:47:51 -Setting response class to:HashMap«string,object»
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_13
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_19
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_13
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_13
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_13
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_13
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_13
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_13
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_13
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_8
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_14
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_20
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_14
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_14
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Task
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@32d3aa72
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@32d3aa72, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3af223d2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3af223d2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2528aa5d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2528aa5d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@56f7d2a9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@56f7d2a9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7958623f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7958623f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@521f3275
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@521f3275, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@32051029
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@32051029, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a8ffe5a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5a8ffe5a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@607c26ae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@607c26ae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4bdb2c4e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4bdb2c4e, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/util/List<Lcom/dong/system/entity/Task;>;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |selectall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |selectall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |selectall|
2021-01-11 16:47:51 -Skipping model of type Ljava/util/List<Lcom/dong/system/entity/Task;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-11 16:47:51 -Did not find any parameter models for java.util.List<com.dong.system.entity.Task>
2021-01-11 16:47:51 -Adding type for parameter Lcom/dong/system/entity/Task;
2021-01-11 16:47:51 -Recursively resolving dependencies for parameter Lcom/dong/system/entity/Task;
2021-01-11 16:47:51 -Reading property taskId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTaskId
2021-01-11 16:47:51 -Name 'taskId' renamed to 'taskId'
2021-01-11 16:47:51 -Adding property taskId to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTaskId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTaskId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTaskId
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getTaskId
2021-01-11 16:47:51 -Reading property createtime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Name 'createtime' renamed to 'createtime'
2021-01-11 16:47:51 -Adding property createtime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreatetime
2021-01-11 16:47:51 -Reading property cron
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCron
2021-01-11 16:47:51 -Name 'cron' renamed to 'cron'
2021-01-11 16:47:51 -Adding property cron to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCron
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCron
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCron
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCron
2021-01-11 16:47:51 -Reading property createuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Name 'createuserid' renamed to 'createuserid'
2021-01-11 16:47:51 -Adding property createuserid to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getCreateuserid
2021-01-11 16:47:51 -Reading property classmethod
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getClassmethod
2021-01-11 16:47:51 -Name 'classmethod' renamed to 'classmethod'
2021-01-11 16:47:51 -Adding property classmethod to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getClassmethod
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getClassmethod
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getClassmethod
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getClassmethod
2021-01-11 16:47:51 -Reading property updatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Name 'updatetime' renamed to 'updatetime'
2021-01-11 16:47:51 -Adding property updatetime to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getUpdatetime
2021-01-11 16:47:51 -Reading property description
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Name 'description' renamed to 'description'
2021-01-11 16:47:51 -Adding property description to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getDescription
2021-01-11 16:47:51 -Reading property jobName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobName
2021-01-11 16:47:51 -Name 'jobName' renamed to 'jobName'
2021-01-11 16:47:51 -Adding property jobName to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobName
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobName
2021-01-11 16:47:51 -Reading property jobGroup
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobGroup
2021-01-11 16:47:51 -Name 'jobGroup' renamed to 'jobGroup'
2021-01-11 16:47:51 -Adding property jobGroup to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobGroup
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobGroup
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobGroup
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getJobGroup
2021-01-11 16:47:51 -Reading property state
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Name 'state' renamed to 'state'
2021-01-11 16:47:51 -Adding property state to model
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Evaluating unwrapped getter for member getState
2021-01-11 16:47:51 -Inferred 10 properties. Properties found classmethod, createtime, createuserid, cron, description, jobGroup, jobName, state, taskId, updatetime
2021-01-11 16:47:51 -Adding a new model with key Task对象
2021-01-11 16:47:51 -Setting spring response class to: List
2021-01-11 16:47:51 -Setting response class to:List
2021-01-11 16:47:51 -Authorization count 0 for method selectall
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method state
2021-01-11 16:47:51 -Generating unique operation named: stateUsingPOST_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Task
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@677e4acb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@677e4acb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@198f00a9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@198f00a9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@bee60
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@bee60, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@580d99bb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@580d99bb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4db0a863
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4db0a863, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c5b7334
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2c5b7334, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73fcf031
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@73fcf031, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47087fb4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47087fb4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@fb33486
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@fb33486, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78062497
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@78062497, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |addjf|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |addjf|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |addjf|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method addjf
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_15
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_9
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_10
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_21
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_15
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_15
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insertjf|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insertjf|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insertjf|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1335661
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1335661, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1341569c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1341569c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a588400
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a588400, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2dd4e17f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2dd4e17f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5055860b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5055860b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@49b9cf2b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@49b9cf2b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77ff3a98
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77ff3a98, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7daaf201
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7daaf201, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67401fb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@67401fb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ec6f9dc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ec6f9dc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b67b714
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b67b714, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4abc01ac
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4abc01ac, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e33ac75
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6e33ac75, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77a2b076
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77a2b076, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b10b67d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2b10b67d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58b3e76e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@58b3e76e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a70dd0e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3a70dd0e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60950baf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60950baf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e98fa9e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4e98fa9e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@957fcb4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@957fcb4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3573d83d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3573d83d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d73654f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d73654f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74363c75
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@74363c75, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42b2cc1b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@42b2cc1b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69ab5640
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@69ab5640, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f941f27
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@f941f27, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a045f34
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4a045f34, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1e82907b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1e82907b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2da8dcbd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2da8dcbd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26a9308
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@26a9308, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6aff818e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6aff818e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60f4d5e2
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@60f4d5e2, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@bd2b075
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@bd2b075, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5df680d4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5df680d4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b138915
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b138915, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d0e1e50
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d0e1e50, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insertjf
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |state|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method state
2021-01-11 16:47:51 -Generating unique operation named: stateUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.User
2021-01-11 16:47:51 -Attempting to expand expandable property: role
2021-01-11 16:47:51 -Expanding parameter type: java.util.List<com.dong.system.entity.Role>
2021-01-11 16:47:51 -Attempting to expand collection/array field: role
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Role
2021-01-11 16:47:51 -Attempting to expand expandable property: powers
2021-01-11 16:47:51 -Expanding parameter type: java.lang.Integer[]
2021-01-11 16:47:51 -Attempting to expand collection/array field: powers
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@526340c7
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@526340c7, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15a6c304
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@15a6c304, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5910af9b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5910af9b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a8ed429
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7a8ed429, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38f43e96
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@38f43e96, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1be9746f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1be9746f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47d96cfe
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@47d96cfe, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b7ad7b0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4b7ad7b0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2791ce8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2791ce8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@395acbc1
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@395acbc1, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1f076ec8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1f076ec8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1952c607
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1952c607, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33b4282a
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33b4282a, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5c5fe95e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5c5fe95e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77672ecb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77672ecb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6500bd75
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6500bd75, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4636bd92
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4636bd92, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6bf8e352
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@6bf8e352, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25279990
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25279990, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45ac6354
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@45ac6354, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36859c5e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@36859c5e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a4b1baf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a4b1baf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b9fa6f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3b9fa6f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25299f8f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25299f8f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fd48018
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3fd48018, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d80722e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7d80722e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31a68573
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@31a68573, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@589aa12f
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@589aa12f, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43d53e64
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@43d53e64, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d3a3532
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3d3a3532, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3832a2fb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@3832a2fb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@352cff0b
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@352cff0b, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5f60c1d4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5f60c1d4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@331ffcaf
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@331ffcaf, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1e17b54d
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1e17b54d, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c91d523
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c91d523, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_10
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_10
2021-01-11 16:47:51 -Adding return parameter of type Lorg/springframework/web/servlet/ModelAndView;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleEdit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |articleEdit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |articleEdit|
2021-01-11 16:47:51 -Generated parameter model id: ModelAndView, name: ModelAndView, schema: {} models
2021-01-11 16:47:51 -Adding a new model with key ModelAndView
2021-01-11 16:47:51 -Inferred 1 properties. Properties found contentType
2021-01-11 16:47:51 -Adding a new model with key View
2021-01-11 16:47:51 -Setting spring response class to: ModelAndView
2021-01-11 16:47:51 -Setting response class to:ModelAndView
2021-01-11 16:47:51 -Authorization count 0 for method articleEdit
2021-01-11 16:47:51 -Generating unique operation named: articleEditUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_22
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |userinfo|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |userinfo|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |userinfo|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method userinfo
2021-01-11 16:47:51 -Generating unique operation named: userinfoUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |add|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method add
2021-01-11 16:47:51 -Generating unique operation named: addUsingGET_11
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |delete|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method delete
2021-01-11 16:47:51 -Generating unique operation named: deleteUsingPOST_16
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Integer;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |deleteall|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Integer
2021-01-11 16:47:51 -Setting spring response class to: int
2021-01-11 16:47:51 -Setting response class to:int
2021-01-11 16:47:51 -Authorization count 0 for method deleteall
2021-01-11 16:47:51 -Generating unique operation named: deleteallUsingPOST_10
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |edit|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method edit
2021-01-11 16:47:51 -Generating unique operation named: editUsingGET_11
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |fileimage|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method fileimage
2021-01-11 16:47:51 -Generating unique operation named: fileimageUsingPOST_2
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_23
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingHEAD_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPOST_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPUT_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingPATCH_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingDELETE_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingOPTIONS_16
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingTRACE_16
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |insert|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Wheel
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d1ed55e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@d1ed55e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7064fbdb
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@7064fbdb, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b1a9dbc
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b1a9dbc, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77c72b15
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@77c72b15, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c08b496
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@c08b496, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b652cef
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5b652cef, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@549dbd42
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@549dbd42, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a4cbb47
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a4cbb47, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53a9009c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@53a9009c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@21594c52
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@21594c52, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18179296
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@18179296, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@677e8450
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@677e8450, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method insert
2021-01-11 16:47:51 -Generating unique operation named: insertUsingPOST_10
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |update|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Expanding parameter type: com.dong.system.entity.Wheel
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17983dc4
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@17983dc4, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33bf8e83
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@33bf8e83, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20f0d0a0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@20f0d0a0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a2cffb0
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@1a2cffb0, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c0c972c
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4c0c972c, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@308c3b8
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@308c3b8, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25db76a9
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@25db76a9, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5877dcdd
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@5877dcdd, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70ea9508
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@70ea9508, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@353a8dae
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@353a8dae, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4baacb9e
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@4baacb9e, with type: 
2021-01-11 16:47:51 -Attempting to expand field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ddd6702
2021-01-11 16:47:51 -Building parameter for field: springfox.documentation.spring.web.readers.parameter.ModelAttributeField@2ddd6702, with type: 
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method update
2021-01-11 16:47:51 -Generating unique operation named: updateUsingPOST_11
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/Object;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |download|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |download|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |download|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.Object
2021-01-11 16:47:51 -Setting spring response class to: object
2021-01-11 16:47:51 -Setting response class to:object
2021-01-11 16:47:51 -Authorization count 0 for method download
2021-01-11 16:47:51 -Generating unique operation named: downloadUsingGET_1
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |index|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method index
2021-01-11 16:47:51 -Generating unique operation named: indexUsingGET_24
2021-01-11 16:47:51 -Adding return parameter of type Ljava/lang/String;
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Finished reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Reading parameters models for handlerMethod |indexpid|
2021-01-11 16:47:51 -Did not find any parameter models for java.lang.String
2021-01-11 16:47:51 -Expanding parameter type: org.springframework.ui.Model
2021-01-11 16:47:51 -Setting spring response class to: string
2021-01-11 16:47:51 -Setting response class to:string
2021-01-11 16:47:51 -Authorization count 0 for method indexpid
2021-01-11 16:47:51 -Generating unique operation named: indexpidUsingGET_3
2021-01-11 16:47:51 -Successfully started bean 'documentationPluginsBootstrapper'
2021-01-11 16:47:51 -Starting Quartz Scheduler now
2021-01-11 16:47:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-01-11 16:47:51 -Successfully started bean 'schedulerFactoryBean'
2021-01-11 16:47:51 -Successfully started bean 'webServerGracefulShutdown'
2021-01-11 16:47:51 -batch acquisition of 0 triggers
2021-01-11 16:47:51 -


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   CacheAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) found bean 'cacheInterceptor'; @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheAutoConfiguration#cacheManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Generic matched:
      - @ConditionalOnProperty (spring.datasource.type) matched (OnPropertyCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)
      - DispatcherServlet Registration found servlet registration beans 'druidServlet' and none is named dispatcherServletRegistration (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EhCacheCacheConfiguration matched:
      - @ConditionalOnClass found required classes 'net.sf.ehcache.Cache', 'org.springframework.cache.ehcache.EhCacheCacheManager' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration EHCACHE cache type (CacheCondition)
      - ResourceCondition (EhCache) found property spring.cache.ehcache.config (EhCacheCacheConfiguration.ConfigAvailableCondition)
      - @ConditionalOnMissingBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisPlusAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PageHelperAutoConfiguration matched:
      - @ConditionalOnBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) found bean 'sqlSessionFactory' (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   QuartzAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.quartz.Scheduler', 'org.springframework.scheduling.quartz.SchedulerFactoryBean', 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' dataSource (OnBeanCondition)
      Matched:
         - AnyNestedCondition 2 matched 0 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) matched (DataSourceAutoConfiguration.PooledDataSourceCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Hikari:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) found different value in property 'spring.datasource.type' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DevToolsDataSourceAutoConfiguration:
      Did not match:
         - DevTools DataSource Condition did not find an auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)
      Matched:
         - Devtools devtools enabled. (OnEnabledDevToolsCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration#ehCacheCacheManager:
      Did not match:
         - @ConditionalOnMissingBean (types: net.sf.ehcache.CacheManager; SearchStrategy: all) found beans of type 'net.sf.ehcache.CacheManager' shirocacheManager (OnBeanCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GenericCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration unknown cache type (CacheCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'javax.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration#sqlSessionFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) found beans of type 'org.apache.ibatis.session.SqlSessionFactory' sqlSessionFactory (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) found beans of type 'org.mybatis.spring.SqlSessionTemplate' sqlSessionTemplate (OnBeanCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &articleMapper, &articleTagMapper, &articleUserFabulousMapper, &arttypeMapper, &commentMapper, &defaultAdminuserMapper, &deptMapper, &downloadMapper, &fileMapper, &linksMapper, &logMapper, &menuMapper, &noticeMapper, &noticeUserMapper, &powerMapper, &powerRoleMapper, &roleMapper, &roleUserMapper, &systemMapper, &tagMapper, &taskMapper, &tvMapper, &tvtypeMapper, &userMapper, &userTagMapper, &wheelMapper (OnBeanCondition)

   MybatisPlusAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &articleMapper, &articleTagMapper, &articleUserFabulousMapper, &arttypeMapper, &commentMapper, &defaultAdminuserMapper, &deptMapper, &downloadMapper, &fileMapper, &linksMapper, &logMapper, &menuMapper, &noticeMapper, &noticeUserMapper, &powerMapper, &powerRoleMapper, &roleMapper, &roleUserMapper, &systemMapper, &tagMapper, &taskMapper, &tvMapper, &tvtypeMapper, &userMapper, &userTagMapper, &wheelMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration unknown cache type (CacheCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration#quartzScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.quartz.SchedulerFactoryBean; SearchStrategy: all) found beans of type 'org.springframework.scheduling.quartz.SchedulerFactoryBean' &schedulerFactoryBean (OnBeanCondition)

   QuartzAutoConfiguration.JdbcStoreTypeConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.quartz.job-store-type=jdbc) did not find property 'job-store-type' (OnPropertyCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SimpleCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration unknown cache type (CacheCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringDataWebAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.web.PageableHandlerMethodArgumentResolver' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2021-01-11 16:47:51 -Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2021-01-11 16:47:51 -Started DongApplication in 18.38 seconds (JVM running for 21.52)
2021-01-11 16:47:51 -Creating a new SqlSession
2021-01-11 16:47:51 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7583f427] was not registered for synchronization because synchronization is not active
2021-01-11 16:47:51 -Fetching JDBC Connection from DataSource
2021-01-11 16:47:51 -{conn-10001} pool-connect
2021-01-11 16:47:51 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:47:51 -==>  Preparing: SELECT task_id,createtime,cron,createuserid,classmethod,updatetime,description,job_name,job_group,state FROM sys_task WHERE state = ? 
2021-01-11 16:47:51 -{conn-10001, pstmt-20001} created. SELECT  task_id,createtime,cron,createuserid,classmethod,updatetime,description,job_name,job_group,state  FROM sys_task 
 
 WHERE state = ?
2021-01-11 16:47:51 -==> Parameters: 1(String)
2021-01-11 16:47:51 -{conn-10001, pstmt-20001} Parameters : [1]
2021-01-11 16:47:51 -{conn-10001, pstmt-20001} Types : [VARCHAR]
2021-01-11 16:47:51 -{conn-10001, pstmt-20001} executed. 6.8423 millis. SELECT  task_id,createtime,cron,createuserid,classmethod,updatetime,description,job_name,job_group,state  FROM sys_task 
 
 WHERE state = ?
2021-01-11 16:47:51 -{conn-10001, pstmt-20001, rs-50001} open
2021-01-11 16:47:51 -{conn-10001, pstmt-20001, rs-50001} Header: [task_id, createtime, cron, createuserid, classmethod, updatetime, description, job_name, job_group, state]
2021-01-11 16:47:51 -{conn-10001, pstmt-20001, rs-50001} Result: [14, 2020-01-03 00:55:01.0, 0/50 * * * * ?, 1, com.dong.quartz.ArticleJob, 2020-01-04 16:19:38.0, 跟新页面排行12小时更新一次0 0 0/12 * * ? *, 页面左边资源文章排行, group, 1]
2021-01-11 16:47:51 -<==      Total: 1
2021-01-11 16:47:51 -{conn-10001, pstmt-20001, rs-50001} closed
2021-01-11 16:47:51 -{conn-10001, pstmt-20001} clearParameters. 
2021-01-11 16:47:51 -{conn-10001, pstmt-20001} enter cache
2021-01-11 16:47:51 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7583f427]
2021-01-11 16:47:51 -{conn-10001} pool-recycle
2021-01-11 16:47:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-01-11 16:47:51 -Creating new Restarter for thread Thread[main,5,main]
2021-01-11 16:47:51 -Immediately restarting application
2021-01-11 16:47:51 -Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@393758f9
2021-01-11 16:47:51 -Starting application com.dong.DongApplication with URLs [file:/F:/JavaWorkSpace/myblog/target/classes/]
2021-01-11 16:47:51 -batch acquisition of 1 triggers
2021-01-11 16:47:52 -Found key 'local.server.port' in PropertySource 'server.ports' with value of type Integer
2021-01-11 16:47:52 -Found key 'server.address' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:48:00 -batch acquisition of 0 triggers
2021-01-11 16:48:00 -Calling execute on job group.页面左边资源文章排行
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@721810ce] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:48:00 -{conn-10001, pstmt-20002} created. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:48:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20002} Parameters : [1, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20002} executed. 10.561 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} Result: [70, 57, 程序员优秀的简历模板, /upload/2021-01/1609926646023.jpeg, null, <p>程序员优秀的简历模板</p>, 1, 2021-01-06 17:52:13.0, null, 0, 1, 94, 99, https://pan.baidu.com/s/1kk2mQAEJ0IMrRrdFCq-UBw, bmt5, 1, 0, 0, 2, 0, null, null, 2]
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:00 -<==      Total: 4
2021-01-11 16:48:00 -{conn-10001, pstmt-20002, rs-50002} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20002} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20002} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@721810ce]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b0aa4] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:48:00 -{conn-10001, pstmt-20003} created. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:48:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20003} Parameters : [1, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003} executed. 1.612 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [44, 2, 自定义基于反射 Scoket jdk动态代理 RPC框架, /upload/2020-01/1580268847693.jpg, <p>使用工具IDEA， Myeclipse编写服务端接口 HelloService</p><p><img src="https://img-blog.csdnimg.cn/20190510114408827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>服务端实现类</p><p><img src="https://img-blog.csdnimg.cn/201905101149147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>编写服务端的调用类package whu;<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;<br>import java.lang.reflect.Method;<br>import java.net.ServerSocket;import java.net.Socket;<br>public class RpcFramework {//注册开始方法public static void export(Object service, Class interfaceClazz, int port) throws Exception {<br>&nbsp; &nbsp; if (service == null) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("service instance == null");&nbsp; &nbsp; }&nbsp; &nbsp; if (port &lt; 0 || port &gt; 65535) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Invalid port " + port);&nbsp; &nbsp; }&nbsp; &nbsp; System.out.println("Export service " + service.getClass().getName() + " on port " + port);&nbsp; &nbsp; //服务端socket&nbsp; &nbsp; ServerSocket server = new ServerSocket(port);&nbsp; &nbsp; //死循环达到不断监听 使用while(true)也一样&nbsp; &nbsp; for (;;) {&nbsp; &nbsp; &nbsp; &nbsp; final Socket socket = server.accept();//阻塞等待客户端连接&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new Thread(new Runnable() {//多线程<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public void run() {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取客户端传来的流对象&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String interfaceName = input.readUTF();//获取客户端传来需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String methodName = input.readUTF();//客户端传来需要调用的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject();//客户端传来需要调用的方法的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object[] arguments = (Object[]) input.readObject();//调用方法的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//返回客户端的留流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断客户端需要调用的接口在服务端是否存在&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!interfaceName.equals(interfaceClazz.getName())) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Interface wrong, export:" + interfaceClazz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " refer:" + interfaceName);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method method = service.getClass().getMethod(methodName, parameterTypes);//通过反射获取服务端的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = method.invoke(service, arguments);//执行服务端方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(result);//返回给客户端&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Throwable t) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(t);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).start();//开启线程&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }}123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960}<br>我这里是直接传入一个对象 你们也可以写一个map用来注册多个对象服务端启动类<br>package whu;<br>public class out {<br>public static void main(String[] args) throws Exception {&nbsp; &nbsp; HelloService service = new HelloServiceImpl();&nbsp; &nbsp; RpcFramework.export(service, HelloService.class, 9000);}1234}<br>客户端调用类<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;<br>import java.net.Socket;<br>public class Rpcfrowd {<br>/**&nbsp;* @param args&nbsp;*/&nbsp;@SuppressWarnings("unchecked")//屏蔽黄线&nbsp;public static &lt;T&gt; T refer(final Class&lt;T&gt; interfaceClass, final String host, final int port) throws Exception {&nbsp; &nbsp; &nbsp;&nbsp;	&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println("Get remote service " + interfaceClass.getName() + " from server " + host + ":" + port);&nbsp; &nbsp; &nbsp; &nbsp; return (T) Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class&lt;?&gt;[] { interfaceClass },&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InvocationHandler() {//jdk 动态代理&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated method stub&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Socket socket = new Socket(host, port);//建立客户端socket 传入服务端ip 和端口&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("socket通过");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//向服务端写入流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(interfaceClass.getName());//需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(method.getName());//需要调用的方法名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(method.getParameterTypes());//需要调用的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(args);//需要调用的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("发送成功");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());//接收服务端的返回信息<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = input.readObject();//接收服务端的返回信息&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("接收成功"+result);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result instanceof Throwable) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw (Throwable) result;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result;//返回&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930313233343536373839404142434445464748}注意第一个return是返回 生成的代理类对象 第二个是返回调用方法的返回值<br>客户端启动类import whu.HelloService;<br>public class clid {<br>public static void main(String[] args) throws Exception {	HelloService&nbsp; service = (HelloService)Rpcfrowd.refer(Class.forName("whu.HelloService"), "127.0.0.1", 9000);&nbsp; &nbsp; String result = service.hello("rod---");&nbsp; &nbsp; System.out.println(result);}12345}<br>运行服务端启动类————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href="https://blog.csdn.net/qq_28422443/article/details/90055742" rel="nofollow">https://blog.csdn.net/qq_28422443/article/details/90055742</a> </p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121656921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>运行客户端启动类</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121747406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>简单的rpc远程调用就实现了 这里提一下服务端需要接口和实现类 客户端只需要接口就行</p>, <p>使用工具IDEA， Myeclipse</p><p>编写服务端接口 HelloService</p>, 1, 2020-01-29 11:35:34.0, null, 0, 1, 192, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [45, 2, springboot对应springcloud的版本, /upload/2020-01/1580269227935.jpg, <p>Spring Boot	Spring Cloud<br>1.2.x	Angel版本1.3.x	Brixton版本1.4.x	Camden版本1.5.x Dalston版本、Edgware版本2.0.x Finchley版本————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88871861</p>, <p><span>Spring Boot	Spring Cloud</span></p>, 1, 2020-01-29 11:40:44.0, null, 0, 0, 187, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [47, 2, spring ioc/aop的理解, /upload/2020-01/1580269895723.jpg, <p>开发普通的spring程序需要6个jar<br>我们去官方下载了 spring的提供的jar文件</p><p><img src="https://img-blog.csdnimg.cn/20190310142615174.png" alt="è§£åå"></p><p>点击打开里面libs目录找以下jarspring-aop-3.2.4.RELEASE.jarspring-beans-3.2.4.RELEASE.jarspring-context-3.2.4.RELEASE.jarspring-core-3.2.4.RELEASE.jarspring-expression-3.2.4.RELEASE.jar还需要一个日志包 spring框架底层使用了他 不然ioc不能实例化commons-logging-1.1.1.jar<br>我们把相应的jar 导入项目并加入类路径</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/2019031014313356.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>我这里实现了aop 多了4个jar 后面再讲先不用管项目要求 通过指定id查询学生首先我们建一个student的pojo</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190310144303595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å­¦çidï¼nameï¼age"></p><p>然后建立dao层接口</p>, <p><span>开发普通的spring程序需要6个jar</span><br><span>我们去官方下载了 spring的提供的jar文件</span></p>, 1, 2020-01-29 11:52:44.0, null, 0, 1, 104, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [65, 2, Linux下安装Nginx,Jdk,Tomcat, /upload/2021-01/1609723629239.jpg, <p><span style="font-size: 20px;"><strong>一 nginx 安装&nbsp;</strong></span></p><p>安装环境:&nbsp;</p><p>yum install gcc-c++&nbsp;</p><p>yum install -y pcre pcre-devel</p><p>yum install -y zlib zlib-devel&nbsp;</p><p>yum install -y openssl openssl-devel&nbsp;</p><ol style="list-style-type: decimal;"><li><p>下载 nginx-1.11.0.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p></li><li><p>解压安装&nbsp;</p><p># cd /soft&nbsp;</p><p># tar -zxvf nginx-1.11.0.tar.gz&nbsp;</p><p>#./configure --prefix=/usr/nginx --with-http_ssl_module --with-http_stub_status_module - -with-pcre&nbsp;</p><p># make &amp;&amp; make install&nbsp;&nbsp;</p></li></ol><p>&nbsp; 3.安装完毕&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动 nginx&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;# /user/nginx/sbin/nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 关闭 nginx</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# pkill -9 nginx</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;或者&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ps -ef|grep nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # kill -9 进程号&nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4.nginx 配置&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # cd /usr/nginx/conf</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi nginx.conf&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;listen&nbsp;&nbsp; 80;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server_name&nbsp;&nbsp; www.abcd.com abcd.com;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;location / {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index&nbsp;&nbsp; index.html index.htm;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p><br></p><p><span style="font-size: 20px;"><strong>二 jdk 安装&nbsp;</strong></span></p><p>&nbsp;1.下载 jdk-7u45-linux-x64.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录&nbsp;下&nbsp;</p><p>&nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cd /soft&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tar -zxvf jdk-7u45-linux-x64.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# mv jdk1.7.0_45 /usr/</p><p>&nbsp;3. 配置环境变量</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi /etc/profile&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 编辑,在最后添加下面的内容&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JAVA_HOME=/usr/jdk1.7.0_45&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JRE_HOME=/usr/jdk1.7.0_45/jre&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib 保存退出，</p><p>&nbsp; &nbsp; &nbsp; 然后输入下面的命令使之生效&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; # source /etc/profile&nbsp;</p><p>4.&nbsp;&nbsp; 测试&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;# java -version&nbsp;出现如下表示安装成功&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;java version "1.7.0_45"&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</p><p><br></p><p><span style="font-size: 20px;">三 tomcat 安装</span></p><p>&nbsp; &nbsp;1.下载 apache-tomcat-7.0.53.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p><p>&nbsp; &nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /soft&nbsp;# tar -zxvf apache-tomcat-7.0.53.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# mv apache-tomcat-7.0.53 /usr/&nbsp;</p><p>&nbsp; 3. 修改端口&nbsp;</p><p>&nbsp; &nbsp; &lt;Connector port="80" protocol="HTTP/1.1"&nbsp;URIEncoding="UTF-8"&nbsp;redirectPort="8443" /&gt;&nbsp;</p><p>&nbsp; &nbsp; 注:根据实际需要设置 tomcat 的端口&nbsp;</p><p>&nbsp; 4. tomcat 启动&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /usr/tomcat7/bin/&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# ./startup.sh &amp;&nbsp;</p><p>&nbsp; &nbsp; # tail -f ../logs/catalina.out&nbsp;</p><p>&nbsp; &nbsp;5.tomcat 关闭&nbsp;</p><p>&nbsp; &nbsp; # ps -ef|grep tomcat&nbsp;</p><p>&nbsp; &nbsp; # kill -9 进程号</p>, <p>本文讲解如何在linux下安装Nginx、Jdk、Tomcat</p>, 1, 2021-01-04 09:27:12.0, null, 0, 0, 70, 1, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [42, 2, java8 lambda表达式 函数式编程, /upload/2020-01/1580268632163.jpg, <p>注解的表面意思和接口差不多 只定义没有实际作用定义注解的语法是（@interface 注解名{}）自定义注解还需要添加系统提供的元注解1.@Target,2.@Retention,3.@Documented,4.@Inherited<br>一 .查看源码得知Target 有一个ElementType的枚举属性，他的作用是定义注解的范围</p><p><img src="https://img-blog.csdnimg.cn/20190621153751114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>&nbsp;1.CONSTRUCTOR:用于描述构造器　　　　2.FIELD:用于描述域　　　　3.LOCAL_VARIABLE:用于描述局部变量　　　　4.METHOD:用于描述方法　　　　5.PACKAGE:用于描述包　　　　6.PARAMETER:用于描述参数　　　　7.TYPE:用于描述类、接口(包括注解类型) 或enum声明　　　　总之他就是定义你注解能加在那个地方 不然就会报错 他有个RetentionPolicy的枚举属性<br>二.Retention 他是说你注解在那个范围保留1.SOURCE:在源文件中有效（即源文件保留）　　　　2.CLASS:在class文件中有效（即class保留）　　　　3.RUNTIME:在运行时有效（即运行时保留）</p><p><img src="https://img-blog.csdnimg.cn/2019062115433919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>三 ，定义属性 注解类里面的属性是需要加括号的 ；</p><p><img src="https://img-blog.csdnimg.cn/20190621154613468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>我们写一个实体类用反射测试一下</p><p><img src="https://img-blog.csdnimg.cn/2019062115533430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190621160453201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>很简单 都是先获取类或者方法再获取注解<br>下面是动态编译和反射运行的代码 注释很清楚<br>import javax.tools.JavaCompiler;import javax.tools.ToolProvider;import java.io.*;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class main {public static void main(String[] args) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException {<br>&nbsp; String javapath="D:compiler\\javaa.java";//需要保存的文件&nbsp;String path="public class javaa{javaa(){System.out.println(\"构造方法\");}public String test(){return \"测试方法\";}}";//定义java字符串&nbsp;File file = new File(javapath);&nbsp; &nbsp; &nbsp; if(file.exists()){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //保存到文件&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.write(path);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.flush();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter.close();<br>&nbsp; &nbsp; &nbsp; }{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //不存在就创建再保存&nbsp; &nbsp; &nbsp;boolean newFile = file.createNewFile();<br>&nbsp; &nbsp; &nbsp;FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp;BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp;bufferedWriter.write(path);&nbsp; &nbsp; &nbsp;bufferedWriter.flush();&nbsp; &nbsp; &nbsp;fileWriter.close();&nbsp;}<br>JavaCompiler systemJavaCompiler = ToolProvider.getSystemJavaCompiler();//通过java自带的 tools.jar把指定文件编译成class文件&nbsp;int run = systemJavaCompiler.run(null, null, null, javapath);//前几个参数是用来保存编译过程的信息 最后一个是需要编译类的路径&nbsp;if(run==0) {//如果编译成功就通过反射执行<br>&nbsp; &nbsp; &nbsp;URL[] url = new URL[]{new URL("file:/D:compiler/")};//需要执行的类路径<br>&nbsp; &nbsp; &nbsp;Class&lt;?&gt; javaa = new URLClassLoader(url).loadClass("javaa");//获得类加载器&nbsp; &nbsp; &nbsp;Method test = javaa.getDeclaredMethod("test", null);&nbsp; &nbsp; &nbsp;String invoke = (String) test.invoke(javaa.newInstance(), null);&nbsp; &nbsp; &nbsp;System.out.println(invoke);<br>&nbsp;}12345678910111213141516171819202122232425262728293031323334}}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93198309</p>, <p><span>java 8引入了 lambda表达式 他主要用于简化代码 比如我们平时都是使用匿名类来实现一个接口 有了lambda 我们只需要考虑实现接口方法就行了 前提是此接口只能有一个抽象方法 在这里java8&nbsp;</span></p>, 1, 2020-01-29 11:32:18.0, null, 0, 0, 21, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} Result: [46, 2, spring，servlet，springmvc上下文关系, /upload/2020-01/1580269266172.jpeg, <p>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西，反之，不可！WebApplicationContext //Ioc容器对象WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletConfig().getServletContext());————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88838056</p>, <p><span>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西</span></p>, 1, 2020-01-29 11:43:03.0, null, 0, 0, 19, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -<==      Total: 9
2021-01-11 16:48:00 -{conn-10001, pstmt-20003, rs-50003} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20003} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20003} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b0aa4]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -任务执行
2021-01-11 16:48:00 -A cookie header was received [1606967325; jlbk.shiro.rememberme=50HAftGlgseZBsD0S5FvOa6ZK/8y3mKAvqS4CZjxH9URdB3dNGPq3FooTbFuXRgqJnxsst4ifuqvPPt9JI86RzricOoztUgpJX9uAIsQpp5705FljC/5+dj3zATchfhpRdSn9rtbdO24QsQN9DUkyBMt6OY0tmhoLLxS0h9sj3FoL1CpFx8rmkfFUf+cQOEfdJ+4TsfuQACTLwvH1WvjyIO+5NY/1+YfktA+HNVPUBfVyKrxxuocyNZrxvnNS+uqw9o7rDnEkZ1zbqMa90+O8ZpaVO849CLWQz2/wjDk75EfEYtEK5vSjwVyUJszQRKukc31vsHH1Hu7OwNJCPagjmodB26hnwzMOWXrALYB+hDeWuXeG6v8tpOTX8+BG1fCHvQ9ctbcAinzT8fomDaa+fJX+gn6yofikPkUUdrSazP2+UPWWhIY5QEqw7A+TUOu1Gn+i54H+BzPydVkp9IMK4XNMjYgLv3N549ZQHsStx6rFtwWGhIIVkDvqCruPuYfSJx051dVi7Y6dgJGT0ykXRz2MFtFCTaUUSNdIuorvBthLN7n3T+6deA8LNz8Ka9MuolBooiO8fgrqsOLhVzl9gjVi1NA1NdEaTeDTid7rBgg49blAPLBNyF9Bsoj+2vEvu8GqkYT47BeBOYtzmLSN44vIZeG65AcswEbc+9ZSrwJ0E+2C+OKQGVWSblwiLZvbsCFPZwjwRKWevhbvL9HKVInUdFOjStueaZwcRy/ce56qm8mq9t49y9frpUE10mqhH7Pja7Mnl53Xz3qsRCUbvbTm150VGEdPZ7aNYYQOoVTn7yTVXZRKdCQDhO9S29KXlZmX375aeo4lC3gJ+jfFRNuRaz7/p9W0d3WrTdYe7XisJS/h9MMkqmemx6RU1IFGH9ghu4NBWjBxYsAD2UAkfkzAqtzF9eBG7YQ/1Iuaq7AG3XG2p3fNUzriKPQexVJGHjkf2qy1BWAGIWUp1A7f5YHqDSnQpcKpszX8zogr4dQ5s/DfeiwhDLhnZTJmsKnp6bDA5nBsM0oSNC6l1N7oOn3BSk/GsXXx9NCRbreFQrbLaeEo+io1RFubKKVopzkvKSe7OAGKvBotzS/Esp+molgxnrYcJYEZPaDwOe6zzdDl6Yf15XUtfpTPtjbLpeAAwLmapAYgjRPKSVn4qT9XZ8tOn5cTvge1LAuz4oUi99sIhZNXrmMvd3gyWF15SXhdva0gMhnY9BO2vi6u2L8SduSAKWPzO0GIwYeFwcu8r5DOOBPdu6A5GguL7rSgbpFFX20wIogzVoB9PxI0xZ5vewF6oJQEV2EzSzt0nvJKGjyvkWxMuGOOKdfDm9m7Jqd9c+lxk/MAr9YDqwOCvGZOMMprlAJ8HCgqRxjQLP4yiLoR/T61HPuZtduCQL6V33ojGL3f+0GrHU3e+cmwl+SDcgBOM5y3uoB/hXYwFBIT4b7V0lVqIvnr8gnyhlWZf4MYHgUk9iH2BrApXnAfiyHpKrG/cKeX6CjmYmMVB07f7EaKdgbVFipHM8BRM9Lhk5aCrc1ci23tzrnnTAVz5DxHJXBmasD18dj8chOAupjTHpRWXw4+TKIeO8JnN89YgGo0bw4WgjnSkbkeb6qiu8qt0UC07yNLIdhzObnSNXqyHHp3rvDUp8juBmrdFNY+97D; JSESSIONID=0B0056EA85DA2221B2274D219F61F514] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2021-01-11 16:48:00 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-11 16:48:00 -Initializing Servlet 'dispatcherServlet'
2021-01-11 16:48:00 -Detected StandardServletMultipartResolver
2021-01-11 16:48:00 -Detected AcceptHeaderLocaleResolver
2021-01-11 16:48:00 -Detected FixedThemeResolver
2021-01-11 16:48:00 -Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6d9bcf19
2021-01-11 16:48:00 -Detected org.springframework.web.servlet.support.SessionFlashMapManager@2a77bbe6
2021-01-11 16:48:00 -enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2021-01-11 16:48:00 -Completed initialization in 0 ms
2021-01-11 16:48:00 -No sessionValidationScheduler set.  Attempting to create default instance.
2021-01-11 16:48:00 -Enabling session validation scheduler...
2021-01-11 16:48:00 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@1b3f73b1].  Returning null to indicate a session could not be found.
2021-01-11 16:48:00 -Found 'jlbk.shiro.rememberme' cookie value [50HAftGlgseZBsD0S5FvOa6ZK/8y3mKAvqS4CZjxH9URdB3dNGPq3FooTbFuXRgqJnxsst4ifuqvPPt9JI86RzricOoztUgpJX9uAIsQpp5705FljC/5+dj3zATchfhpRdSn9rtbdO24QsQN9DUkyBMt6OY0tmhoLLxS0h9sj3FoL1CpFx8rmkfFUf+cQOEfdJ+4TsfuQACTLwvH1WvjyIO+5NY/1+YfktA+HNVPUBfVyKrxxuocyNZrxvnNS+uqw9o7rDnEkZ1zbqMa90+O8ZpaVO849CLWQz2/wjDk75EfEYtEK5vSjwVyUJszQRKukc31vsHH1Hu7OwNJCPagjmodB26hnwzMOWXrALYB+hDeWuXeG6v8tpOTX8+BG1fCHvQ9ctbcAinzT8fomDaa+fJX+gn6yofikPkUUdrSazP2+UPWWhIY5QEqw7A+TUOu1Gn+i54H+BzPydVkp9IMK4XNMjYgLv3N549ZQHsStx6rFtwWGhIIVkDvqCruPuYfSJx051dVi7Y6dgJGT0ykXRz2MFtFCTaUUSNdIuorvBthLN7n3T+6deA8LNz8Ka9MuolBooiO8fgrqsOLhVzl9gjVi1NA1NdEaTeDTid7rBgg49blAPLBNyF9Bsoj+2vEvu8GqkYT47BeBOYtzmLSN44vIZeG65AcswEbc+9ZSrwJ0E+2C+OKQGVWSblwiLZvbsCFPZwjwRKWevhbvL9HKVInUdFOjStueaZwcRy/ce56qm8mq9t49y9frpUE10mqhH7Pja7Mnl53Xz3qsRCUbvbTm150VGEdPZ7aNYYQOoVTn7yTVXZRKdCQDhO9S29KXlZmX375aeo4lC3gJ+jfFRNuRaz7/p9W0d3WrTdYe7XisJS/h9MMkqmemx6RU1IFGH9ghu4NBWjBxYsAD2UAkfkzAqtzF9eBG7YQ/1Iuaq7AG3XG2p3fNUzriKPQexVJGHjkf2qy1BWAGIWUp1A7f5YHqDSnQpcKpszX8zogr4dQ5s/DfeiwhDLhnZTJmsKnp6bDA5nBsM0oSNC6l1N7oOn3BSk/GsXXx9NCRbreFQrbLaeEo+io1RFubKKVopzkvKSe7OAGKvBotzS/Esp+molgxnrYcJYEZPaDwOe6zzdDl6Yf15XUtfpTPtjbLpeAAwLmapAYgjRPKSVn4qT9XZ8tOn5cTvge1LAuz4oUi99sIhZNXrmMvd3gyWF15SXhdva0gMhnY9BO2vi6u2L8SduSAKWPzO0GIwYeFwcu8r5DOOBPdu6A5GguL7rSgbpFFX20wIogzVoB9PxI0xZ5vewF6oJQEV2EzSzt0nvJKGjyvkWxMuGOOKdfDm9m7Jqd9c+lxk/MAr9YDqwOCvGZOMMprlAJ8HCgqRxjQLP4yiLoR/T61HPuZtduCQL6V33ojGL3f+0GrHU3e+cmwl+SDcgBOM5y3uoB/hXYwFBIT4b7V0lVqIvnr8gnyhlWZf4MYHgUk9iH2BrApXnAfiyHpKrG/cKeX6CjmYmMVB07f7EaKdgbVFipHM8BRM9Lhk5aCrc1ci23tzrnnTAVz5DxHJXBmasD18dj8chOAupjTHpRWXw4+TKIeO8JnN89YgGo0bw4WgjnSkbkeb6qiu8qt0UC07yNLIdhzObnSNXqyHHp3rvDUp8juBmrdFNY+97D]
2021-01-11 16:48:00 -Found remembered PrincipalCollection.  Adding to the context to be used for subject construction by the SubjectFactory.
2021-01-11 16:48:00 -Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
2021-01-11 16:48:00 -Using existing EHCache named [jlbk.shiro.systemcache]
2021-01-11 16:48:00 -put added 0 on heap
2021-01-11 16:48:00 -put added 0 on heap
2021-01-11 16:48:00 -put updated, deleted 0 on heap
2021-01-11 16:48:00 -Added HttpServletResponse Cookie [jlbk.shiro.sessionid=3de57bf4-62ce-441b-850d-9c61d84ffb9f; Path=/; HttpOnly]
2021-01-11 16:48:00 -put added 0 on heap
2021-01-11 16:48:00 -put updated, deleted 0 on heap
2021-01-11 16:48:00 -fault removed 0 from heap
2021-01-11 16:48:00 -fault added 0 on disk
2021-01-11 16:48:00 -fault installation failed, deleted 0 from heap
2021-01-11 16:48:00 -fault installation failed deleted 0 from disk
2021-01-11 16:48:00 -put added 0 on heap
2021-01-11 16:48:00 -put updated, deleted 0 on heap
2021-01-11 16:48:00 -fault removed 0 from heap
2021-01-11 16:48:00 -fault added 0 on disk
2021-01-11 16:48:00 -fault installation failed, deleted 0 from heap
2021-01-11 16:48:00 -fault installation failed deleted 0 from disk
2021-01-11 16:48:00 -fault removed 0 from heap
2021-01-11 16:48:00 -fault added 0 on disk
2021-01-11 16:48:00 -fault installation failed, deleted 0 from heap
2021-01-11 16:48:00 -fault installation failed deleted 0 from disk
2021-01-11 16:48:00 -fault removed 0 from heap
2021-01-11 16:48:00 -fault added 0 on disk
2021-01-11 16:48:00 -GET "/", parameters={}
2021-01-11 16:48:00 -looking up handler for path: /
2021-01-11 16:48:00 -Mapped to com.dong.home.controller.indexController#index(Model)
2021-01-11 16:48:00 -请求地址 : http://localhost:8889/
2021-01-11 16:48:00 -HTTP METHOD : GET
2021-01-11 16:48:00 -CLASS_METHOD : com.dong.home.controller.AdviceControllerArttype.addmodel
2021-01-11 16:48:00 -参数 : [{}]
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f25c7d] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? ORDER BY sort ASC 
2021-01-11 16:48:00 -{conn-10001, pstmt-20004} created. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ? ORDER BY sort ASC
2021-01-11 16:48:00 -==> Parameters: 0(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20004} Parameters : [0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004} executed. 4.1463 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ? ORDER BY sort ASC
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} Result: [2, 博客, 1, /jianluboke, 2019-12-03 18:04:44.0, 主要分享博客文章, 1, 299, boke, 0]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} Result: [6, 资源分享, 2, /zyfx, 2019-12-03 18:09:34.0, 主要分享资源相关, 1, 208, ziyuanfenxiang, 0]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} Result: [8, 影院, 3, /jlyy, 2019-12-03 19:40:24.0, 电影相关, 1, 0, yingyuan, 0]
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} Result: [9, 音乐, 4, jlyinyue, 2019-12-03 19:43:04.0, 音乐相关, 1, 0, yinle, 0]
2021-01-11 16:48:00 -<==      Total: 5
2021-01-11 16:48:00 -{conn-10001, pstmt-20004, rs-50004} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20004} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20004} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f25c7d]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f03eba4] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT tag_id,title,createtime,createuserid FROM sys_tag 
2021-01-11 16:48:00 -{conn-10001, pstmt-20005} created. SELECT  tag_id,title,createtime,createuserid  FROM sys_tag
2021-01-11 16:48:00 -==> Parameters: 
2021-01-11 16:48:00 -{conn-10001, pstmt-20005} Parameters : []
2021-01-11 16:48:00 -{conn-10001, pstmt-20005} Types : []
2021-01-11 16:48:00 -{conn-10001, pstmt-20005} executed. 3.502 millis. SELECT  tag_id,title,createtime,createuserid  FROM sys_tag
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Header: [tag_id, title, createtime, createuserid]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [4, JAVA, 2019-12-14 13:46:00.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [5, PHP, 2019-12-14 13:46:03.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [6, CSS, 2019-12-14 13:46:06.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [7, JAVASCRIPT, 2019-12-14 13:46:11.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [9, XML, 2019-12-14 13:46:21.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [10, HTML5, 2019-12-14 13:46:31.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [11, C#, 2019-12-14 13:46:35.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [12, GO, 2019-12-14 13:46:42.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [13, .NET, 2019-12-14 13:46:52.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [14, JVM, 2019-12-14 13:46:56.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [15, Spring, 2019-12-14 13:47:19.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [16, 互联网, 2019-12-14 13:47:27.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [17, Mybatis, 2019-12-14 13:47:49.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [18, VUE, 2019-12-14 13:47:57.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [19, Redis, 2019-12-14 13:48:09.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [20, Lucene, 2019-12-14 13:48:22.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [21, Solr, 2019-12-14 13:48:30.0, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} Result: [33, Linux, 2021-01-04 09:18:05.0, 1]
2021-01-11 16:48:00 -<==      Total: 18
2021-01-11 16:48:00 -{conn-10001, pstmt-20005, rs-50005} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20005} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20005} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f03eba4]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -返回值 : null
2021-01-11 16:48:00 -耗时 : 30
2021-01-11 16:48:00 -请求地址 : http://localhost:8889/
2021-01-11 16:48:00 -HTTP METHOD : GET
2021-01-11 16:48:00 -CLASS_METHOD : com.dong.home.controller.indexController.index
2021-01-11 16:48:00 -参数 : [{listArttype=[Arttype(acttypeId=60, title=首页, sort=0, url=/, createtime=2019-12-31T21:23:08, description=首页, state=1, click=0, pinyin=shouye, parentid=0, ParentTitle=null), Arttype(acttypeId=2, title=博客, sort=1, url=/jianluboke, createtime=2019-12-03T18:04:44, description=主要分享博客文章, state=1, click=299, pinyin=boke, parentid=0, ParentTitle=null), Arttype(acttypeId=6, title=资源分享, sort=2, url=/zyfx, createtime=2019-12-03T18:09:34, description=主要分享资源相关, state=1, click=208, pinyin=ziyuanfenxiang, parentid=0, ParentTitle=null), Arttype(acttypeId=8, title=影院, sort=3, url=/jlyy, createtime=2019-12-03T19:40:24, description=电影相关, state=1, click=0, pinyin=yingyuan, parentid=0, ParentTitle=null), Arttype(acttypeId=9, title=音乐, sort=4, url=jlyinyue, createtime=2019-12-03T19:43:04, description=音乐相关, state=1, click=0, pinyin=yinle, parentid=0, ParentTitle=null)], tags=[Tag(tagId=4, title=JAVA, createtime=2019-12-14T13:46, createuserid=1), Tag(tagId=5, title=PHP, createtime=2019-12-14T13:46:03, createuserid=1), Tag(tagId=6, title=CSS, createtime=2019-12-14T13:46:06, createuserid=1), Tag(tagId=7, title=JAVASCRIPT, createtime=2019-12-14T13:46:11, createuserid=1), Tag(tagId=9, title=XML, createtime=2019-12-14T13:46:21, createuserid=1), Tag(tagId=10, title=HTML5, createtime=2019-12-14T13:46:31, createuserid=1), Tag(tagId=11, title=C#, createtime=2019-12-14T13:46:35, createuserid=1), Tag(tagId=12, title=GO, createtime=2019-12-14T13:46:42, createuserid=1), Tag(tagId=13, title=.NET, createtime=2019-12-14T13:46:52, createuserid=1), Tag(tagId=14, title=JVM, createtime=2019-12-14T13:46:56, createuserid=1), Tag(tagId=15, title=Spring, createtime=2019-12-14T13:47:19, createuserid=1), Tag(tagId=16, title=互联网, createtime=2019-12-14T13:47:27, createuserid=1), Tag(tagId=17, title=Mybatis, createtime=2019-12-14T13:47:49, createuserid=1), Tag(tagId=18, title=VUE, createtime=2019-12-14T13:47:57, createuserid=1), Tag(tagId=19, title=Redis, createtime=2019-12-14T13:48:09, createuserid=1), Tag(tagId=20, title=Lucene, createtime=2019-12-14T13:48:22, createuserid=1), Tag(tagId=21, title=Solr, createtime=2019-12-14T13:48:30, createuserid=1), Tag(tagId=33, title=Linux, createtime=2021-01-04T09:18:05, createuserid=1)]}]
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b810f46] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE url = ? 
2021-01-11 16:48:00 -{conn-10001, pstmt-20006} created. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE url = ?
2021-01-11 16:48:00 -==> Parameters: /(String)
2021-01-11 16:48:00 -{conn-10001, pstmt-20006} Parameters : [/]
2021-01-11 16:48:00 -{conn-10001, pstmt-20006} Types : [VARCHAR]
2021-01-11 16:48:00 -{conn-10001, pstmt-20006} executed. 0.9522 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE url = ?
2021-01-11 16:48:00 -{conn-10001, pstmt-20006, rs-50006} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20006, rs-50006} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:00 -{conn-10001, pstmt-20006, rs-50006} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:48:00 -<==      Total: 1
2021-01-11 16:48:00 -{conn-10001, pstmt-20006, rs-50006} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20006} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20006} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b810f46]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e913968] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num FROM sys_wheel WHERE state = ? AND arttype_id = ? ORDER BY num ASC 
2021-01-11 16:48:00 -{conn-10001, pstmt-20007} created. SELECT  wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num  FROM sys_wheel 
 
 WHERE state = ? AND arttype_id = ? ORDER BY num ASC
2021-01-11 16:48:00 -==> Parameters: 1(Integer), 60(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20007} Parameters : [1, 60]
2021-01-11 16:48:00 -{conn-10001, pstmt-20007} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20007} executed. 4.6458 millis. SELECT  wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num  FROM sys_wheel 
 
 WHERE state = ? AND arttype_id = ? ORDER BY num ASC
2021-01-11 16:48:00 -{conn-10001, pstmt-20007, rs-50007} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20007, rs-50007} Header: [wheel_id, arttype_id, url, title, imageurl, createuserid, createtime, state, num]
2021-01-11 16:48:00 -{conn-10001, pstmt-20007, rs-50007} Result: [8, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790976378.jpg, 1, 2019-12-31 22:59:15.0, 1, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20007, rs-50007} Result: [6, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790632828.jpg, 1, 2019-12-31 22:59:15.0, 1, 3]
2021-01-11 16:48:00 -{conn-10001, pstmt-20007, rs-50007} Result: [21, 60, https://baike.baidu.com/item/%E8%BF%AA%E4%B8%BD%E7%83%AD%E5%B7%B4/1180418?fr=aladdin, 迪丽热巴, /upload/2021-01/1609650811273.jpg, 1, 2021-01-03 13:13:42.0, 1, 4]
2021-01-11 16:48:00 -<==      Total: 3
2021-01-11 16:48:00 -{conn-10001, pstmt-20007, rs-50007} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20007} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20007} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e913968]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46e15d8b] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2 
2021-01-11 16:48:00 -{conn-10001, pstmt-20008} created. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2
2021-01-11 16:48:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20008} Parameters : [1, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20008} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20008} executed. 1.6512 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2
2021-01-11 16:48:00 -{conn-10001, pstmt-20008, rs-50008} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20008, rs-50008} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20008, rs-50008} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:00 -{conn-10001, pstmt-20008, rs-50008} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:00 -<==      Total: 2
2021-01-11 16:48:00 -{conn-10001, pstmt-20008, rs-50008} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20008} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20008} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46e15d8b]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be987eb] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? 
2021-01-11 16:48:00 -{conn-10001, pstmt-20009} created. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ?
2021-01-11 16:48:00 -==> Parameters: 60(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20009} Parameters : [60, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20009} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20009} executed. 1.0976 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ?
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} Result: [62, 心路历程, 2, //, 2020-01-01 01:27:37.0, 首页, 1, 0, xinlulicheng, 60]
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} Result: [64, 优质资源, 4, //, 2020-01-01 01:30:55.0, 首页, 1, 0, youzhiziyuan, 60]
2021-01-11 16:48:00 -<==      Total: 4
2021-01-11 16:48:00 -{conn-10001, pstmt-20009, rs-50009} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20009} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20009} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be987eb]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c53368e] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} created. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:00 -==> Parameters: 61(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Parameters : [61, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} executed. 1.6388 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50010} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50010} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50010} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50010} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -<==      Total: 2
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50010} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c53368e]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e057280] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:00 -==> Parameters: 62(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Parameters : [62, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} executed. 1.2329 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50011} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50011} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50011} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:00 -<==      Total: 1
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50011} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e057280]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef8c291] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:00 -==> Parameters: 63(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Parameters : [63, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} executed. 1.2816 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50012} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50012} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50012} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:00 -<==      Total: 1
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50012} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef8c291]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f17fb12] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:00 -==> Parameters: 64(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Parameters : [64, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} executed. 1.0117 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50013} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50013} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -<==      Total: 0
2021-01-11 16:48:00 -{conn-10001, pstmt-20010, rs-50013} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f17fb12]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688a5297] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC 
2021-01-11 16:48:00 -{conn-10001, pstmt-20011} created. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC
2021-01-11 16:48:00 -==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2021-01-11 16:48:00 -{conn-10001, pstmt-20011} Parameters : [1, 1, 1]
2021-01-11 16:48:00 -{conn-10001, pstmt-20011} Types : [INTEGER, INTEGER, INTEGER]
2021-01-11 16:48:00 -{conn-10001, pstmt-20011} executed. 1.5284 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC
2021-01-11 16:48:00 -{conn-10001, pstmt-20011, rs-50014} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20011, rs-50014} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20011, rs-50014} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:00 -<==      Total: 1
2021-01-11 16:48:00 -{conn-10001, pstmt-20011, rs-50014} closed
2021-01-11 16:48:00 -{conn-10001, pstmt-20011} clearParameters. 
2021-01-11 16:48:00 -{conn-10001, pstmt-20011} enter cache
2021-01-11 16:48:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688a5297]
2021-01-11 16:48:00 -{conn-10001} pool-recycle
2021-01-11 16:48:00 -Creating a new SqlSession
2021-01-11 16:48:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e9625e] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:00 -{conn-10001} pool-connect
2021-01-11 16:48:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:00 -==>  Preparing: select*from sys_article WHERE state=1 and topstate=1 order by createtime desc 
2021-01-11 16:48:00 -{conn-10001, pstmt-20012} created. select*from sys_article
         WHERE  state=1
            
            
                and topstate=1 
        order by createtime desc
2021-01-11 16:48:00 -==> Parameters: 
2021-01-11 16:48:00 -{conn-10001, pstmt-20012} Parameters : []
2021-01-11 16:48:00 -{conn-10001, pstmt-20012} Types : []
2021-01-11 16:48:00 -{conn-10001, pstmt-20012} executed. 1.1112 millis. select*from sys_article
         WHERE  state=1
            
            
                and topstate=1 
        order by createtime desc
2021-01-11 16:48:00 -{conn-10001, pstmt-20012, rs-50015} open
2021-01-11 16:48:00 -{conn-10001, pstmt-20012, rs-50015} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:00 -{conn-10001, pstmt-20012, rs-50015} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:01 -====>  Preparing: select * from sys_user where user_id=? 
2021-01-11 16:48:01 -{conn-10001, pstmt-20013} created. select * from sys_user where user_id=?
2021-01-11 16:48:01 -====> Parameters: 1(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20013} Parameters : [1]
2021-01-11 16:48:01 -{conn-10001, pstmt-20013} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20013} executed. 8.0538 millis. select * from sys_user where user_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20013, rs-50016} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20013, rs-50016} Header: [user_id, username, password, name, sex, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, is_vip, email, phone, area]
2021-01-11 16:48:01 -{conn-10001, pstmt-20013, rs-50016} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:48:01 -======>  Preparing: select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=? 
2021-01-11 16:48:01 -{conn-10001, pstmt-20014} created. select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=?
2021-01-11 16:48:01 -======> Parameters: 1(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20014} Parameters : [1]
2021-01-11 16:48:01 -{conn-10001, pstmt-20014} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20014} executed. 7.015 millis. select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20014, rs-50017} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20014, rs-50017} Header: [role_id, name, createtime, createuserid, updatetime, sign, context, state]
2021-01-11 16:48:01 -{conn-10001, pstmt-20014, rs-50017} Result: [1, 超级管理员, 2019-12-16 00:24:50.0, 1, 2019-12-30 00:48:29.0, systemadmin, 拥有最高权限, 1]
2021-01-11 16:48:01 -<======      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20014, rs-50017} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20014} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20014} enter cache
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20013, rs-50016} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20013} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20013} enter cache
2021-01-11 16:48:01 -====>  Preparing: select count(*) from sys_comment where articleid=66 
2021-01-11 16:48:01 -{conn-10001, pstmt-20015} created. select count(*) from sys_comment where articleid=66
2021-01-11 16:48:01 -====> Parameters: 
2021-01-11 16:48:01 -{conn-10001, pstmt-20015} Parameters : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20015} Types : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20015} executed. 3.8357 millis. select count(*) from sys_comment where articleid=66
2021-01-11 16:48:01 -{conn-10001, pstmt-20015, rs-50018} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20015, rs-50018} Header: [count(*)]
2021-01-11 16:48:01 -{conn-10001, pstmt-20015, rs-50018} Result: [0]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20015, rs-50018} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20015} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20015} enter cache
2021-01-11 16:48:01 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} created. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:01 -====> Parameters: 63(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Parameters : [63]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} executed. 0.7343 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50019} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50019} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50019} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50019} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} enter cache
2021-01-11 16:48:01 -{conn-10001, pstmt-20012, rs-50015} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:01 -====>  Preparing: select count(*) from sys_comment where articleid=40 
2021-01-11 16:48:01 -{conn-10001, pstmt-20017} created. select count(*) from sys_comment where articleid=40
2021-01-11 16:48:01 -====> Parameters: 
2021-01-11 16:48:01 -{conn-10001, pstmt-20017} Parameters : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20017} Types : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20017} executed. 1.0301 millis. select count(*) from sys_comment where articleid=40
2021-01-11 16:48:01 -{conn-10001, pstmt-20017, rs-50020} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20017, rs-50020} Header: [count(*)]
2021-01-11 16:48:01 -{conn-10001, pstmt-20017, rs-50020} Result: [1]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20017, rs-50020} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20017} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20017} enter cache
2021-01-11 16:48:01 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:01 -====> Parameters: 59(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Parameters : [59]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} executed. 0.6219 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50021} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50021} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50021} Result: [59, 秘密资料, 3, null, 2019-12-31 01:23:54.0, 哈哈哈哈, 1, 43, mimiziliao, 6]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50021} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20012, rs-50015} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:01 -====>  Preparing: select count(*) from sys_comment where articleid=39 
2021-01-11 16:48:01 -{conn-10001, pstmt-20018} created. select count(*) from sys_comment where articleid=39
2021-01-11 16:48:01 -====> Parameters: 
2021-01-11 16:48:01 -{conn-10001, pstmt-20018} Parameters : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20018} Types : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20018} executed. 0.724 millis. select count(*) from sys_comment where articleid=39
2021-01-11 16:48:01 -{conn-10001, pstmt-20018, rs-50022} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20018, rs-50022} Header: [count(*)]
2021-01-11 16:48:01 -{conn-10001, pstmt-20018, rs-50022} Result: [2]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20018, rs-50022} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20018} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20018} enter cache
2021-01-11 16:48:01 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:01 -====> Parameters: 61(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Parameters : [61]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} executed. 0.7311 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50023} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50023} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50023} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50023} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20012, rs-50015} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:01 -====>  Preparing: select count(*) from sys_comment where articleid=38 
2021-01-11 16:48:01 -{conn-10001, pstmt-20019} created. select count(*) from sys_comment where articleid=38
2021-01-11 16:48:01 -====> Parameters: 
2021-01-11 16:48:01 -{conn-10001, pstmt-20019} Parameters : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20019} Types : []
2021-01-11 16:48:01 -{conn-10001, pstmt-20019} executed. 0.6009 millis. select count(*) from sys_comment where articleid=38
2021-01-11 16:48:01 -{conn-10001, pstmt-20019, rs-50024} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20019, rs-50024} Header: [count(*)]
2021-01-11 16:48:01 -{conn-10001, pstmt-20019, rs-50024} Result: [1]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20019, rs-50024} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20019} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20019} enter cache
2021-01-11 16:48:01 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:01 -====> Parameters: 54(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Parameters : [54]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} executed. 0.6159 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50025} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50025} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50025} Result: [54, java, 1, , 2019-12-31 01:19:31.0, java相关文章, 1, 28, java, 2]
2021-01-11 16:48:01 -<====      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20016, rs-50025} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:01 -<==      Total: 4
2021-01-11 16:48:01 -{conn-10001, pstmt-20012, rs-50015} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20012} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20012} enter cache
2021-01-11 16:48:01 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28e9625e]
2021-01-11 16:48:01 -{conn-10001} pool-recycle
2021-01-11 16:48:01 -Creating a new SqlSession
2021-01-11 16:48:01 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65b643] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:01 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:01 -{conn-10001} pool-connect
2021-01-11 16:48:01 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:01 -==>  Preparing: SELECT link_id,arttypeid,url,num,clickcount,createtime,email,title,descr FROM sys_links WHERE arttypeid = ? ORDER BY num ASC 
2021-01-11 16:48:01 -{conn-10001, pstmt-20020} created. SELECT  link_id,arttypeid,url,num,clickcount,createtime,email,title,descr  FROM sys_links 
 
 WHERE arttypeid = ? ORDER BY num ASC
2021-01-11 16:48:01 -==> Parameters: 60(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20020} Parameters : [60]
2021-01-11 16:48:01 -{conn-10001, pstmt-20020} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20020} executed. 3.4477 millis. SELECT  link_id,arttypeid,url,num,clickcount,createtime,email,title,descr  FROM sys_links 
 
 WHERE arttypeid = ? ORDER BY num ASC
2021-01-11 16:48:01 -{conn-10001, pstmt-20020, rs-50026} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20020, rs-50026} Header: [link_id, arttypeid, url, num, clickcount, createtime, email, title, descr]
2021-01-11 16:48:01 -{conn-10001, pstmt-20020, rs-50026} Result: [1, 60, http://www.baidu.com, 1, 1, 2020-01-16 00:35:58.0, 11@qq.cc, 百度, 百友情度相关]
2021-01-11 16:48:01 -{conn-10001, pstmt-20020, rs-50026} Result: [15, 60, http://www.sogo.com, 2, null, 2020-01-03 00:35:44.0, ww@qq.com, 搜狗, 测试]
2021-01-11 16:48:01 -<==      Total: 2
2021-01-11 16:48:01 -{conn-10001, pstmt-20020, rs-50026} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20020} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20000} exit cache
2021-01-11 16:48:01 -{conn-10001, pstmt-20000} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20020} enter cache
2021-01-11 16:48:01 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65b643]
2021-01-11 16:48:01 -{conn-10001} pool-recycle
2021-01-11 16:48:01 -Creating a new SqlSession
2021-01-11 16:48:01 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75d0f902] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:01 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:01 -{conn-10001} pool-connect
2021-01-11 16:48:01 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:01 -==>  Preparing: SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=? 
2021-01-11 16:48:01 -{conn-10001, pstmt-20021} created. SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=?
2021-01-11 16:48:01 -==> Parameters: 1(Integer)
2021-01-11 16:48:01 -{conn-10001, pstmt-20021} Parameters : [1]
2021-01-11 16:48:01 -{conn-10001, pstmt-20021} Types : [INTEGER]
2021-01-11 16:48:01 -{conn-10001, pstmt-20021} executed. 0.8493 millis. SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=?
2021-01-11 16:48:01 -{conn-10001, pstmt-20021, rs-50027} open
2021-01-11 16:48:01 -{conn-10001, pstmt-20021, rs-50027} Header: [user_id, username, password, name, sex, is_vip, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, email, phone, area]
2021-01-11 16:48:01 -{conn-10001, pstmt-20021, rs-50027} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:48:01 -<==      Total: 1
2021-01-11 16:48:01 -{conn-10001, pstmt-20021, rs-50027} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20021} clearParameters. 
2021-01-11 16:48:01 -{conn-10001, pstmt-20001} exit cache
2021-01-11 16:48:01 -{conn-10001, pstmt-20001} closed
2021-01-11 16:48:01 -{conn-10001, pstmt-20021} enter cache
2021-01-11 16:48:01 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75d0f902]
2021-01-11 16:48:01 -{conn-10001} pool-recycle
2021-01-11 16:48:01 -返回值 : home/index
2021-01-11 16:48:01 -耗时 : 220
2021-01-11 16:48:01 -Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
2021-01-11 16:48:01 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-01-11 16:48:01 -Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 3]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@146f0218
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@15224e1f
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@166af9b0
[THYMELEAF] * Dialect [2 of 3]: Shiro (at.pollux.thymeleaf.shiro.dialect.ShiroDialect)
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {shiro:authenticated,data-shiro-authenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.AuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:guest,data-shiro-guest}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.GuestAttrProcessor
[THYMELEAF]             * [* {shiro:hasallpermissions,data-shiro-hasallpermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasallroles,data-shiro-hasallroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAllRolesAttrProcessor
[THYMELEAF]             * [* {shiro:hasanypermissions,data-shiro-hasanypermissions}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyPermissionsAttrProcessor
[THYMELEAF]             * [* {shiro:hasanyroles,data-shiro-hasanyroles}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasAnyRolesAttrProcessor
[THYMELEAF]             * [* {shiro:haspermission,data-shiro-haspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:hasrole,data-shiro-hasrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.HasRoleAttrProcessor
[THYMELEAF]             * [* {shiro:lackspermission,data-shiro-lackspermission}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksPermissionAttrProcessor
[THYMELEAF]             * [* {shiro:lacksrole,data-shiro-lacksrole}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.LacksRoleAttrProcessor
[THYMELEAF]             * [* {shiro:notauthenticated,data-shiro-notauthenticated}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.NotAuthenticatedAttrProcessor
[THYMELEAF]             * [* {shiro:principal,data-shiro-principal}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.PrincipalAttrProcessor
[THYMELEAF]             * [* {shiro:user,data-shiro-user}] [300]: at.pollux.thymeleaf.shiro.processor.attribute.UserAttrProcessor
[THYMELEAF]             * [{shiro:authenticated,shiro-authenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.AuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:guest,shiro-guest} *] [300]: at.pollux.thymeleaf.shiro.processor.element.GuestElementProcessor
[THYMELEAF]             * [{shiro:hasallpermissions,shiro-hasallpermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasallroles,shiro-hasallroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAllRolesElementProcessor
[THYMELEAF]             * [{shiro:hasanypermissions,shiro-hasanypermissions} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyPermissionsElementProcessor
[THYMELEAF]             * [{shiro:hasanyroles,shiro-hasanyroles} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasAnyRolesElementProcessor
[THYMELEAF]             * [{shiro:haspermission,shiro-haspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasPermissionElementProcessor
[THYMELEAF]             * [{shiro:hasrole,shiro-hasrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.HasRoleElementProcessor
[THYMELEAF]             * [{shiro:lackspermission,shiro-lackspermission} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksPermissionElementProcessor
[THYMELEAF]             * [{shiro:lacksrole,shiro-lacksrole} *] [300]: at.pollux.thymeleaf.shiro.processor.element.LacksRoleElementProcessor
[THYMELEAF]             * [{shiro:notauthenticated,shiro-notauthenticated} *] [300]: at.pollux.thymeleaf.shiro.processor.element.NotAuthenticatedElementProcessor
[THYMELEAF]             * [{shiro:principal,shiro-principal} *] [300]: at.pollux.thymeleaf.shiro.processor.element.PrincipalElementProcessor
[THYMELEAF]             * [{shiro:user,shiro-user} *] [300]: at.pollux.thymeleaf.shiro.processor.element.UserElementProcessor
[THYMELEAF] * Dialect [3 of 3]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-01-11 16:48:01 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-01-11 16:48:01 -[THYMELEAF][http-nio-0.0.0.0-8889-exec-1] Exception processing template "home/index": An error happened during template parsing (template: "class path resource [templates/home/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 73 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 75 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 97 common frames omitted
2021-01-11 16:48:01 -Error rendering view [org.thymeleaf.spring5.view.ThymeleafView@54f9be50]
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 73 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 75 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 97 common frames omitted
2021-01-11 16:48:01 -Failed to complete request: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
2021-01-11 16:48:01 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-01-11 16:48:01 -"ERROR" dispatch for GET "/error", parameters={}
2021-01-11 16:48:01 -looking up handler for path: /error
2021-01-11 16:48:01 -Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2021-01-11 16:48:01 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:48:01 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:48:01 -Selected 'text/html' given [text/html, text/html;q=0.8]
2021-01-11 16:48:01 -Exiting from "ERROR" dispatch, status 500
2021-01-11 16:48:09 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@4dd23563].  Returning null to indicate a session could not be found.
2021-01-11 16:48:09 -Found 'jlbk.shiro.rememberme' cookie value [3x7QWIfphmD0u8W0ggoxC4BlR5i4eCKB7LyG9g0//8Z8vQ18Qjw/6eqm5NrCbhY6tOKQcWpxtWcnqfmIS+TFcwOujfXNn9bJRmf9hZlVBlcMCK2NVYCW3hn2qtca34dZo22PamujcB34i38v9LjOHOufhkMQ/0AUkydWNzsM4CPWeOv3vvc3aG3InM3H8YZWsE0bi4IO29a2Qf01N7FmdwLV+gRtIV0golK9EMbLC0zDzEZVZhgJk4HUmGypw00RAe9UxWe154EUwzWyyZUb1dLrsvAlmZDK2EU/A7uPGnFdL+GkE8flUPljB+WFwEBK8DJ09fVxviT1KwneuovTFUEjI36nUHr5b7AgXceUyDuPAqNrhJAwvYgzJFW9BFg2DGzaSkVYja9+invr8z2h3obXhCSs0zFoizIGhWb16acaake3A7ilqXStn8BYc423Zljfy2XBZS/Erv3HAcRVTwbUDKMErifbPqraGmbZ0pCINa4PQJLQ+5kiCopKNq7DZ8ToTafAdmkKYJSwzJjR2SIZnuLj54DFgq2jVnOlg/eQtxWZJYDzemDvR9tIHTP2UJZdt9djWG97URYqTZ3Va64zbu+kGLjmU/3b+hkt35bYN4P/jAUMejTKht55cL70kYhi9aaVCtwDDByvTgfY9U7yGmC8WXKhB/qwmVR6nIMsjacgiVH6dntEDjrLQwyrHYiYU0AHAAcjXVbm0RqEDWlys22HuvcfH5EFjTHJL60Iz3RfHv5M3FNXY3bsdtT0K7F2OQRVuF4ffYt2kMDTNFzGHqSifBq8DiVumWVPUbUs+OVC8s/8sHBEe6E5MEOCBObOtl9Qu0aiYiHx1fZa3iYATijmtR5uQmISopiUk2csgGmrerQS86Mqrzsa2qYYgsRqkssGEfVziIKR2nISFWIiPj4KKvbudF4jGlSKeZNOvazbQgXrXcX0bn0qYR2ZqDTPkZVQfdEZUa8Qr4Rt22KKQr5gOXSShKT0TQwp8ztOVt2w5Bo1HUJQhsQNddhr4H7BpmMzZl7TnfDXNY0t9tDjmLQTmNd+OmYHPt3cHPHXyGquAshBW2UzzPTFSKqgWpC+2uLm2y7jchtr+eUXAyoQ9KpOAEFlmJMK+jd7ij154L3KY5fRDLhYDzR6kksFZpkQbvQ+NjXlWg9ZXbfhZHfszzToaJU+IWkFfDX5OCzBfoTKmWqrqvYsFcMvOt2uLS5UGCwyHXVqjJgCFqJDv4Ih/O5BZjr+LdEBIge8Rgb1aqhYZYTcDF/UpZhOZTW/CvGMp/W0ZaheVgXYNOd410ciYzG+zQkgqAdhZVnyiwBgXkZ5VoM5n/S1NhTYm3qOCa1NYkE3krNR2foFmdr3Cq9vAVcmB9U0L0Iw++XkEfsOixezwZq5OujzwydxIUl3ALnUMXpVB4EPvsQ1JF9I1DUxSLKUJri3sPYpwH8xrYMhgRlwghOhYCGUDEjPdE0Uj+eqmLwhLRCJdyKoTWTSwla3zAxCEpYVnKCP8+dKX774Tvn6t6T8cpBaDNYLKYMrVIL9hSYBaTeNIVYApeJEHt1AfkvmmbgEPrtqYBx8XiBmJOLdpLJE8UHanJDKcBWeJBOrBk6D3/1Pr5RhK5a9LvSrOgTKnaNkLOAbcubj1DusbHOsiKHCXOp4EvQJxnzAYasbTqwDUVt8HCYX6xqvAw==]
2021-01-11 16:48:09 -Found remembered PrincipalCollection.  Adding to the context to be used for subject construction by the SubjectFactory.
2021-01-11 16:48:09 -Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
2021-01-11 16:48:09 -put added 0 on heap
2021-01-11 16:48:09 -put added 0 on heap
2021-01-11 16:48:09 -put updated, deleted 0 on heap
2021-01-11 16:48:09 -fault removed 0 from heap
2021-01-11 16:48:09 -fault added 0 on disk
2021-01-11 16:48:09 -fault installation failed, deleted 0 from heap
2021-01-11 16:48:09 -fault installation failed deleted 0 from disk
2021-01-11 16:48:09 -Added HttpServletResponse Cookie [jlbk.shiro.sessionid=eed497be-8f41-4f65-b330-ac70b6f7365f; Path=/; HttpOnly]
2021-01-11 16:48:09 -put added 0 on heap
2021-01-11 16:48:09 -put updated, deleted 0 on heap
2021-01-11 16:48:09 -fault removed 0 from heap
2021-01-11 16:48:09 -fault added 0 on disk
2021-01-11 16:48:09 -fault installation failed, deleted 0 from heap
2021-01-11 16:48:09 -fault installation failed deleted 0 from disk
2021-01-11 16:48:09 -put added 0 on heap
2021-01-11 16:48:09 -put updated, deleted 0 on heap
2021-01-11 16:48:09 -GET "/", parameters={}
2021-01-11 16:48:09 -fault removed 0 from heap
2021-01-11 16:48:09 -fault added 0 on disk
2021-01-11 16:48:09 -looking up handler for path: /
2021-01-11 16:48:09 -fault installation failed, deleted 0 from heap
2021-01-11 16:48:09 -fault installation failed deleted 0 from disk
2021-01-11 16:48:09 -Mapped to com.dong.home.controller.indexController#index(Model)
2021-01-11 16:48:09 -请求地址 : http://localhost:8889/
2021-01-11 16:48:09 -HTTP METHOD : GET
2021-01-11 16:48:09 -CLASS_METHOD : com.dong.home.controller.AdviceControllerArttype.addmodel
2021-01-11 16:48:09 -fault removed 0 from heap
2021-01-11 16:48:09 -fault added 0 on disk
2021-01-11 16:48:09 -参数 : [{}]
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4315d2a9] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? ORDER BY sort ASC 
2021-01-11 16:48:09 -==> Parameters: 0(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20004} Parameters : [0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004} executed. 1.4012 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ? ORDER BY sort ASC
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} Result: [2, 博客, 1, /jianluboke, 2019-12-03 18:04:44.0, 主要分享博客文章, 1, 299, boke, 0]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} Result: [6, 资源分享, 2, /zyfx, 2019-12-03 18:09:34.0, 主要分享资源相关, 1, 208, ziyuanfenxiang, 0]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} Result: [8, 影院, 3, /jlyy, 2019-12-03 19:40:24.0, 电影相关, 1, 0, yingyuan, 0]
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} Result: [9, 音乐, 4, jlyinyue, 2019-12-03 19:43:04.0, 音乐相关, 1, 0, yinle, 0]
2021-01-11 16:48:09 -<==      Total: 5
2021-01-11 16:48:09 -{conn-10001, pstmt-20004, rs-50028} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20004} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4315d2a9]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@540f89ad] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT tag_id,title,createtime,createuserid FROM sys_tag 
2021-01-11 16:48:09 -==> Parameters: 
2021-01-11 16:48:09 -{conn-10001, pstmt-20005} Parameters : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20005} Types : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20005} executed. 1.1895 millis. SELECT  tag_id,title,createtime,createuserid  FROM sys_tag
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Header: [tag_id, title, createtime, createuserid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [4, JAVA, 2019-12-14 13:46:00.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [5, PHP, 2019-12-14 13:46:03.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [6, CSS, 2019-12-14 13:46:06.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [7, JAVASCRIPT, 2019-12-14 13:46:11.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [9, XML, 2019-12-14 13:46:21.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [10, HTML5, 2019-12-14 13:46:31.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [11, C#, 2019-12-14 13:46:35.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [12, GO, 2019-12-14 13:46:42.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [13, .NET, 2019-12-14 13:46:52.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [14, JVM, 2019-12-14 13:46:56.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [15, Spring, 2019-12-14 13:47:19.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [16, 互联网, 2019-12-14 13:47:27.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [17, Mybatis, 2019-12-14 13:47:49.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [18, VUE, 2019-12-14 13:47:57.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [19, Redis, 2019-12-14 13:48:09.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [20, Lucene, 2019-12-14 13:48:22.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [21, Solr, 2019-12-14 13:48:30.0, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} Result: [33, Linux, 2021-01-04 09:18:05.0, 1]
2021-01-11 16:48:09 -<==      Total: 18
2021-01-11 16:48:09 -{conn-10001, pstmt-20005, rs-50029} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20005} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@540f89ad]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -返回值 : null
2021-01-11 16:48:09 -耗时 : 11
2021-01-11 16:48:09 -请求地址 : http://localhost:8889/
2021-01-11 16:48:09 -HTTP METHOD : GET
2021-01-11 16:48:09 -CLASS_METHOD : com.dong.home.controller.indexController.index
2021-01-11 16:48:09 -参数 : [{listArttype=[Arttype(acttypeId=60, title=首页, sort=0, url=/, createtime=2019-12-31T21:23:08, description=首页, state=1, click=0, pinyin=shouye, parentid=0, ParentTitle=null), Arttype(acttypeId=2, title=博客, sort=1, url=/jianluboke, createtime=2019-12-03T18:04:44, description=主要分享博客文章, state=1, click=299, pinyin=boke, parentid=0, ParentTitle=null), Arttype(acttypeId=6, title=资源分享, sort=2, url=/zyfx, createtime=2019-12-03T18:09:34, description=主要分享资源相关, state=1, click=208, pinyin=ziyuanfenxiang, parentid=0, ParentTitle=null), Arttype(acttypeId=8, title=影院, sort=3, url=/jlyy, createtime=2019-12-03T19:40:24, description=电影相关, state=1, click=0, pinyin=yingyuan, parentid=0, ParentTitle=null), Arttype(acttypeId=9, title=音乐, sort=4, url=jlyinyue, createtime=2019-12-03T19:43:04, description=音乐相关, state=1, click=0, pinyin=yinle, parentid=0, ParentTitle=null)], tags=[Tag(tagId=4, title=JAVA, createtime=2019-12-14T13:46, createuserid=1), Tag(tagId=5, title=PHP, createtime=2019-12-14T13:46:03, createuserid=1), Tag(tagId=6, title=CSS, createtime=2019-12-14T13:46:06, createuserid=1), Tag(tagId=7, title=JAVASCRIPT, createtime=2019-12-14T13:46:11, createuserid=1), Tag(tagId=9, title=XML, createtime=2019-12-14T13:46:21, createuserid=1), Tag(tagId=10, title=HTML5, createtime=2019-12-14T13:46:31, createuserid=1), Tag(tagId=11, title=C#, createtime=2019-12-14T13:46:35, createuserid=1), Tag(tagId=12, title=GO, createtime=2019-12-14T13:46:42, createuserid=1), Tag(tagId=13, title=.NET, createtime=2019-12-14T13:46:52, createuserid=1), Tag(tagId=14, title=JVM, createtime=2019-12-14T13:46:56, createuserid=1), Tag(tagId=15, title=Spring, createtime=2019-12-14T13:47:19, createuserid=1), Tag(tagId=16, title=互联网, createtime=2019-12-14T13:47:27, createuserid=1), Tag(tagId=17, title=Mybatis, createtime=2019-12-14T13:47:49, createuserid=1), Tag(tagId=18, title=VUE, createtime=2019-12-14T13:47:57, createuserid=1), Tag(tagId=19, title=Redis, createtime=2019-12-14T13:48:09, createuserid=1), Tag(tagId=20, title=Lucene, createtime=2019-12-14T13:48:22, createuserid=1), Tag(tagId=21, title=Solr, createtime=2019-12-14T13:48:30, createuserid=1), Tag(tagId=33, title=Linux, createtime=2021-01-04T09:18:05, createuserid=1)]}]
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b2fa4b] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE url = ? 
2021-01-11 16:48:09 -==> Parameters: /(String)
2021-01-11 16:48:09 -{conn-10001, pstmt-20006} Parameters : [/]
2021-01-11 16:48:09 -{conn-10001, pstmt-20006} Types : [VARCHAR]
2021-01-11 16:48:09 -{conn-10001, pstmt-20006} executed. 1.3773 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE url = ?
2021-01-11 16:48:09 -{conn-10001, pstmt-20006, rs-50030} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20006, rs-50030} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20006, rs-50030} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:48:09 -<==      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20006, rs-50030} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20006} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b2fa4b]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a033860] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num FROM sys_wheel WHERE state = ? AND arttype_id = ? ORDER BY num ASC 
2021-01-11 16:48:09 -==> Parameters: 1(Integer), 60(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20007} Parameters : [1, 60]
2021-01-11 16:48:09 -{conn-10001, pstmt-20007} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20007} executed. 1.1532 millis. SELECT  wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num  FROM sys_wheel 
 
 WHERE state = ? AND arttype_id = ? ORDER BY num ASC
2021-01-11 16:48:09 -{conn-10001, pstmt-20007, rs-50031} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20007, rs-50031} Header: [wheel_id, arttype_id, url, title, imageurl, createuserid, createtime, state, num]
2021-01-11 16:48:09 -{conn-10001, pstmt-20007, rs-50031} Result: [8, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790976378.jpg, 1, 2019-12-31 22:59:15.0, 1, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20007, rs-50031} Result: [6, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790632828.jpg, 1, 2019-12-31 22:59:15.0, 1, 3]
2021-01-11 16:48:09 -{conn-10001, pstmt-20007, rs-50031} Result: [21, 60, https://baike.baidu.com/item/%E8%BF%AA%E4%B8%BD%E7%83%AD%E5%B7%B4/1180418?fr=aladdin, 迪丽热巴, /upload/2021-01/1609650811273.jpg, 1, 2021-01-03 13:13:42.0, 1, 4]
2021-01-11 16:48:09 -<==      Total: 3
2021-01-11 16:48:09 -{conn-10001, pstmt-20007, rs-50031} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20007} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a033860]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c0b611f] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2 
2021-01-11 16:48:09 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20008} Parameters : [1, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20008} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20008} executed. 1.1272 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2
2021-01-11 16:48:09 -{conn-10001, pstmt-20008, rs-50032} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20008, rs-50032} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -{conn-10001, pstmt-20008, rs-50032} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:09 -{conn-10001, pstmt-20008, rs-50032} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:09 -<==      Total: 2
2021-01-11 16:48:09 -{conn-10001, pstmt-20008, rs-50032} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20008} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c0b611f]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534b9be6] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? 
2021-01-11 16:48:09 -==> Parameters: 60(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20009} Parameters : [60, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20009} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20009} executed. 0.9568 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ?
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} Result: [62, 心路历程, 2, //, 2020-01-01 01:27:37.0, 首页, 1, 0, xinlulicheng, 60]
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} Result: [64, 优质资源, 4, //, 2020-01-01 01:30:55.0, 首页, 1, 0, youzhiziyuan, 60]
2021-01-11 16:48:09 -<==      Total: 4
2021-01-11 16:48:09 -{conn-10001, pstmt-20009, rs-50033} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20009} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534b9be6]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35513d37] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:09 -==> Parameters: 61(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Parameters : [61, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} executed. 2.193 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50034} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50034} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50034} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50034} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:09 -<==      Total: 2
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50034} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35513d37]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19acf418] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:09 -==> Parameters: 62(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Parameters : [62, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} executed. 1.0666 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50035} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50035} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50035} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:09 -<==      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50035} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19acf418]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0d993c] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:09 -==> Parameters: 63(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Parameters : [63, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} executed. 1.2358 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50036} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50036} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50036} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:09 -<==      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50036} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0d993c]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cac9e48] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:09 -==> Parameters: 64(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Parameters : [64, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} executed. 0.9292 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50037} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50037} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -<==      Total: 0
2021-01-11 16:48:09 -{conn-10001, pstmt-20010, rs-50037} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cac9e48]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11bebd7e] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC 
2021-01-11 16:48:09 -==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20011} Parameters : [1, 1, 1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20011} Types : [INTEGER, INTEGER, INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20011} executed. 1.346 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC
2021-01-11 16:48:09 -{conn-10001, pstmt-20011, rs-50038} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20011, rs-50038} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -{conn-10001, pstmt-20011, rs-50038} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:09 -<==      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20011, rs-50038} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20011} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11bebd7e]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e1062f4] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: select*from sys_article WHERE state=1 and topstate=1 order by createtime desc 
2021-01-11 16:48:09 -==> Parameters: 
2021-01-11 16:48:09 -{conn-10001, pstmt-20012} Parameters : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20012} Types : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20012} executed. 1.4645 millis. select*from sys_article
         WHERE  state=1
            
            
                and topstate=1 
        order by createtime desc
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:09 -====>  Preparing: select * from sys_user where user_id=? 
2021-01-11 16:48:09 -====> Parameters: 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20013} Parameters : [1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20013} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20013} executed. 0.9036 millis. select * from sys_user where user_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20013, rs-50040} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20013, rs-50040} Header: [user_id, username, password, name, sex, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, is_vip, email, phone, area]
2021-01-11 16:48:09 -{conn-10001, pstmt-20013, rs-50040} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:48:09 -======>  Preparing: select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=? 
2021-01-11 16:48:09 -======> Parameters: 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20014} Parameters : [1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20014} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20014} executed. 1.0895 millis. select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20014, rs-50041} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20014, rs-50041} Header: [role_id, name, createtime, createuserid, updatetime, sign, context, state]
2021-01-11 16:48:09 -{conn-10001, pstmt-20014, rs-50041} Result: [1, 超级管理员, 2019-12-16 00:24:50.0, 1, 2019-12-30 00:48:29.0, systemadmin, 拥有最高权限, 1]
2021-01-11 16:48:09 -<======      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20014, rs-50041} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20014} clearParameters. 
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20013, rs-50040} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20013} clearParameters. 
2021-01-11 16:48:09 -====>  Preparing: select count(*) from sys_comment where articleid=66 
2021-01-11 16:48:09 -====> Parameters: 
2021-01-11 16:48:09 -{conn-10001, pstmt-20015} Parameters : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20015} Types : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20015} executed. 1.1265 millis. select count(*) from sys_comment where articleid=66
2021-01-11 16:48:09 -{conn-10001, pstmt-20015, rs-50042} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20015, rs-50042} Header: [count(*)]
2021-01-11 16:48:09 -{conn-10001, pstmt-20015, rs-50042} Result: [0]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20015, rs-50042} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20015} clearParameters. 
2021-01-11 16:48:09 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:09 -====> Parameters: 63(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Parameters : [63]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} executed. 1.1453 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50043} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50043} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50043} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50043} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:09 -====>  Preparing: select count(*) from sys_comment where articleid=40 
2021-01-11 16:48:09 -====> Parameters: 
2021-01-11 16:48:09 -{conn-10001, pstmt-20017} Parameters : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20017} Types : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20017} executed. 1.4864 millis. select count(*) from sys_comment where articleid=40
2021-01-11 16:48:09 -{conn-10001, pstmt-20017, rs-50044} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20017, rs-50044} Header: [count(*)]
2021-01-11 16:48:09 -{conn-10001, pstmt-20017, rs-50044} Result: [1]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20017, rs-50044} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20017} clearParameters. 
2021-01-11 16:48:09 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:09 -====> Parameters: 59(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Parameters : [59]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} executed. 0.6066 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50045} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50045} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50045} Result: [59, 秘密资料, 3, null, 2019-12-31 01:23:54.0, 哈哈哈哈, 1, 43, mimiziliao, 6]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50045} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:09 -====>  Preparing: select count(*) from sys_comment where articleid=39 
2021-01-11 16:48:09 -====> Parameters: 
2021-01-11 16:48:09 -{conn-10001, pstmt-20018} Parameters : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20018} Types : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20018} executed. 0.8601 millis. select count(*) from sys_comment where articleid=39
2021-01-11 16:48:09 -{conn-10001, pstmt-20018, rs-50046} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20018, rs-50046} Header: [count(*)]
2021-01-11 16:48:09 -{conn-10001, pstmt-20018, rs-50046} Result: [2]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20018, rs-50046} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20018} clearParameters. 
2021-01-11 16:48:09 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:09 -====> Parameters: 61(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Parameters : [61]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} executed. 0.5723 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50047} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50047} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50047} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50047} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:09 -====>  Preparing: select count(*) from sys_comment where articleid=38 
2021-01-11 16:48:09 -====> Parameters: 
2021-01-11 16:48:09 -{conn-10001, pstmt-20019} Parameters : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20019} Types : []
2021-01-11 16:48:09 -{conn-10001, pstmt-20019} executed. 0.8543 millis. select count(*) from sys_comment where articleid=38
2021-01-11 16:48:09 -{conn-10001, pstmt-20019, rs-50048} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20019, rs-50048} Header: [count(*)]
2021-01-11 16:48:09 -{conn-10001, pstmt-20019, rs-50048} Result: [1]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20019, rs-50048} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20019} clearParameters. 
2021-01-11 16:48:09 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:09 -====> Parameters: 54(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Parameters : [54]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} executed. 0.5687 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50049} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50049} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50049} Result: [54, java, 1, , 2019-12-31 01:19:31.0, java相关文章, 1, 28, java, 2]
2021-01-11 16:48:09 -<====      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20016, rs-50049} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:09 -<==      Total: 4
2021-01-11 16:48:09 -{conn-10001, pstmt-20012, rs-50039} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20012} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e1062f4]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6970afda] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT link_id,arttypeid,url,num,clickcount,createtime,email,title,descr FROM sys_links WHERE arttypeid = ? ORDER BY num ASC 
2021-01-11 16:48:09 -==> Parameters: 60(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20020} Parameters : [60]
2021-01-11 16:48:09 -{conn-10001, pstmt-20020} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20020} executed. 0.8184 millis. SELECT  link_id,arttypeid,url,num,clickcount,createtime,email,title,descr  FROM sys_links 
 
 WHERE arttypeid = ? ORDER BY num ASC
2021-01-11 16:48:09 -{conn-10001, pstmt-20020, rs-50050} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20020, rs-50050} Header: [link_id, arttypeid, url, num, clickcount, createtime, email, title, descr]
2021-01-11 16:48:09 -{conn-10001, pstmt-20020, rs-50050} Result: [1, 60, http://www.baidu.com, 1, 1, 2020-01-16 00:35:58.0, 11@qq.cc, 百度, 百友情度相关]
2021-01-11 16:48:09 -{conn-10001, pstmt-20020, rs-50050} Result: [15, 60, http://www.sogo.com, 2, null, 2020-01-03 00:35:44.0, ww@qq.com, 搜狗, 测试]
2021-01-11 16:48:09 -<==      Total: 2
2021-01-11 16:48:09 -{conn-10001, pstmt-20020, rs-50050} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20020} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6970afda]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -Creating a new SqlSession
2021-01-11 16:48:09 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af55ebe] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:09 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:09 -{conn-10001} pool-connect
2021-01-11 16:48:09 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:09 -==>  Preparing: SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=? 
2021-01-11 16:48:09 -==> Parameters: 1(Integer)
2021-01-11 16:48:09 -{conn-10001, pstmt-20021} Parameters : [1]
2021-01-11 16:48:09 -{conn-10001, pstmt-20021} Types : [INTEGER]
2021-01-11 16:48:09 -{conn-10001, pstmt-20021} executed. 1.3926 millis. SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=?
2021-01-11 16:48:09 -{conn-10001, pstmt-20021, rs-50051} open
2021-01-11 16:48:09 -{conn-10001, pstmt-20021, rs-50051} Header: [user_id, username, password, name, sex, is_vip, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, email, phone, area]
2021-01-11 16:48:09 -{conn-10001, pstmt-20021, rs-50051} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:48:09 -<==      Total: 1
2021-01-11 16:48:09 -{conn-10001, pstmt-20021, rs-50051} closed
2021-01-11 16:48:09 -{conn-10001, pstmt-20021} clearParameters. 
2021-01-11 16:48:09 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af55ebe]
2021-01-11 16:48:09 -{conn-10001} pool-recycle
2021-01-11 16:48:09 -返回值 : home/index
2021-01-11 16:48:09 -耗时 : 90
2021-01-11 16:48:09 -Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
2021-01-11 16:48:09 -[THYMELEAF][http-nio-0.0.0.0-8889-exec-2] Exception processing template "home/index": An error happened during template parsing (template: "class path resource [templates/home/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 73 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 75 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 97 common frames omitted
2021-01-11 16:48:09 -Error rendering view [org.thymeleaf.spring5.view.ThymeleafView@450522f5]
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 73 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 75 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 97 common frames omitted
2021-01-11 16:48:09 -Failed to complete request: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
2021-01-11 16:48:09 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-01-11 16:48:09 -"ERROR" dispatch for GET "/error", parameters={}
2021-01-11 16:48:09 -looking up handler for path: /error
2021-01-11 16:48:09 -Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2021-01-11 16:48:09 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:48:09 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:48:09 -Selected 'text/html' given [text/html, text/html;q=0.8]
2021-01-11 16:48:09 -Exiting from "ERROR" dispatch, status 500
2021-01-11 16:48:25 -batch acquisition of 1 triggers
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6683de56].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /
2021-01-11 16:48:39 -Mapped to com.dong.home.controller.indexController#index(Model)
2021-01-11 16:48:39 -请求地址 : http://localhost:8889/
2021-01-11 16:48:39 -HTTP METHOD : GET
2021-01-11 16:48:39 -CLASS_METHOD : com.dong.home.controller.AdviceControllerArttype.addmodel
2021-01-11 16:48:39 -参数 : [{}]
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68442cf6] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? ORDER BY sort ASC 
2021-01-11 16:48:39 -==> Parameters: 0(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20004} Parameters : [0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004} executed. 0.9181 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ? ORDER BY sort ASC
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} Result: [2, 博客, 1, /jianluboke, 2019-12-03 18:04:44.0, 主要分享博客文章, 1, 299, boke, 0]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} Result: [6, 资源分享, 2, /zyfx, 2019-12-03 18:09:34.0, 主要分享资源相关, 1, 208, ziyuanfenxiang, 0]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} Result: [8, 影院, 3, /jlyy, 2019-12-03 19:40:24.0, 电影相关, 1, 0, yingyuan, 0]
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} Result: [9, 音乐, 4, jlyinyue, 2019-12-03 19:43:04.0, 音乐相关, 1, 0, yinle, 0]
2021-01-11 16:48:39 -<==      Total: 5
2021-01-11 16:48:39 -{conn-10001, pstmt-20004, rs-50052} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20004} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68442cf6]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@297926cd] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT tag_id,title,createtime,createuserid FROM sys_tag 
2021-01-11 16:48:39 -==> Parameters: 
2021-01-11 16:48:39 -{conn-10001, pstmt-20005} Parameters : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20005} Types : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20005} executed. 0.8724 millis. SELECT  tag_id,title,createtime,createuserid  FROM sys_tag
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Header: [tag_id, title, createtime, createuserid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [4, JAVA, 2019-12-14 13:46:00.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [5, PHP, 2019-12-14 13:46:03.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [6, CSS, 2019-12-14 13:46:06.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [7, JAVASCRIPT, 2019-12-14 13:46:11.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [9, XML, 2019-12-14 13:46:21.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [10, HTML5, 2019-12-14 13:46:31.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [11, C#, 2019-12-14 13:46:35.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [12, GO, 2019-12-14 13:46:42.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [13, .NET, 2019-12-14 13:46:52.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [14, JVM, 2019-12-14 13:46:56.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [15, Spring, 2019-12-14 13:47:19.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [16, 互联网, 2019-12-14 13:47:27.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [17, Mybatis, 2019-12-14 13:47:49.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [18, VUE, 2019-12-14 13:47:57.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [19, Redis, 2019-12-14 13:48:09.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [20, Lucene, 2019-12-14 13:48:22.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [21, Solr, 2019-12-14 13:48:30.0, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} Result: [33, Linux, 2021-01-04 09:18:05.0, 1]
2021-01-11 16:48:39 -<==      Total: 18
2021-01-11 16:48:39 -{conn-10001, pstmt-20005, rs-50053} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20005} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@297926cd]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -返回值 : null
2021-01-11 16:48:39 -耗时 : 11
2021-01-11 16:48:39 -请求地址 : http://localhost:8889/
2021-01-11 16:48:39 -HTTP METHOD : GET
2021-01-11 16:48:39 -CLASS_METHOD : com.dong.home.controller.indexController.index
2021-01-11 16:48:39 -参数 : [{listArttype=[Arttype(acttypeId=60, title=首页, sort=0, url=/, createtime=2019-12-31T21:23:08, description=首页, state=1, click=0, pinyin=shouye, parentid=0, ParentTitle=null), Arttype(acttypeId=2, title=博客, sort=1, url=/jianluboke, createtime=2019-12-03T18:04:44, description=主要分享博客文章, state=1, click=299, pinyin=boke, parentid=0, ParentTitle=null), Arttype(acttypeId=6, title=资源分享, sort=2, url=/zyfx, createtime=2019-12-03T18:09:34, description=主要分享资源相关, state=1, click=208, pinyin=ziyuanfenxiang, parentid=0, ParentTitle=null), Arttype(acttypeId=8, title=影院, sort=3, url=/jlyy, createtime=2019-12-03T19:40:24, description=电影相关, state=1, click=0, pinyin=yingyuan, parentid=0, ParentTitle=null), Arttype(acttypeId=9, title=音乐, sort=4, url=jlyinyue, createtime=2019-12-03T19:43:04, description=音乐相关, state=1, click=0, pinyin=yinle, parentid=0, ParentTitle=null)], tags=[Tag(tagId=4, title=JAVA, createtime=2019-12-14T13:46, createuserid=1), Tag(tagId=5, title=PHP, createtime=2019-12-14T13:46:03, createuserid=1), Tag(tagId=6, title=CSS, createtime=2019-12-14T13:46:06, createuserid=1), Tag(tagId=7, title=JAVASCRIPT, createtime=2019-12-14T13:46:11, createuserid=1), Tag(tagId=9, title=XML, createtime=2019-12-14T13:46:21, createuserid=1), Tag(tagId=10, title=HTML5, createtime=2019-12-14T13:46:31, createuserid=1), Tag(tagId=11, title=C#, createtime=2019-12-14T13:46:35, createuserid=1), Tag(tagId=12, title=GO, createtime=2019-12-14T13:46:42, createuserid=1), Tag(tagId=13, title=.NET, createtime=2019-12-14T13:46:52, createuserid=1), Tag(tagId=14, title=JVM, createtime=2019-12-14T13:46:56, createuserid=1), Tag(tagId=15, title=Spring, createtime=2019-12-14T13:47:19, createuserid=1), Tag(tagId=16, title=互联网, createtime=2019-12-14T13:47:27, createuserid=1), Tag(tagId=17, title=Mybatis, createtime=2019-12-14T13:47:49, createuserid=1), Tag(tagId=18, title=VUE, createtime=2019-12-14T13:47:57, createuserid=1), Tag(tagId=19, title=Redis, createtime=2019-12-14T13:48:09, createuserid=1), Tag(tagId=20, title=Lucene, createtime=2019-12-14T13:48:22, createuserid=1), Tag(tagId=21, title=Solr, createtime=2019-12-14T13:48:30, createuserid=1), Tag(tagId=33, title=Linux, createtime=2021-01-04T09:18:05, createuserid=1)]}]
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a899e] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE url = ? 
2021-01-11 16:48:39 -==> Parameters: /(String)
2021-01-11 16:48:39 -{conn-10001, pstmt-20006} Parameters : [/]
2021-01-11 16:48:39 -{conn-10001, pstmt-20006} Types : [VARCHAR]
2021-01-11 16:48:39 -{conn-10001, pstmt-20006} executed. 0.9917 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE url = ?
2021-01-11 16:48:39 -{conn-10001, pstmt-20006, rs-50054} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20006, rs-50054} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20006, rs-50054} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:48:39 -<==      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20006, rs-50054} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20006} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189a899e]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4956d982] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num FROM sys_wheel WHERE state = ? AND arttype_id = ? ORDER BY num ASC 
2021-01-11 16:48:39 -==> Parameters: 1(Integer), 60(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20007} Parameters : [1, 60]
2021-01-11 16:48:39 -{conn-10001, pstmt-20007} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20007} executed. 1.222 millis. SELECT  wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num  FROM sys_wheel 
 
 WHERE state = ? AND arttype_id = ? ORDER BY num ASC
2021-01-11 16:48:39 -{conn-10001, pstmt-20007, rs-50055} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20007, rs-50055} Header: [wheel_id, arttype_id, url, title, imageurl, createuserid, createtime, state, num]
2021-01-11 16:48:39 -{conn-10001, pstmt-20007, rs-50055} Result: [8, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790976378.jpg, 1, 2019-12-31 22:59:15.0, 1, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20007, rs-50055} Result: [6, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790632828.jpg, 1, 2019-12-31 22:59:15.0, 1, 3]
2021-01-11 16:48:39 -{conn-10001, pstmt-20007, rs-50055} Result: [21, 60, https://baike.baidu.com/item/%E8%BF%AA%E4%B8%BD%E7%83%AD%E5%B7%B4/1180418?fr=aladdin, 迪丽热巴, /upload/2021-01/1609650811273.jpg, 1, 2021-01-03 13:13:42.0, 1, 4]
2021-01-11 16:48:39 -<==      Total: 3
2021-01-11 16:48:39 -{conn-10001, pstmt-20007, rs-50055} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20007} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4956d982]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@550a964b] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2 
2021-01-11 16:48:39 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20008} Parameters : [1, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20008} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20008} executed. 1.1857 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2
2021-01-11 16:48:39 -{conn-10001, pstmt-20008, rs-50056} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20008, rs-50056} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -{conn-10001, pstmt-20008, rs-50056} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:39 -{conn-10001, pstmt-20008, rs-50056} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:39 -<==      Total: 2
2021-01-11 16:48:39 -{conn-10001, pstmt-20008, rs-50056} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20008} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@550a964b]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d18e46d] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? 
2021-01-11 16:48:39 -==> Parameters: 60(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20009} Parameters : [60, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20009} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20009} executed. 0.7653 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ?
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} Result: [62, 心路历程, 2, //, 2020-01-01 01:27:37.0, 首页, 1, 0, xinlulicheng, 60]
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} Result: [64, 优质资源, 4, //, 2020-01-01 01:30:55.0, 首页, 1, 0, youzhiziyuan, 60]
2021-01-11 16:48:39 -<==      Total: 4
2021-01-11 16:48:39 -{conn-10001, pstmt-20009, rs-50057} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20009} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d18e46d]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547d0f27] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:39 -==> Parameters: 61(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Parameters : [61, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} executed. 0.9368 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50058} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50058} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50058} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50058} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:39 -<==      Total: 2
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50058} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@547d0f27]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bf76e5f] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:39 -==> Parameters: 62(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Parameters : [62, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} executed. 1.0738 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50059} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50059} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50059} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:39 -<==      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50059} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bf76e5f]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf5105f] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:39 -==> Parameters: 63(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Parameters : [63, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} executed. 0.9925 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50060} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50060} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50060} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:39 -<==      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50060} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf5105f]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31dfb368] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:48:39 -==> Parameters: 64(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Parameters : [64, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} executed. 1.2144 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50061} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50061} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -<==      Total: 0
2021-01-11 16:48:39 -{conn-10001, pstmt-20010, rs-50061} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31dfb368]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cfa161a] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC 
2021-01-11 16:48:39 -==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20011} Parameters : [1, 1, 1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20011} Types : [INTEGER, INTEGER, INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20011} executed. 0.9197 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC
2021-01-11 16:48:39 -{conn-10001, pstmt-20011, rs-50062} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20011, rs-50062} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -{conn-10001, pstmt-20011, rs-50062} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:39 -<==      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20011, rs-50062} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20011} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cfa161a]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2488c592] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: select*from sys_article WHERE state=1 and topstate=1 order by createtime desc 
2021-01-11 16:48:39 -==> Parameters: 
2021-01-11 16:48:39 -{conn-10001, pstmt-20012} Parameters : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20012} Types : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20012} executed. 0.9667 millis. select*from sys_article
         WHERE  state=1
            
            
                and topstate=1 
        order by createtime desc
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:39 -====>  Preparing: select * from sys_user where user_id=? 
2021-01-11 16:48:39 -====> Parameters: 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20013} Parameters : [1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20013} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20013} executed. 1.3548 millis. select * from sys_user where user_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20013, rs-50064} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20013, rs-50064} Header: [user_id, username, password, name, sex, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, is_vip, email, phone, area]
2021-01-11 16:48:39 -{conn-10001, pstmt-20013, rs-50064} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:48:39 -======>  Preparing: select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=? 
2021-01-11 16:48:39 -======> Parameters: 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20014} Parameters : [1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20014} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20014} executed. 0.7256 millis. select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20014, rs-50065} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20014, rs-50065} Header: [role_id, name, createtime, createuserid, updatetime, sign, context, state]
2021-01-11 16:48:39 -{conn-10001, pstmt-20014, rs-50065} Result: [1, 超级管理员, 2019-12-16 00:24:50.0, 1, 2019-12-30 00:48:29.0, systemadmin, 拥有最高权限, 1]
2021-01-11 16:48:39 -<======      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20014, rs-50065} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20014} clearParameters. 
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20013, rs-50064} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20013} clearParameters. 
2021-01-11 16:48:39 -====>  Preparing: select count(*) from sys_comment where articleid=66 
2021-01-11 16:48:39 -====> Parameters: 
2021-01-11 16:48:39 -{conn-10001, pstmt-20015} Parameters : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20015} Types : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20015} executed. 0.8563 millis. select count(*) from sys_comment where articleid=66
2021-01-11 16:48:39 -{conn-10001, pstmt-20015, rs-50066} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20015, rs-50066} Header: [count(*)]
2021-01-11 16:48:39 -{conn-10001, pstmt-20015, rs-50066} Result: [0]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20015, rs-50066} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20015} clearParameters. 
2021-01-11 16:48:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:39 -====> Parameters: 63(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Parameters : [63]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} executed. 0.8594 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50067} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50067} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50067} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50067} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:39 -====>  Preparing: select count(*) from sys_comment where articleid=40 
2021-01-11 16:48:39 -====> Parameters: 
2021-01-11 16:48:39 -{conn-10001, pstmt-20017} Parameters : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20017} Types : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20017} executed. 0.6869 millis. select count(*) from sys_comment where articleid=40
2021-01-11 16:48:39 -{conn-10001, pstmt-20017, rs-50068} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20017, rs-50068} Header: [count(*)]
2021-01-11 16:48:39 -{conn-10001, pstmt-20017, rs-50068} Result: [1]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20017, rs-50068} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20017} clearParameters. 
2021-01-11 16:48:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:39 -====> Parameters: 59(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Parameters : [59]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} executed. 0.5073 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50069} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50069} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50069} Result: [59, 秘密资料, 3, null, 2019-12-31 01:23:54.0, 哈哈哈哈, 1, 43, mimiziliao, 6]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50069} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:39 -====>  Preparing: select count(*) from sys_comment where articleid=39 
2021-01-11 16:48:39 -====> Parameters: 
2021-01-11 16:48:39 -{conn-10001, pstmt-20018} Parameters : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20018} Types : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20018} executed. 0.8191 millis. select count(*) from sys_comment where articleid=39
2021-01-11 16:48:39 -{conn-10001, pstmt-20018, rs-50070} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20018, rs-50070} Header: [count(*)]
2021-01-11 16:48:39 -{conn-10001, pstmt-20018, rs-50070} Result: [2]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20018, rs-50070} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20018} clearParameters. 
2021-01-11 16:48:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:39 -====> Parameters: 61(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Parameters : [61]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} executed. 0.4833 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50071} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50071} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50071} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50071} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:39 -====>  Preparing: select count(*) from sys_comment where articleid=38 
2021-01-11 16:48:39 -====> Parameters: 
2021-01-11 16:48:39 -{conn-10001, pstmt-20019} Parameters : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20019} Types : []
2021-01-11 16:48:39 -{conn-10001, pstmt-20019} executed. 1.3975 millis. select count(*) from sys_comment where articleid=38
2021-01-11 16:48:39 -{conn-10001, pstmt-20019, rs-50072} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20019, rs-50072} Header: [count(*)]
2021-01-11 16:48:39 -{conn-10001, pstmt-20019, rs-50072} Result: [1]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20019, rs-50072} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20019} clearParameters. 
2021-01-11 16:48:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:48:39 -====> Parameters: 54(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Parameters : [54]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} executed. 1.1507 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50073} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50073} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50073} Result: [54, java, 1, , 2019-12-31 01:19:31.0, java相关文章, 1, 28, java, 2]
2021-01-11 16:48:39 -<====      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20016, rs-50073} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:48:39 -<==      Total: 4
2021-01-11 16:48:39 -{conn-10001, pstmt-20012, rs-50063} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20012} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2488c592]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@515367e5] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT link_id,arttypeid,url,num,clickcount,createtime,email,title,descr FROM sys_links WHERE arttypeid = ? ORDER BY num ASC 
2021-01-11 16:48:39 -==> Parameters: 60(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20020} Parameters : [60]
2021-01-11 16:48:39 -{conn-10001, pstmt-20020} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20020} executed. 1.812 millis. SELECT  link_id,arttypeid,url,num,clickcount,createtime,email,title,descr  FROM sys_links 
 
 WHERE arttypeid = ? ORDER BY num ASC
2021-01-11 16:48:39 -{conn-10001, pstmt-20020, rs-50074} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20020, rs-50074} Header: [link_id, arttypeid, url, num, clickcount, createtime, email, title, descr]
2021-01-11 16:48:39 -{conn-10001, pstmt-20020, rs-50074} Result: [1, 60, http://www.baidu.com, 1, 1, 2020-01-16 00:35:58.0, 11@qq.cc, 百度, 百友情度相关]
2021-01-11 16:48:39 -{conn-10001, pstmt-20020, rs-50074} Result: [15, 60, http://www.sogo.com, 2, null, 2020-01-03 00:35:44.0, ww@qq.com, 搜狗, 测试]
2021-01-11 16:48:39 -<==      Total: 2
2021-01-11 16:48:39 -{conn-10001, pstmt-20020, rs-50074} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20020} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@515367e5]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -Creating a new SqlSession
2021-01-11 16:48:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c91eb] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:39 -{conn-10001} pool-connect
2021-01-11 16:48:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:39 -==>  Preparing: SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=? 
2021-01-11 16:48:39 -==> Parameters: 1(Integer)
2021-01-11 16:48:39 -{conn-10001, pstmt-20021} Parameters : [1]
2021-01-11 16:48:39 -{conn-10001, pstmt-20021} Types : [INTEGER]
2021-01-11 16:48:39 -{conn-10001, pstmt-20021} executed. 0.567 millis. SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=?
2021-01-11 16:48:39 -{conn-10001, pstmt-20021, rs-50075} open
2021-01-11 16:48:39 -{conn-10001, pstmt-20021, rs-50075} Header: [user_id, username, password, name, sex, is_vip, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, email, phone, area]
2021-01-11 16:48:39 -{conn-10001, pstmt-20021, rs-50075} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:48:39 -<==      Total: 1
2021-01-11 16:48:39 -{conn-10001, pstmt-20021, rs-50075} closed
2021-01-11 16:48:39 -{conn-10001, pstmt-20021} clearParameters. 
2021-01-11 16:48:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c91eb]
2021-01-11 16:48:39 -{conn-10001} pool-recycle
2021-01-11 16:48:39 -返回值 : home/index
2021-01-11 16:48:39 -耗时 : 73
2021-01-11 16:48:39 -Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, application/xml;q=0.9, */*;q=0.8]
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@65acafd].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/static/lib/layui/css/layui.css", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /static/lib/layui/css/layui.css
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6194603c].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/css/base.css", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/css/base.css
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@4e0d39ef].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/css/m.css", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/css/m.css
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@2d0ca8a0].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@38219865].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@7d20785d].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/template/ue-content/templates/images/style.css", parameters={}
2021-01-11 16:48:39 -GET "/homestatic/template/ue-content/templates/images/ue_grid.css", parameters={}
2021-01-11 16:48:39 -GET "/homestatic/template/ue-content/templates/css/style.css", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/template/ue-content/templates/images/style.css
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -looking up handler for path: /homestatic/template/ue-content/templates/images/ue_grid.css
2021-01-11 16:48:39 -looking up handler for path: /homestatic/template/ue-content/templates/css/style.css
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@20213fc1].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/static/js/jquery.mins.js", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /static/js/jquery.mins.js
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@3665b2cc].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/js/comm.js", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/js/comm.js
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@11422521].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/js/modernizr.js", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/js/modernizr.js
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6ee8e21e].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/static/lib/layui/layui.js", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /static/lib/layui/layui.js
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6b6c0b4c].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/script/jquery.easing.min.js", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/script/jquery.easing.min.js
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@47d67bd7].  Returning null to indicate a session could not be found.
2021-01-11 16:48:39 -GET "/homestatic/script/custom.js", parameters={}
2021-01-11 16:48:39 -looking up handler for path: /homestatic/script/custom.js
2021-01-11 16:48:39 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:39 -Completed 200 OK
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@32d9f315].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -GET "/upload/2021-01/1609650811273.jpg", parameters={}
2021-01-11 16:48:40 -looking up handler for path: /upload/2021-01/1609650811273.jpg
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["file:F:/JavaWorkSpace/myblog/propty/upload/"]
2021-01-11 16:48:40 -Completed 304 NOT_MODIFIED
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@44f5529f].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -GET "/upload/2021-01/1609926066372.png", parameters={}
2021-01-11 16:48:40 -looking up handler for path: /upload/2021-01/1609926066372.png
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["file:F:/JavaWorkSpace/myblog/propty/upload/"]
2021-01-11 16:48:40 -Completed 304 NOT_MODIFIED
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@27f4c3d0].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@36336706].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -GET "/static/images/wx.jpg", parameters={}
2021-01-11 16:48:40 -GET "/static/images/h1.jpg", parameters={}
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@77d8132d].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -looking up handler for path: /static/images/h1.jpg
2021-01-11 16:48:40 -looking up handler for path: /static/images/wx.jpg
2021-01-11 16:48:40 -GET "/static/lib/layui/font/iconfont.woff?v=226_rc2", parameters={masked}
2021-01-11 16:48:40 -looking up handler for path: /static/lib/layui/font/iconfont.woff
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@2ad954b1].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -GET "/homestatic/images/right.png", parameters={}
2021-01-11 16:48:40 -looking up handler for path: /homestatic/images/right.png
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6c399834].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -GET "/homestatic/images/left.png", parameters={}
2021-01-11 16:48:40 -looking up handler for path: /homestatic/images/left.png
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:40 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@7646f73f].  Returning null to indicate a session could not be found.
2021-01-11 16:48:40 -GET "/upload/logo/1609648503481_1.jpg", parameters={}
2021-01-11 16:48:40 -looking up handler for path: /upload/logo/1609648503481_1.jpg
2021-01-11 16:48:40 -Mapped to ResourceHttpRequestHandler ["file:F:/JavaWorkSpace/myblog/propty/upload/"]
2021-01-11 16:48:40 -Completed 200 OK
2021-01-11 16:48:40 -Completed 200 OK
2021-01-11 16:48:40 -Completed 200 OK
2021-01-11 16:48:40 -Completed 200 OK
2021-01-11 16:48:40 -Completed 200 OK
2021-01-11 16:48:40 -Completed 304 NOT_MODIFIED
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@79b3a490].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@4d793884].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/static/images/h2.jpg", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /static/images/h2.jpg
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@14929c4e].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/upload/2021-01/1609723629239.jpg", parameters={}
2021-01-11 16:48:41 -GET "/homestatic/images/c03.png", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/c03.png
2021-01-11 16:48:41 -looking up handler for path: /upload/2021-01/1609723629239.jpg
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@1f7c465].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/homestatic/images/c04.png", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/c04.png
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@462d3a83].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -GET "/homestatic/images/quote-bg.png", parameters={}
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@739b3d46].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["file:F:/JavaWorkSpace/myblog/propty/upload/"]
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/quote-bg.png
2021-01-11 16:48:41 -GET "/homestatic/images/c01.png", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/c01.png
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@14376979].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/homestatic/images/c02.png", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/c02.png
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@2a77a41c].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/homestatic/images/top.png", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/top.png
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@4c46e724].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/homestatic/images/ad.jpg", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/ad.jpg
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@1f6c3e1a].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/static/lib/layui/lay/modules/form.js", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /static/lib/layui/lay/modules/form.js
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Completed 304 NOT_MODIFIED
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@3e622f3c].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/homestatic/images/v.png", parameters={}
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@beb0e66].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -looking up handler for path: /homestatic/images/v.png
2021-01-11 16:48:41 -GET "/static/lib/layui/lay/modules/layer.js", parameters={}
2021-01-11 16:48:41 -looking up handler for path: /static/lib/layui/lay/modules/layer.js
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:41 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@209e305c].  Returning null to indicate a session could not be found.
2021-01-11 16:48:41 -GET "/static/lib/layui/css/modules/layer/default/layer.css?v=3.1.1", parameters={masked}
2021-01-11 16:48:41 -looking up handler for path: /static/lib/layui/css/modules/layer/default/layer.css
2021-01-11 16:48:41 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:48:41 -Completed 200 OK
2021-01-11 16:48:50 -Calling execute on job group.页面左边资源文章排行
2021-01-11 16:48:50 -batch acquisition of 1 triggers
2021-01-11 16:48:50 -Creating a new SqlSession
2021-01-11 16:48:50 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635612ed] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:50 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:50 -{conn-10001} pool-connect
2021-01-11 16:48:50 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:50 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:48:50 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:50 -{conn-10001, pstmt-20002} Parameters : [1, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
2021-01-11 16:48:50 -{conn-10001, pstmt-20002} executed. 1.1144 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} open
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} Result: [70, 57, 程序员优秀的简历模板, /upload/2021-01/1609926646023.jpeg, null, <p>程序员优秀的简历模板</p>, 1, 2021-01-06 17:52:13.0, null, 0, 1, 94, 99, https://pan.baidu.com/s/1kk2mQAEJ0IMrRrdFCq-UBw, bmt5, 1, 0, 0, 2, 0, null, null, 2]
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:48:50 -<==      Total: 4
2021-01-11 16:48:50 -{conn-10001, pstmt-20002, rs-50076} closed
2021-01-11 16:48:50 -{conn-10001, pstmt-20002} clearParameters. 
2021-01-11 16:48:50 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635612ed]
2021-01-11 16:48:50 -{conn-10001} pool-recycle
2021-01-11 16:48:50 -Creating a new SqlSession
2021-01-11 16:48:50 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69ae799d] was not registered for synchronization because synchronization is not active
2021-01-11 16:48:50 -Fetching JDBC Connection from DataSource
2021-01-11 16:48:50 -{conn-10001} pool-connect
2021-01-11 16:48:50 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:48:50 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:48:50 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:48:50 -{conn-10001, pstmt-20003} Parameters : [1, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003} Types : [INTEGER, INTEGER]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003} executed. 1.5954 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} open
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [44, 2, 自定义基于反射 Scoket jdk动态代理 RPC框架, /upload/2020-01/1580268847693.jpg, <p>使用工具IDEA， Myeclipse编写服务端接口 HelloService</p><p><img src="https://img-blog.csdnimg.cn/20190510114408827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>服务端实现类</p><p><img src="https://img-blog.csdnimg.cn/201905101149147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>编写服务端的调用类package whu;<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;<br>import java.lang.reflect.Method;<br>import java.net.ServerSocket;import java.net.Socket;<br>public class RpcFramework {//注册开始方法public static void export(Object service, Class interfaceClazz, int port) throws Exception {<br>&nbsp; &nbsp; if (service == null) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("service instance == null");&nbsp; &nbsp; }&nbsp; &nbsp; if (port &lt; 0 || port &gt; 65535) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Invalid port " + port);&nbsp; &nbsp; }&nbsp; &nbsp; System.out.println("Export service " + service.getClass().getName() + " on port " + port);&nbsp; &nbsp; //服务端socket&nbsp; &nbsp; ServerSocket server = new ServerSocket(port);&nbsp; &nbsp; //死循环达到不断监听 使用while(true)也一样&nbsp; &nbsp; for (;;) {&nbsp; &nbsp; &nbsp; &nbsp; final Socket socket = server.accept();//阻塞等待客户端连接&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new Thread(new Runnable() {//多线程<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public void run() {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取客户端传来的流对象&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String interfaceName = input.readUTF();//获取客户端传来需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String methodName = input.readUTF();//客户端传来需要调用的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject();//客户端传来需要调用的方法的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object[] arguments = (Object[]) input.readObject();//调用方法的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//返回客户端的留流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断客户端需要调用的接口在服务端是否存在&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!interfaceName.equals(interfaceClazz.getName())) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Interface wrong, export:" + interfaceClazz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " refer:" + interfaceName);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method method = service.getClass().getMethod(methodName, parameterTypes);//通过反射获取服务端的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = method.invoke(service, arguments);//执行服务端方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(result);//返回给客户端&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Throwable t) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(t);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).start();//开启线程&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }}123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960}<br>我这里是直接传入一个对象 你们也可以写一个map用来注册多个对象服务端启动类<br>package whu;<br>public class out {<br>public static void main(String[] args) throws Exception {&nbsp; &nbsp; HelloService service = new HelloServiceImpl();&nbsp; &nbsp; RpcFramework.export(service, HelloService.class, 9000);}1234}<br>客户端调用类<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;<br>import java.net.Socket;<br>public class Rpcfrowd {<br>/**&nbsp;* @param args&nbsp;*/&nbsp;@SuppressWarnings("unchecked")//屏蔽黄线&nbsp;public static &lt;T&gt; T refer(final Class&lt;T&gt; interfaceClass, final String host, final int port) throws Exception {&nbsp; &nbsp; &nbsp;&nbsp;	&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println("Get remote service " + interfaceClass.getName() + " from server " + host + ":" + port);&nbsp; &nbsp; &nbsp; &nbsp; return (T) Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class&lt;?&gt;[] { interfaceClass },&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InvocationHandler() {//jdk 动态代理&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated method stub&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Socket socket = new Socket(host, port);//建立客户端socket 传入服务端ip 和端口&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("socket通过");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//向服务端写入流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(interfaceClass.getName());//需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(method.getName());//需要调用的方法名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(method.getParameterTypes());//需要调用的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(args);//需要调用的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("发送成功");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());//接收服务端的返回信息<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = input.readObject();//接收服务端的返回信息&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("接收成功"+result);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result instanceof Throwable) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw (Throwable) result;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result;//返回&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930313233343536373839404142434445464748}注意第一个return是返回 生成的代理类对象 第二个是返回调用方法的返回值<br>客户端启动类import whu.HelloService;<br>public class clid {<br>public static void main(String[] args) throws Exception {	HelloService&nbsp; service = (HelloService)Rpcfrowd.refer(Class.forName("whu.HelloService"), "127.0.0.1", 9000);&nbsp; &nbsp; String result = service.hello("rod---");&nbsp; &nbsp; System.out.println(result);}12345}<br>运行服务端启动类————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href="https://blog.csdn.net/qq_28422443/article/details/90055742" rel="nofollow">https://blog.csdn.net/qq_28422443/article/details/90055742</a> </p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121656921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>运行客户端启动类</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121747406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>简单的rpc远程调用就实现了 这里提一下服务端需要接口和实现类 客户端只需要接口就行</p>, <p>使用工具IDEA， Myeclipse</p><p>编写服务端接口 HelloService</p>, 1, 2020-01-29 11:35:34.0, null, 0, 1, 192, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [45, 2, springboot对应springcloud的版本, /upload/2020-01/1580269227935.jpg, <p>Spring Boot	Spring Cloud<br>1.2.x	Angel版本1.3.x	Brixton版本1.4.x	Camden版本1.5.x Dalston版本、Edgware版本2.0.x Finchley版本————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88871861</p>, <p><span>Spring Boot	Spring Cloud</span></p>, 1, 2020-01-29 11:40:44.0, null, 0, 0, 187, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [47, 2, spring ioc/aop的理解, /upload/2020-01/1580269895723.jpg, <p>开发普通的spring程序需要6个jar<br>我们去官方下载了 spring的提供的jar文件</p><p><img src="https://img-blog.csdnimg.cn/20190310142615174.png" alt="è§£åå"></p><p>点击打开里面libs目录找以下jarspring-aop-3.2.4.RELEASE.jarspring-beans-3.2.4.RELEASE.jarspring-context-3.2.4.RELEASE.jarspring-core-3.2.4.RELEASE.jarspring-expression-3.2.4.RELEASE.jar还需要一个日志包 spring框架底层使用了他 不然ioc不能实例化commons-logging-1.1.1.jar<br>我们把相应的jar 导入项目并加入类路径</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/2019031014313356.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>我这里实现了aop 多了4个jar 后面再讲先不用管项目要求 通过指定id查询学生首先我们建一个student的pojo</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190310144303595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å­¦çidï¼nameï¼age"></p><p>然后建立dao层接口</p>, <p><span>开发普通的spring程序需要6个jar</span><br><span>我们去官方下载了 spring的提供的jar文件</span></p>, 1, 2020-01-29 11:52:44.0, null, 0, 1, 104, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [65, 2, Linux下安装Nginx,Jdk,Tomcat, /upload/2021-01/1609723629239.jpg, <p><span style="font-size: 20px;"><strong>一 nginx 安装&nbsp;</strong></span></p><p>安装环境:&nbsp;</p><p>yum install gcc-c++&nbsp;</p><p>yum install -y pcre pcre-devel</p><p>yum install -y zlib zlib-devel&nbsp;</p><p>yum install -y openssl openssl-devel&nbsp;</p><ol style="list-style-type: decimal;"><li><p>下载 nginx-1.11.0.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p></li><li><p>解压安装&nbsp;</p><p># cd /soft&nbsp;</p><p># tar -zxvf nginx-1.11.0.tar.gz&nbsp;</p><p>#./configure --prefix=/usr/nginx --with-http_ssl_module --with-http_stub_status_module - -with-pcre&nbsp;</p><p># make &amp;&amp; make install&nbsp;&nbsp;</p></li></ol><p>&nbsp; 3.安装完毕&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动 nginx&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;# /user/nginx/sbin/nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 关闭 nginx</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# pkill -9 nginx</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;或者&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ps -ef|grep nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # kill -9 进程号&nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4.nginx 配置&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # cd /usr/nginx/conf</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi nginx.conf&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;listen&nbsp;&nbsp; 80;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server_name&nbsp;&nbsp; www.abcd.com abcd.com;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;location / {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index&nbsp;&nbsp; index.html index.htm;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p><br></p><p><span style="font-size: 20px;"><strong>二 jdk 安装&nbsp;</strong></span></p><p>&nbsp;1.下载 jdk-7u45-linux-x64.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录&nbsp;下&nbsp;</p><p>&nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cd /soft&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tar -zxvf jdk-7u45-linux-x64.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# mv jdk1.7.0_45 /usr/</p><p>&nbsp;3. 配置环境变量</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi /etc/profile&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 编辑,在最后添加下面的内容&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JAVA_HOME=/usr/jdk1.7.0_45&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JRE_HOME=/usr/jdk1.7.0_45/jre&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib 保存退出，</p><p>&nbsp; &nbsp; &nbsp; 然后输入下面的命令使之生效&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; # source /etc/profile&nbsp;</p><p>4.&nbsp;&nbsp; 测试&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;# java -version&nbsp;出现如下表示安装成功&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;java version "1.7.0_45"&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</p><p><br></p><p><span style="font-size: 20px;">三 tomcat 安装</span></p><p>&nbsp; &nbsp;1.下载 apache-tomcat-7.0.53.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p><p>&nbsp; &nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /soft&nbsp;# tar -zxvf apache-tomcat-7.0.53.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# mv apache-tomcat-7.0.53 /usr/&nbsp;</p><p>&nbsp; 3. 修改端口&nbsp;</p><p>&nbsp; &nbsp; &lt;Connector port="80" protocol="HTTP/1.1"&nbsp;URIEncoding="UTF-8"&nbsp;redirectPort="8443" /&gt;&nbsp;</p><p>&nbsp; &nbsp; 注:根据实际需要设置 tomcat 的端口&nbsp;</p><p>&nbsp; 4. tomcat 启动&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /usr/tomcat7/bin/&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# ./startup.sh &amp;&nbsp;</p><p>&nbsp; &nbsp; # tail -f ../logs/catalina.out&nbsp;</p><p>&nbsp; &nbsp;5.tomcat 关闭&nbsp;</p><p>&nbsp; &nbsp; # ps -ef|grep tomcat&nbsp;</p><p>&nbsp; &nbsp; # kill -9 进程号</p>, <p>本文讲解如何在linux下安装Nginx、Jdk、Tomcat</p>, 1, 2021-01-04 09:27:12.0, null, 0, 0, 70, 1, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [42, 2, java8 lambda表达式 函数式编程, /upload/2020-01/1580268632163.jpg, <p>注解的表面意思和接口差不多 只定义没有实际作用定义注解的语法是（@interface 注解名{}）自定义注解还需要添加系统提供的元注解1.@Target,2.@Retention,3.@Documented,4.@Inherited<br>一 .查看源码得知Target 有一个ElementType的枚举属性，他的作用是定义注解的范围</p><p><img src="https://img-blog.csdnimg.cn/20190621153751114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>&nbsp;1.CONSTRUCTOR:用于描述构造器　　　　2.FIELD:用于描述域　　　　3.LOCAL_VARIABLE:用于描述局部变量　　　　4.METHOD:用于描述方法　　　　5.PACKAGE:用于描述包　　　　6.PARAMETER:用于描述参数　　　　7.TYPE:用于描述类、接口(包括注解类型) 或enum声明　　　　总之他就是定义你注解能加在那个地方 不然就会报错 他有个RetentionPolicy的枚举属性<br>二.Retention 他是说你注解在那个范围保留1.SOURCE:在源文件中有效（即源文件保留）　　　　2.CLASS:在class文件中有效（即class保留）　　　　3.RUNTIME:在运行时有效（即运行时保留）</p><p><img src="https://img-blog.csdnimg.cn/2019062115433919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>三 ，定义属性 注解类里面的属性是需要加括号的 ；</p><p><img src="https://img-blog.csdnimg.cn/20190621154613468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>我们写一个实体类用反射测试一下</p><p><img src="https://img-blog.csdnimg.cn/2019062115533430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190621160453201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>很简单 都是先获取类或者方法再获取注解<br>下面是动态编译和反射运行的代码 注释很清楚<br>import javax.tools.JavaCompiler;import javax.tools.ToolProvider;import java.io.*;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class main {public static void main(String[] args) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException {<br>&nbsp; String javapath="D:compiler\\javaa.java";//需要保存的文件&nbsp;String path="public class javaa{javaa(){System.out.println(\"构造方法\");}public String test(){return \"测试方法\";}}";//定义java字符串&nbsp;File file = new File(javapath);&nbsp; &nbsp; &nbsp; if(file.exists()){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //保存到文件&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.write(path);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.flush();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter.close();<br>&nbsp; &nbsp; &nbsp; }{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //不存在就创建再保存&nbsp; &nbsp; &nbsp;boolean newFile = file.createNewFile();<br>&nbsp; &nbsp; &nbsp;FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp;BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp;bufferedWriter.write(path);&nbsp; &nbsp; &nbsp;bufferedWriter.flush();&nbsp; &nbsp; &nbsp;fileWriter.close();&nbsp;}<br>JavaCompiler systemJavaCompiler = ToolProvider.getSystemJavaCompiler();//通过java自带的 tools.jar把指定文件编译成class文件&nbsp;int run = systemJavaCompiler.run(null, null, null, javapath);//前几个参数是用来保存编译过程的信息 最后一个是需要编译类的路径&nbsp;if(run==0) {//如果编译成功就通过反射执行<br>&nbsp; &nbsp; &nbsp;URL[] url = new URL[]{new URL("file:/D:compiler/")};//需要执行的类路径<br>&nbsp; &nbsp; &nbsp;Class&lt;?&gt; javaa = new URLClassLoader(url).loadClass("javaa");//获得类加载器&nbsp; &nbsp; &nbsp;Method test = javaa.getDeclaredMethod("test", null);&nbsp; &nbsp; &nbsp;String invoke = (String) test.invoke(javaa.newInstance(), null);&nbsp; &nbsp; &nbsp;System.out.println(invoke);<br>&nbsp;}12345678910111213141516171819202122232425262728293031323334}}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93198309</p>, <p><span>java 8引入了 lambda表达式 他主要用于简化代码 比如我们平时都是使用匿名类来实现一个接口 有了lambda 我们只需要考虑实现接口方法就行了 前提是此接口只能有一个抽象方法 在这里java8&nbsp;</span></p>, 1, 2020-01-29 11:32:18.0, null, 0, 0, 21, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} Result: [46, 2, spring，servlet，springmvc上下文关系, /upload/2020-01/1580269266172.jpeg, <p>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西，反之，不可！WebApplicationContext //Ioc容器对象WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletConfig().getServletContext());————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88838056</p>, <p><span>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西</span></p>, 1, 2020-01-29 11:43:03.0, null, 0, 0, 19, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:48:50 -<==      Total: 9
2021-01-11 16:48:50 -{conn-10001, pstmt-20003, rs-50077} closed
2021-01-11 16:48:50 -{conn-10001, pstmt-20003} clearParameters. 
2021-01-11 16:48:50 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69ae799d]
2021-01-11 16:48:50 -{conn-10001} pool-recycle
2021-01-11 16:48:50 -任务执行
2021-01-11 16:49:00 -batch acquisition of 0 triggers
2021-01-11 16:49:00 -Calling execute on job group.页面左边资源文章排行
2021-01-11 16:49:00 -Creating a new SqlSession
2021-01-11 16:49:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786c4311] was not registered for synchronization because synchronization is not active
2021-01-11 16:49:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:49:00 -{conn-10001} pool-connect
2021-01-11 16:49:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:49:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:49:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:49:00 -{conn-10001, pstmt-20002} Parameters : [1, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
2021-01-11 16:49:00 -{conn-10001, pstmt-20002} executed. 1.1759 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} open
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} Result: [70, 57, 程序员优秀的简历模板, /upload/2021-01/1609926646023.jpeg, null, <p>程序员优秀的简历模板</p>, 1, 2021-01-06 17:52:13.0, null, 0, 1, 94, 99, https://pan.baidu.com/s/1kk2mQAEJ0IMrRrdFCq-UBw, bmt5, 1, 0, 0, 2, 0, null, null, 2]
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:49:00 -<==      Total: 4
2021-01-11 16:49:00 -{conn-10001, pstmt-20002, rs-50078} closed
2021-01-11 16:49:00 -{conn-10001, pstmt-20002} clearParameters. 
2021-01-11 16:49:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786c4311]
2021-01-11 16:49:00 -{conn-10001} pool-recycle
2021-01-11 16:49:00 -Creating a new SqlSession
2021-01-11 16:49:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72942861] was not registered for synchronization because synchronization is not active
2021-01-11 16:49:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:49:00 -{conn-10001} pool-connect
2021-01-11 16:49:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:49:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:49:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:49:00 -{conn-10001, pstmt-20003} Parameters : [1, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003} Types : [INTEGER, INTEGER]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003} executed. 1.2884 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} open
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [44, 2, 自定义基于反射 Scoket jdk动态代理 RPC框架, /upload/2020-01/1580268847693.jpg, <p>使用工具IDEA， Myeclipse编写服务端接口 HelloService</p><p><img src="https://img-blog.csdnimg.cn/20190510114408827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>服务端实现类</p><p><img src="https://img-blog.csdnimg.cn/201905101149147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>编写服务端的调用类package whu;<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;<br>import java.lang.reflect.Method;<br>import java.net.ServerSocket;import java.net.Socket;<br>public class RpcFramework {//注册开始方法public static void export(Object service, Class interfaceClazz, int port) throws Exception {<br>&nbsp; &nbsp; if (service == null) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("service instance == null");&nbsp; &nbsp; }&nbsp; &nbsp; if (port &lt; 0 || port &gt; 65535) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Invalid port " + port);&nbsp; &nbsp; }&nbsp; &nbsp; System.out.println("Export service " + service.getClass().getName() + " on port " + port);&nbsp; &nbsp; //服务端socket&nbsp; &nbsp; ServerSocket server = new ServerSocket(port);&nbsp; &nbsp; //死循环达到不断监听 使用while(true)也一样&nbsp; &nbsp; for (;;) {&nbsp; &nbsp; &nbsp; &nbsp; final Socket socket = server.accept();//阻塞等待客户端连接&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new Thread(new Runnable() {//多线程<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public void run() {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取客户端传来的流对象&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String interfaceName = input.readUTF();//获取客户端传来需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String methodName = input.readUTF();//客户端传来需要调用的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject();//客户端传来需要调用的方法的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object[] arguments = (Object[]) input.readObject();//调用方法的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//返回客户端的留流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断客户端需要调用的接口在服务端是否存在&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!interfaceName.equals(interfaceClazz.getName())) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Interface wrong, export:" + interfaceClazz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " refer:" + interfaceName);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method method = service.getClass().getMethod(methodName, parameterTypes);//通过反射获取服务端的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = method.invoke(service, arguments);//执行服务端方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(result);//返回给客户端&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Throwable t) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(t);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).start();//开启线程&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }}123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960}<br>我这里是直接传入一个对象 你们也可以写一个map用来注册多个对象服务端启动类<br>package whu;<br>public class out {<br>public static void main(String[] args) throws Exception {&nbsp; &nbsp; HelloService service = new HelloServiceImpl();&nbsp; &nbsp; RpcFramework.export(service, HelloService.class, 9000);}1234}<br>客户端调用类<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;<br>import java.net.Socket;<br>public class Rpcfrowd {<br>/**&nbsp;* @param args&nbsp;*/&nbsp;@SuppressWarnings("unchecked")//屏蔽黄线&nbsp;public static &lt;T&gt; T refer(final Class&lt;T&gt; interfaceClass, final String host, final int port) throws Exception {&nbsp; &nbsp; &nbsp;&nbsp;	&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println("Get remote service " + interfaceClass.getName() + " from server " + host + ":" + port);&nbsp; &nbsp; &nbsp; &nbsp; return (T) Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class&lt;?&gt;[] { interfaceClass },&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InvocationHandler() {//jdk 动态代理&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated method stub&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Socket socket = new Socket(host, port);//建立客户端socket 传入服务端ip 和端口&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("socket通过");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//向服务端写入流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(interfaceClass.getName());//需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(method.getName());//需要调用的方法名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(method.getParameterTypes());//需要调用的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(args);//需要调用的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("发送成功");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());//接收服务端的返回信息<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = input.readObject();//接收服务端的返回信息&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("接收成功"+result);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result instanceof Throwable) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw (Throwable) result;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result;//返回&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930313233343536373839404142434445464748}注意第一个return是返回 生成的代理类对象 第二个是返回调用方法的返回值<br>客户端启动类import whu.HelloService;<br>public class clid {<br>public static void main(String[] args) throws Exception {	HelloService&nbsp; service = (HelloService)Rpcfrowd.refer(Class.forName("whu.HelloService"), "127.0.0.1", 9000);&nbsp; &nbsp; String result = service.hello("rod---");&nbsp; &nbsp; System.out.println(result);}12345}<br>运行服务端启动类————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href="https://blog.csdn.net/qq_28422443/article/details/90055742" rel="nofollow">https://blog.csdn.net/qq_28422443/article/details/90055742</a> </p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121656921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>运行客户端启动类</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121747406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>简单的rpc远程调用就实现了 这里提一下服务端需要接口和实现类 客户端只需要接口就行</p>, <p>使用工具IDEA， Myeclipse</p><p>编写服务端接口 HelloService</p>, 1, 2020-01-29 11:35:34.0, null, 0, 1, 192, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [45, 2, springboot对应springcloud的版本, /upload/2020-01/1580269227935.jpg, <p>Spring Boot	Spring Cloud<br>1.2.x	Angel版本1.3.x	Brixton版本1.4.x	Camden版本1.5.x Dalston版本、Edgware版本2.0.x Finchley版本————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88871861</p>, <p><span>Spring Boot	Spring Cloud</span></p>, 1, 2020-01-29 11:40:44.0, null, 0, 0, 187, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [47, 2, spring ioc/aop的理解, /upload/2020-01/1580269895723.jpg, <p>开发普通的spring程序需要6个jar<br>我们去官方下载了 spring的提供的jar文件</p><p><img src="https://img-blog.csdnimg.cn/20190310142615174.png" alt="è§£åå"></p><p>点击打开里面libs目录找以下jarspring-aop-3.2.4.RELEASE.jarspring-beans-3.2.4.RELEASE.jarspring-context-3.2.4.RELEASE.jarspring-core-3.2.4.RELEASE.jarspring-expression-3.2.4.RELEASE.jar还需要一个日志包 spring框架底层使用了他 不然ioc不能实例化commons-logging-1.1.1.jar<br>我们把相应的jar 导入项目并加入类路径</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/2019031014313356.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>我这里实现了aop 多了4个jar 后面再讲先不用管项目要求 通过指定id查询学生首先我们建一个student的pojo</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190310144303595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å­¦çidï¼nameï¼age"></p><p>然后建立dao层接口</p>, <p><span>开发普通的spring程序需要6个jar</span><br><span>我们去官方下载了 spring的提供的jar文件</span></p>, 1, 2020-01-29 11:52:44.0, null, 0, 1, 104, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [65, 2, Linux下安装Nginx,Jdk,Tomcat, /upload/2021-01/1609723629239.jpg, <p><span style="font-size: 20px;"><strong>一 nginx 安装&nbsp;</strong></span></p><p>安装环境:&nbsp;</p><p>yum install gcc-c++&nbsp;</p><p>yum install -y pcre pcre-devel</p><p>yum install -y zlib zlib-devel&nbsp;</p><p>yum install -y openssl openssl-devel&nbsp;</p><ol style="list-style-type: decimal;"><li><p>下载 nginx-1.11.0.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p></li><li><p>解压安装&nbsp;</p><p># cd /soft&nbsp;</p><p># tar -zxvf nginx-1.11.0.tar.gz&nbsp;</p><p>#./configure --prefix=/usr/nginx --with-http_ssl_module --with-http_stub_status_module - -with-pcre&nbsp;</p><p># make &amp;&amp; make install&nbsp;&nbsp;</p></li></ol><p>&nbsp; 3.安装完毕&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动 nginx&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;# /user/nginx/sbin/nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 关闭 nginx</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# pkill -9 nginx</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;或者&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ps -ef|grep nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # kill -9 进程号&nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4.nginx 配置&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # cd /usr/nginx/conf</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi nginx.conf&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;listen&nbsp;&nbsp; 80;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server_name&nbsp;&nbsp; www.abcd.com abcd.com;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;location / {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index&nbsp;&nbsp; index.html index.htm;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p><br></p><p><span style="font-size: 20px;"><strong>二 jdk 安装&nbsp;</strong></span></p><p>&nbsp;1.下载 jdk-7u45-linux-x64.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录&nbsp;下&nbsp;</p><p>&nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cd /soft&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tar -zxvf jdk-7u45-linux-x64.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# mv jdk1.7.0_45 /usr/</p><p>&nbsp;3. 配置环境变量</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi /etc/profile&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 编辑,在最后添加下面的内容&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JAVA_HOME=/usr/jdk1.7.0_45&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JRE_HOME=/usr/jdk1.7.0_45/jre&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib 保存退出，</p><p>&nbsp; &nbsp; &nbsp; 然后输入下面的命令使之生效&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; # source /etc/profile&nbsp;</p><p>4.&nbsp;&nbsp; 测试&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;# java -version&nbsp;出现如下表示安装成功&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;java version "1.7.0_45"&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</p><p><br></p><p><span style="font-size: 20px;">三 tomcat 安装</span></p><p>&nbsp; &nbsp;1.下载 apache-tomcat-7.0.53.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p><p>&nbsp; &nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /soft&nbsp;# tar -zxvf apache-tomcat-7.0.53.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# mv apache-tomcat-7.0.53 /usr/&nbsp;</p><p>&nbsp; 3. 修改端口&nbsp;</p><p>&nbsp; &nbsp; &lt;Connector port="80" protocol="HTTP/1.1"&nbsp;URIEncoding="UTF-8"&nbsp;redirectPort="8443" /&gt;&nbsp;</p><p>&nbsp; &nbsp; 注:根据实际需要设置 tomcat 的端口&nbsp;</p><p>&nbsp; 4. tomcat 启动&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /usr/tomcat7/bin/&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# ./startup.sh &amp;&nbsp;</p><p>&nbsp; &nbsp; # tail -f ../logs/catalina.out&nbsp;</p><p>&nbsp; &nbsp;5.tomcat 关闭&nbsp;</p><p>&nbsp; &nbsp; # ps -ef|grep tomcat&nbsp;</p><p>&nbsp; &nbsp; # kill -9 进程号</p>, <p>本文讲解如何在linux下安装Nginx、Jdk、Tomcat</p>, 1, 2021-01-04 09:27:12.0, null, 0, 0, 70, 1, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [42, 2, java8 lambda表达式 函数式编程, /upload/2020-01/1580268632163.jpg, <p>注解的表面意思和接口差不多 只定义没有实际作用定义注解的语法是（@interface 注解名{}）自定义注解还需要添加系统提供的元注解1.@Target,2.@Retention,3.@Documented,4.@Inherited<br>一 .查看源码得知Target 有一个ElementType的枚举属性，他的作用是定义注解的范围</p><p><img src="https://img-blog.csdnimg.cn/20190621153751114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>&nbsp;1.CONSTRUCTOR:用于描述构造器　　　　2.FIELD:用于描述域　　　　3.LOCAL_VARIABLE:用于描述局部变量　　　　4.METHOD:用于描述方法　　　　5.PACKAGE:用于描述包　　　　6.PARAMETER:用于描述参数　　　　7.TYPE:用于描述类、接口(包括注解类型) 或enum声明　　　　总之他就是定义你注解能加在那个地方 不然就会报错 他有个RetentionPolicy的枚举属性<br>二.Retention 他是说你注解在那个范围保留1.SOURCE:在源文件中有效（即源文件保留）　　　　2.CLASS:在class文件中有效（即class保留）　　　　3.RUNTIME:在运行时有效（即运行时保留）</p><p><img src="https://img-blog.csdnimg.cn/2019062115433919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>三 ，定义属性 注解类里面的属性是需要加括号的 ；</p><p><img src="https://img-blog.csdnimg.cn/20190621154613468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>我们写一个实体类用反射测试一下</p><p><img src="https://img-blog.csdnimg.cn/2019062115533430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190621160453201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>很简单 都是先获取类或者方法再获取注解<br>下面是动态编译和反射运行的代码 注释很清楚<br>import javax.tools.JavaCompiler;import javax.tools.ToolProvider;import java.io.*;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class main {public static void main(String[] args) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException {<br>&nbsp; String javapath="D:compiler\\javaa.java";//需要保存的文件&nbsp;String path="public class javaa{javaa(){System.out.println(\"构造方法\");}public String test(){return \"测试方法\";}}";//定义java字符串&nbsp;File file = new File(javapath);&nbsp; &nbsp; &nbsp; if(file.exists()){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //保存到文件&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.write(path);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.flush();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter.close();<br>&nbsp; &nbsp; &nbsp; }{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //不存在就创建再保存&nbsp; &nbsp; &nbsp;boolean newFile = file.createNewFile();<br>&nbsp; &nbsp; &nbsp;FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp;BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp;bufferedWriter.write(path);&nbsp; &nbsp; &nbsp;bufferedWriter.flush();&nbsp; &nbsp; &nbsp;fileWriter.close();&nbsp;}<br>JavaCompiler systemJavaCompiler = ToolProvider.getSystemJavaCompiler();//通过java自带的 tools.jar把指定文件编译成class文件&nbsp;int run = systemJavaCompiler.run(null, null, null, javapath);//前几个参数是用来保存编译过程的信息 最后一个是需要编译类的路径&nbsp;if(run==0) {//如果编译成功就通过反射执行<br>&nbsp; &nbsp; &nbsp;URL[] url = new URL[]{new URL("file:/D:compiler/")};//需要执行的类路径<br>&nbsp; &nbsp; &nbsp;Class&lt;?&gt; javaa = new URLClassLoader(url).loadClass("javaa");//获得类加载器&nbsp; &nbsp; &nbsp;Method test = javaa.getDeclaredMethod("test", null);&nbsp; &nbsp; &nbsp;String invoke = (String) test.invoke(javaa.newInstance(), null);&nbsp; &nbsp; &nbsp;System.out.println(invoke);<br>&nbsp;}12345678910111213141516171819202122232425262728293031323334}}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93198309</p>, <p><span>java 8引入了 lambda表达式 他主要用于简化代码 比如我们平时都是使用匿名类来实现一个接口 有了lambda 我们只需要考虑实现接口方法就行了 前提是此接口只能有一个抽象方法 在这里java8&nbsp;</span></p>, 1, 2020-01-29 11:32:18.0, null, 0, 0, 21, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} Result: [46, 2, spring，servlet，springmvc上下文关系, /upload/2020-01/1580269266172.jpeg, <p>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西，反之，不可！WebApplicationContext //Ioc容器对象WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletConfig().getServletContext());————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88838056</p>, <p><span>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西</span></p>, 1, 2020-01-29 11:43:03.0, null, 0, 0, 19, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:00 -<==      Total: 9
2021-01-11 16:49:00 -{conn-10001, pstmt-20003, rs-50079} closed
2021-01-11 16:49:00 -{conn-10001, pstmt-20003} clearParameters. 
2021-01-11 16:49:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72942861]
2021-01-11 16:49:00 -{conn-10001} pool-recycle
2021-01-11 16:49:00 -任务执行
2021-01-11 16:49:28 -batch acquisition of 1 triggers
2021-01-11 16:49:40 -Executing session validation...
2021-01-11 16:49:40 -Validating all active sessions...
2021-01-11 16:49:40 -Finished session validation.  No sessions were stopped.
2021-01-11 16:49:40 -Session validation completed successfully in 0 milliseconds.
2021-01-11 16:49:50 -Calling execute on job group.页面左边资源文章排行
2021-01-11 16:49:50 -batch acquisition of 1 triggers
2021-01-11 16:49:50 -Creating a new SqlSession
2021-01-11 16:49:50 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c89832] was not registered for synchronization because synchronization is not active
2021-01-11 16:49:50 -Fetching JDBC Connection from DataSource
2021-01-11 16:49:50 -{conn-10001} pool-connect
2021-01-11 16:49:50 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:49:50 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:49:50 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:49:50 -{conn-10001, pstmt-20002} Parameters : [1, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
2021-01-11 16:49:50 -{conn-10001, pstmt-20002} executed. 1.042 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} open
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} Result: [70, 57, 程序员优秀的简历模板, /upload/2021-01/1609926646023.jpeg, null, <p>程序员优秀的简历模板</p>, 1, 2021-01-06 17:52:13.0, null, 0, 1, 94, 99, https://pan.baidu.com/s/1kk2mQAEJ0IMrRrdFCq-UBw, bmt5, 1, 0, 0, 2, 0, null, null, 2]
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:49:50 -<==      Total: 4
2021-01-11 16:49:50 -{conn-10001, pstmt-20002, rs-50080} closed
2021-01-11 16:49:50 -{conn-10001, pstmt-20002} clearParameters. 
2021-01-11 16:49:50 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13c89832]
2021-01-11 16:49:50 -{conn-10001} pool-recycle
2021-01-11 16:49:50 -Creating a new SqlSession
2021-01-11 16:49:50 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1930f342] was not registered for synchronization because synchronization is not active
2021-01-11 16:49:50 -Fetching JDBC Connection from DataSource
2021-01-11 16:49:50 -{conn-10001} pool-connect
2021-01-11 16:49:50 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:49:50 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:49:50 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:49:50 -{conn-10001, pstmt-20003} Parameters : [1, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003} Types : [INTEGER, INTEGER]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003} executed. 1.4921 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} open
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [44, 2, 自定义基于反射 Scoket jdk动态代理 RPC框架, /upload/2020-01/1580268847693.jpg, <p>使用工具IDEA， Myeclipse编写服务端接口 HelloService</p><p><img src="https://img-blog.csdnimg.cn/20190510114408827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>服务端实现类</p><p><img src="https://img-blog.csdnimg.cn/201905101149147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>编写服务端的调用类package whu;<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;<br>import java.lang.reflect.Method;<br>import java.net.ServerSocket;import java.net.Socket;<br>public class RpcFramework {//注册开始方法public static void export(Object service, Class interfaceClazz, int port) throws Exception {<br>&nbsp; &nbsp; if (service == null) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("service instance == null");&nbsp; &nbsp; }&nbsp; &nbsp; if (port &lt; 0 || port &gt; 65535) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Invalid port " + port);&nbsp; &nbsp; }&nbsp; &nbsp; System.out.println("Export service " + service.getClass().getName() + " on port " + port);&nbsp; &nbsp; //服务端socket&nbsp; &nbsp; ServerSocket server = new ServerSocket(port);&nbsp; &nbsp; //死循环达到不断监听 使用while(true)也一样&nbsp; &nbsp; for (;;) {&nbsp; &nbsp; &nbsp; &nbsp; final Socket socket = server.accept();//阻塞等待客户端连接&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new Thread(new Runnable() {//多线程<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public void run() {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取客户端传来的流对象&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String interfaceName = input.readUTF();//获取客户端传来需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String methodName = input.readUTF();//客户端传来需要调用的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject();//客户端传来需要调用的方法的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object[] arguments = (Object[]) input.readObject();//调用方法的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//返回客户端的留流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断客户端需要调用的接口在服务端是否存在&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!interfaceName.equals(interfaceClazz.getName())) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Interface wrong, export:" + interfaceClazz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " refer:" + interfaceName);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method method = service.getClass().getMethod(methodName, parameterTypes);//通过反射获取服务端的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = method.invoke(service, arguments);//执行服务端方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(result);//返回给客户端&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Throwable t) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(t);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).start();//开启线程&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }}123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960}<br>我这里是直接传入一个对象 你们也可以写一个map用来注册多个对象服务端启动类<br>package whu;<br>public class out {<br>public static void main(String[] args) throws Exception {&nbsp; &nbsp; HelloService service = new HelloServiceImpl();&nbsp; &nbsp; RpcFramework.export(service, HelloService.class, 9000);}1234}<br>客户端调用类<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;<br>import java.net.Socket;<br>public class Rpcfrowd {<br>/**&nbsp;* @param args&nbsp;*/&nbsp;@SuppressWarnings("unchecked")//屏蔽黄线&nbsp;public static &lt;T&gt; T refer(final Class&lt;T&gt; interfaceClass, final String host, final int port) throws Exception {&nbsp; &nbsp; &nbsp;&nbsp;	&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println("Get remote service " + interfaceClass.getName() + " from server " + host + ":" + port);&nbsp; &nbsp; &nbsp; &nbsp; return (T) Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class&lt;?&gt;[] { interfaceClass },&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InvocationHandler() {//jdk 动态代理&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated method stub&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Socket socket = new Socket(host, port);//建立客户端socket 传入服务端ip 和端口&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("socket通过");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//向服务端写入流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(interfaceClass.getName());//需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(method.getName());//需要调用的方法名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(method.getParameterTypes());//需要调用的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(args);//需要调用的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("发送成功");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());//接收服务端的返回信息<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = input.readObject();//接收服务端的返回信息&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("接收成功"+result);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result instanceof Throwable) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw (Throwable) result;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result;//返回&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930313233343536373839404142434445464748}注意第一个return是返回 生成的代理类对象 第二个是返回调用方法的返回值<br>客户端启动类import whu.HelloService;<br>public class clid {<br>public static void main(String[] args) throws Exception {	HelloService&nbsp; service = (HelloService)Rpcfrowd.refer(Class.forName("whu.HelloService"), "127.0.0.1", 9000);&nbsp; &nbsp; String result = service.hello("rod---");&nbsp; &nbsp; System.out.println(result);}12345}<br>运行服务端启动类————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href="https://blog.csdn.net/qq_28422443/article/details/90055742" rel="nofollow">https://blog.csdn.net/qq_28422443/article/details/90055742</a> </p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121656921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>运行客户端启动类</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121747406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>简单的rpc远程调用就实现了 这里提一下服务端需要接口和实现类 客户端只需要接口就行</p>, <p>使用工具IDEA， Myeclipse</p><p>编写服务端接口 HelloService</p>, 1, 2020-01-29 11:35:34.0, null, 0, 1, 192, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [45, 2, springboot对应springcloud的版本, /upload/2020-01/1580269227935.jpg, <p>Spring Boot	Spring Cloud<br>1.2.x	Angel版本1.3.x	Brixton版本1.4.x	Camden版本1.5.x Dalston版本、Edgware版本2.0.x Finchley版本————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88871861</p>, <p><span>Spring Boot	Spring Cloud</span></p>, 1, 2020-01-29 11:40:44.0, null, 0, 0, 187, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [47, 2, spring ioc/aop的理解, /upload/2020-01/1580269895723.jpg, <p>开发普通的spring程序需要6个jar<br>我们去官方下载了 spring的提供的jar文件</p><p><img src="https://img-blog.csdnimg.cn/20190310142615174.png" alt="è§£åå"></p><p>点击打开里面libs目录找以下jarspring-aop-3.2.4.RELEASE.jarspring-beans-3.2.4.RELEASE.jarspring-context-3.2.4.RELEASE.jarspring-core-3.2.4.RELEASE.jarspring-expression-3.2.4.RELEASE.jar还需要一个日志包 spring框架底层使用了他 不然ioc不能实例化commons-logging-1.1.1.jar<br>我们把相应的jar 导入项目并加入类路径</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/2019031014313356.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>我这里实现了aop 多了4个jar 后面再讲先不用管项目要求 通过指定id查询学生首先我们建一个student的pojo</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190310144303595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å­¦çidï¼nameï¼age"></p><p>然后建立dao层接口</p>, <p><span>开发普通的spring程序需要6个jar</span><br><span>我们去官方下载了 spring的提供的jar文件</span></p>, 1, 2020-01-29 11:52:44.0, null, 0, 1, 104, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [65, 2, Linux下安装Nginx,Jdk,Tomcat, /upload/2021-01/1609723629239.jpg, <p><span style="font-size: 20px;"><strong>一 nginx 安装&nbsp;</strong></span></p><p>安装环境:&nbsp;</p><p>yum install gcc-c++&nbsp;</p><p>yum install -y pcre pcre-devel</p><p>yum install -y zlib zlib-devel&nbsp;</p><p>yum install -y openssl openssl-devel&nbsp;</p><ol style="list-style-type: decimal;"><li><p>下载 nginx-1.11.0.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p></li><li><p>解压安装&nbsp;</p><p># cd /soft&nbsp;</p><p># tar -zxvf nginx-1.11.0.tar.gz&nbsp;</p><p>#./configure --prefix=/usr/nginx --with-http_ssl_module --with-http_stub_status_module - -with-pcre&nbsp;</p><p># make &amp;&amp; make install&nbsp;&nbsp;</p></li></ol><p>&nbsp; 3.安装完毕&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动 nginx&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;# /user/nginx/sbin/nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 关闭 nginx</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# pkill -9 nginx</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;或者&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ps -ef|grep nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # kill -9 进程号&nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4.nginx 配置&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # cd /usr/nginx/conf</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi nginx.conf&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;listen&nbsp;&nbsp; 80;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server_name&nbsp;&nbsp; www.abcd.com abcd.com;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;location / {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index&nbsp;&nbsp; index.html index.htm;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p><br></p><p><span style="font-size: 20px;"><strong>二 jdk 安装&nbsp;</strong></span></p><p>&nbsp;1.下载 jdk-7u45-linux-x64.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录&nbsp;下&nbsp;</p><p>&nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cd /soft&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tar -zxvf jdk-7u45-linux-x64.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# mv jdk1.7.0_45 /usr/</p><p>&nbsp;3. 配置环境变量</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi /etc/profile&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 编辑,在最后添加下面的内容&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JAVA_HOME=/usr/jdk1.7.0_45&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JRE_HOME=/usr/jdk1.7.0_45/jre&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib 保存退出，</p><p>&nbsp; &nbsp; &nbsp; 然后输入下面的命令使之生效&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; # source /etc/profile&nbsp;</p><p>4.&nbsp;&nbsp; 测试&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;# java -version&nbsp;出现如下表示安装成功&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;java version "1.7.0_45"&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</p><p><br></p><p><span style="font-size: 20px;">三 tomcat 安装</span></p><p>&nbsp; &nbsp;1.下载 apache-tomcat-7.0.53.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p><p>&nbsp; &nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /soft&nbsp;# tar -zxvf apache-tomcat-7.0.53.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# mv apache-tomcat-7.0.53 /usr/&nbsp;</p><p>&nbsp; 3. 修改端口&nbsp;</p><p>&nbsp; &nbsp; &lt;Connector port="80" protocol="HTTP/1.1"&nbsp;URIEncoding="UTF-8"&nbsp;redirectPort="8443" /&gt;&nbsp;</p><p>&nbsp; &nbsp; 注:根据实际需要设置 tomcat 的端口&nbsp;</p><p>&nbsp; 4. tomcat 启动&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /usr/tomcat7/bin/&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# ./startup.sh &amp;&nbsp;</p><p>&nbsp; &nbsp; # tail -f ../logs/catalina.out&nbsp;</p><p>&nbsp; &nbsp;5.tomcat 关闭&nbsp;</p><p>&nbsp; &nbsp; # ps -ef|grep tomcat&nbsp;</p><p>&nbsp; &nbsp; # kill -9 进程号</p>, <p>本文讲解如何在linux下安装Nginx、Jdk、Tomcat</p>, 1, 2021-01-04 09:27:12.0, null, 0, 0, 70, 1, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [42, 2, java8 lambda表达式 函数式编程, /upload/2020-01/1580268632163.jpg, <p>注解的表面意思和接口差不多 只定义没有实际作用定义注解的语法是（@interface 注解名{}）自定义注解还需要添加系统提供的元注解1.@Target,2.@Retention,3.@Documented,4.@Inherited<br>一 .查看源码得知Target 有一个ElementType的枚举属性，他的作用是定义注解的范围</p><p><img src="https://img-blog.csdnimg.cn/20190621153751114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>&nbsp;1.CONSTRUCTOR:用于描述构造器　　　　2.FIELD:用于描述域　　　　3.LOCAL_VARIABLE:用于描述局部变量　　　　4.METHOD:用于描述方法　　　　5.PACKAGE:用于描述包　　　　6.PARAMETER:用于描述参数　　　　7.TYPE:用于描述类、接口(包括注解类型) 或enum声明　　　　总之他就是定义你注解能加在那个地方 不然就会报错 他有个RetentionPolicy的枚举属性<br>二.Retention 他是说你注解在那个范围保留1.SOURCE:在源文件中有效（即源文件保留）　　　　2.CLASS:在class文件中有效（即class保留）　　　　3.RUNTIME:在运行时有效（即运行时保留）</p><p><img src="https://img-blog.csdnimg.cn/2019062115433919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>三 ，定义属性 注解类里面的属性是需要加括号的 ；</p><p><img src="https://img-blog.csdnimg.cn/20190621154613468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>我们写一个实体类用反射测试一下</p><p><img src="https://img-blog.csdnimg.cn/2019062115533430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190621160453201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>很简单 都是先获取类或者方法再获取注解<br>下面是动态编译和反射运行的代码 注释很清楚<br>import javax.tools.JavaCompiler;import javax.tools.ToolProvider;import java.io.*;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class main {public static void main(String[] args) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException {<br>&nbsp; String javapath="D:compiler\\javaa.java";//需要保存的文件&nbsp;String path="public class javaa{javaa(){System.out.println(\"构造方法\");}public String test(){return \"测试方法\";}}";//定义java字符串&nbsp;File file = new File(javapath);&nbsp; &nbsp; &nbsp; if(file.exists()){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //保存到文件&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.write(path);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.flush();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter.close();<br>&nbsp; &nbsp; &nbsp; }{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //不存在就创建再保存&nbsp; &nbsp; &nbsp;boolean newFile = file.createNewFile();<br>&nbsp; &nbsp; &nbsp;FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp;BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp;bufferedWriter.write(path);&nbsp; &nbsp; &nbsp;bufferedWriter.flush();&nbsp; &nbsp; &nbsp;fileWriter.close();&nbsp;}<br>JavaCompiler systemJavaCompiler = ToolProvider.getSystemJavaCompiler();//通过java自带的 tools.jar把指定文件编译成class文件&nbsp;int run = systemJavaCompiler.run(null, null, null, javapath);//前几个参数是用来保存编译过程的信息 最后一个是需要编译类的路径&nbsp;if(run==0) {//如果编译成功就通过反射执行<br>&nbsp; &nbsp; &nbsp;URL[] url = new URL[]{new URL("file:/D:compiler/")};//需要执行的类路径<br>&nbsp; &nbsp; &nbsp;Class&lt;?&gt; javaa = new URLClassLoader(url).loadClass("javaa");//获得类加载器&nbsp; &nbsp; &nbsp;Method test = javaa.getDeclaredMethod("test", null);&nbsp; &nbsp; &nbsp;String invoke = (String) test.invoke(javaa.newInstance(), null);&nbsp; &nbsp; &nbsp;System.out.println(invoke);<br>&nbsp;}12345678910111213141516171819202122232425262728293031323334}}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93198309</p>, <p><span>java 8引入了 lambda表达式 他主要用于简化代码 比如我们平时都是使用匿名类来实现一个接口 有了lambda 我们只需要考虑实现接口方法就行了 前提是此接口只能有一个抽象方法 在这里java8&nbsp;</span></p>, 1, 2020-01-29 11:32:18.0, null, 0, 0, 21, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} Result: [46, 2, spring，servlet，springmvc上下文关系, /upload/2020-01/1580269266172.jpeg, <p>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西，反之，不可！WebApplicationContext //Ioc容器对象WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletConfig().getServletContext());————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88838056</p>, <p><span>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西</span></p>, 1, 2020-01-29 11:43:03.0, null, 0, 0, 19, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:49:50 -<==      Total: 9
2021-01-11 16:49:50 -{conn-10001, pstmt-20003, rs-50081} closed
2021-01-11 16:49:50 -{conn-10001, pstmt-20003} clearParameters. 
2021-01-11 16:49:50 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1930f342]
2021-01-11 16:49:50 -{conn-10001} pool-recycle
2021-01-11 16:49:50 -任务执行
2021-01-11 16:50:00 -batch acquisition of 0 triggers
2021-01-11 16:50:00 -Calling execute on job group.页面左边资源文章排行
2021-01-11 16:50:00 -Creating a new SqlSession
2021-01-11 16:50:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc1b8a2] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:00 -{conn-10001} pool-connect
2021-01-11 16:50:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:50:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:50:00 -{conn-10001, pstmt-20002} Parameters : [1, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
2021-01-11 16:50:00 -{conn-10001, pstmt-20002} executed. 1.3066 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} open
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} Result: [70, 57, 程序员优秀的简历模板, /upload/2021-01/1609926646023.jpeg, null, <p>程序员优秀的简历模板</p>, 1, 2021-01-06 17:52:13.0, null, 0, 1, 94, 99, https://pan.baidu.com/s/1kk2mQAEJ0IMrRrdFCq-UBw, bmt5, 1, 0, 0, 2, 0, null, null, 2]
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:50:00 -<==      Total: 4
2021-01-11 16:50:00 -{conn-10001, pstmt-20002, rs-50082} closed
2021-01-11 16:50:00 -{conn-10001, pstmt-20002} clearParameters. 
2021-01-11 16:50:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc1b8a2]
2021-01-11 16:50:00 -{conn-10001} pool-recycle
2021-01-11 16:50:00 -Creating a new SqlSession
2021-01-11 16:50:00 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@139d3d2] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:00 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:00 -{conn-10001} pool-connect
2021-01-11 16:50:00 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:00 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:50:00 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:50:00 -{conn-10001, pstmt-20003} Parameters : [1, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003} Types : [INTEGER, INTEGER]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003} executed. 1.1353 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} open
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [44, 2, 自定义基于反射 Scoket jdk动态代理 RPC框架, /upload/2020-01/1580268847693.jpg, <p>使用工具IDEA， Myeclipse编写服务端接口 HelloService</p><p><img src="https://img-blog.csdnimg.cn/20190510114408827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>服务端实现类</p><p><img src="https://img-blog.csdnimg.cn/201905101149147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>编写服务端的调用类package whu;<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;<br>import java.lang.reflect.Method;<br>import java.net.ServerSocket;import java.net.Socket;<br>public class RpcFramework {//注册开始方法public static void export(Object service, Class interfaceClazz, int port) throws Exception {<br>&nbsp; &nbsp; if (service == null) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("service instance == null");&nbsp; &nbsp; }&nbsp; &nbsp; if (port &lt; 0 || port &gt; 65535) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Invalid port " + port);&nbsp; &nbsp; }&nbsp; &nbsp; System.out.println("Export service " + service.getClass().getName() + " on port " + port);&nbsp; &nbsp; //服务端socket&nbsp; &nbsp; ServerSocket server = new ServerSocket(port);&nbsp; &nbsp; //死循环达到不断监听 使用while(true)也一样&nbsp; &nbsp; for (;;) {&nbsp; &nbsp; &nbsp; &nbsp; final Socket socket = server.accept();//阻塞等待客户端连接&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new Thread(new Runnable() {//多线程<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public void run() {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取客户端传来的流对象&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String interfaceName = input.readUTF();//获取客户端传来需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String methodName = input.readUTF();//客户端传来需要调用的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject();//客户端传来需要调用的方法的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object[] arguments = (Object[]) input.readObject();//调用方法的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//返回客户端的留流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断客户端需要调用的接口在服务端是否存在&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!interfaceName.equals(interfaceClazz.getName())) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Interface wrong, export:" + interfaceClazz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " refer:" + interfaceName);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method method = service.getClass().getMethod(methodName, parameterTypes);//通过反射获取服务端的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = method.invoke(service, arguments);//执行服务端方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(result);//返回给客户端&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Throwable t) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(t);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).start();//开启线程&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }}123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960}<br>我这里是直接传入一个对象 你们也可以写一个map用来注册多个对象服务端启动类<br>package whu;<br>public class out {<br>public static void main(String[] args) throws Exception {&nbsp; &nbsp; HelloService service = new HelloServiceImpl();&nbsp; &nbsp; RpcFramework.export(service, HelloService.class, 9000);}1234}<br>客户端调用类<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;<br>import java.net.Socket;<br>public class Rpcfrowd {<br>/**&nbsp;* @param args&nbsp;*/&nbsp;@SuppressWarnings("unchecked")//屏蔽黄线&nbsp;public static &lt;T&gt; T refer(final Class&lt;T&gt; interfaceClass, final String host, final int port) throws Exception {&nbsp; &nbsp; &nbsp;&nbsp;	&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println("Get remote service " + interfaceClass.getName() + " from server " + host + ":" + port);&nbsp; &nbsp; &nbsp; &nbsp; return (T) Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class&lt;?&gt;[] { interfaceClass },&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InvocationHandler() {//jdk 动态代理&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated method stub&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Socket socket = new Socket(host, port);//建立客户端socket 传入服务端ip 和端口&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("socket通过");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//向服务端写入流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(interfaceClass.getName());//需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(method.getName());//需要调用的方法名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(method.getParameterTypes());//需要调用的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(args);//需要调用的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("发送成功");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());//接收服务端的返回信息<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = input.readObject();//接收服务端的返回信息&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("接收成功"+result);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result instanceof Throwable) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw (Throwable) result;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result;//返回&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930313233343536373839404142434445464748}注意第一个return是返回 生成的代理类对象 第二个是返回调用方法的返回值<br>客户端启动类import whu.HelloService;<br>public class clid {<br>public static void main(String[] args) throws Exception {	HelloService&nbsp; service = (HelloService)Rpcfrowd.refer(Class.forName("whu.HelloService"), "127.0.0.1", 9000);&nbsp; &nbsp; String result = service.hello("rod---");&nbsp; &nbsp; System.out.println(result);}12345}<br>运行服务端启动类————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href="https://blog.csdn.net/qq_28422443/article/details/90055742" rel="nofollow">https://blog.csdn.net/qq_28422443/article/details/90055742</a> </p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121656921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>运行客户端启动类</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121747406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>简单的rpc远程调用就实现了 这里提一下服务端需要接口和实现类 客户端只需要接口就行</p>, <p>使用工具IDEA， Myeclipse</p><p>编写服务端接口 HelloService</p>, 1, 2020-01-29 11:35:34.0, null, 0, 1, 192, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [45, 2, springboot对应springcloud的版本, /upload/2020-01/1580269227935.jpg, <p>Spring Boot	Spring Cloud<br>1.2.x	Angel版本1.3.x	Brixton版本1.4.x	Camden版本1.5.x Dalston版本、Edgware版本2.0.x Finchley版本————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88871861</p>, <p><span>Spring Boot	Spring Cloud</span></p>, 1, 2020-01-29 11:40:44.0, null, 0, 0, 187, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [47, 2, spring ioc/aop的理解, /upload/2020-01/1580269895723.jpg, <p>开发普通的spring程序需要6个jar<br>我们去官方下载了 spring的提供的jar文件</p><p><img src="https://img-blog.csdnimg.cn/20190310142615174.png" alt="è§£åå"></p><p>点击打开里面libs目录找以下jarspring-aop-3.2.4.RELEASE.jarspring-beans-3.2.4.RELEASE.jarspring-context-3.2.4.RELEASE.jarspring-core-3.2.4.RELEASE.jarspring-expression-3.2.4.RELEASE.jar还需要一个日志包 spring框架底层使用了他 不然ioc不能实例化commons-logging-1.1.1.jar<br>我们把相应的jar 导入项目并加入类路径</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/2019031014313356.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>我这里实现了aop 多了4个jar 后面再讲先不用管项目要求 通过指定id查询学生首先我们建一个student的pojo</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190310144303595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å­¦çidï¼nameï¼age"></p><p>然后建立dao层接口</p>, <p><span>开发普通的spring程序需要6个jar</span><br><span>我们去官方下载了 spring的提供的jar文件</span></p>, 1, 2020-01-29 11:52:44.0, null, 0, 1, 104, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [65, 2, Linux下安装Nginx,Jdk,Tomcat, /upload/2021-01/1609723629239.jpg, <p><span style="font-size: 20px;"><strong>一 nginx 安装&nbsp;</strong></span></p><p>安装环境:&nbsp;</p><p>yum install gcc-c++&nbsp;</p><p>yum install -y pcre pcre-devel</p><p>yum install -y zlib zlib-devel&nbsp;</p><p>yum install -y openssl openssl-devel&nbsp;</p><ol style="list-style-type: decimal;"><li><p>下载 nginx-1.11.0.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p></li><li><p>解压安装&nbsp;</p><p># cd /soft&nbsp;</p><p># tar -zxvf nginx-1.11.0.tar.gz&nbsp;</p><p>#./configure --prefix=/usr/nginx --with-http_ssl_module --with-http_stub_status_module - -with-pcre&nbsp;</p><p># make &amp;&amp; make install&nbsp;&nbsp;</p></li></ol><p>&nbsp; 3.安装完毕&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动 nginx&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;# /user/nginx/sbin/nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 关闭 nginx</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# pkill -9 nginx</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;或者&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ps -ef|grep nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # kill -9 进程号&nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4.nginx 配置&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # cd /usr/nginx/conf</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi nginx.conf&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;listen&nbsp;&nbsp; 80;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server_name&nbsp;&nbsp; www.abcd.com abcd.com;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;location / {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index&nbsp;&nbsp; index.html index.htm;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p><br></p><p><span style="font-size: 20px;"><strong>二 jdk 安装&nbsp;</strong></span></p><p>&nbsp;1.下载 jdk-7u45-linux-x64.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录&nbsp;下&nbsp;</p><p>&nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cd /soft&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tar -zxvf jdk-7u45-linux-x64.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# mv jdk1.7.0_45 /usr/</p><p>&nbsp;3. 配置环境变量</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi /etc/profile&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 编辑,在最后添加下面的内容&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JAVA_HOME=/usr/jdk1.7.0_45&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JRE_HOME=/usr/jdk1.7.0_45/jre&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib 保存退出，</p><p>&nbsp; &nbsp; &nbsp; 然后输入下面的命令使之生效&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; # source /etc/profile&nbsp;</p><p>4.&nbsp;&nbsp; 测试&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;# java -version&nbsp;出现如下表示安装成功&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;java version "1.7.0_45"&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</p><p><br></p><p><span style="font-size: 20px;">三 tomcat 安装</span></p><p>&nbsp; &nbsp;1.下载 apache-tomcat-7.0.53.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p><p>&nbsp; &nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /soft&nbsp;# tar -zxvf apache-tomcat-7.0.53.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# mv apache-tomcat-7.0.53 /usr/&nbsp;</p><p>&nbsp; 3. 修改端口&nbsp;</p><p>&nbsp; &nbsp; &lt;Connector port="80" protocol="HTTP/1.1"&nbsp;URIEncoding="UTF-8"&nbsp;redirectPort="8443" /&gt;&nbsp;</p><p>&nbsp; &nbsp; 注:根据实际需要设置 tomcat 的端口&nbsp;</p><p>&nbsp; 4. tomcat 启动&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /usr/tomcat7/bin/&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# ./startup.sh &amp;&nbsp;</p><p>&nbsp; &nbsp; # tail -f ../logs/catalina.out&nbsp;</p><p>&nbsp; &nbsp;5.tomcat 关闭&nbsp;</p><p>&nbsp; &nbsp; # ps -ef|grep tomcat&nbsp;</p><p>&nbsp; &nbsp; # kill -9 进程号</p>, <p>本文讲解如何在linux下安装Nginx、Jdk、Tomcat</p>, 1, 2021-01-04 09:27:12.0, null, 0, 0, 70, 1, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [42, 2, java8 lambda表达式 函数式编程, /upload/2020-01/1580268632163.jpg, <p>注解的表面意思和接口差不多 只定义没有实际作用定义注解的语法是（@interface 注解名{}）自定义注解还需要添加系统提供的元注解1.@Target,2.@Retention,3.@Documented,4.@Inherited<br>一 .查看源码得知Target 有一个ElementType的枚举属性，他的作用是定义注解的范围</p><p><img src="https://img-blog.csdnimg.cn/20190621153751114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>&nbsp;1.CONSTRUCTOR:用于描述构造器　　　　2.FIELD:用于描述域　　　　3.LOCAL_VARIABLE:用于描述局部变量　　　　4.METHOD:用于描述方法　　　　5.PACKAGE:用于描述包　　　　6.PARAMETER:用于描述参数　　　　7.TYPE:用于描述类、接口(包括注解类型) 或enum声明　　　　总之他就是定义你注解能加在那个地方 不然就会报错 他有个RetentionPolicy的枚举属性<br>二.Retention 他是说你注解在那个范围保留1.SOURCE:在源文件中有效（即源文件保留）　　　　2.CLASS:在class文件中有效（即class保留）　　　　3.RUNTIME:在运行时有效（即运行时保留）</p><p><img src="https://img-blog.csdnimg.cn/2019062115433919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>三 ，定义属性 注解类里面的属性是需要加括号的 ；</p><p><img src="https://img-blog.csdnimg.cn/20190621154613468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>我们写一个实体类用反射测试一下</p><p><img src="https://img-blog.csdnimg.cn/2019062115533430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190621160453201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>很简单 都是先获取类或者方法再获取注解<br>下面是动态编译和反射运行的代码 注释很清楚<br>import javax.tools.JavaCompiler;import javax.tools.ToolProvider;import java.io.*;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class main {public static void main(String[] args) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException {<br>&nbsp; String javapath="D:compiler\\javaa.java";//需要保存的文件&nbsp;String path="public class javaa{javaa(){System.out.println(\"构造方法\");}public String test(){return \"测试方法\";}}";//定义java字符串&nbsp;File file = new File(javapath);&nbsp; &nbsp; &nbsp; if(file.exists()){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //保存到文件&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.write(path);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.flush();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter.close();<br>&nbsp; &nbsp; &nbsp; }{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //不存在就创建再保存&nbsp; &nbsp; &nbsp;boolean newFile = file.createNewFile();<br>&nbsp; &nbsp; &nbsp;FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp;BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp;bufferedWriter.write(path);&nbsp; &nbsp; &nbsp;bufferedWriter.flush();&nbsp; &nbsp; &nbsp;fileWriter.close();&nbsp;}<br>JavaCompiler systemJavaCompiler = ToolProvider.getSystemJavaCompiler();//通过java自带的 tools.jar把指定文件编译成class文件&nbsp;int run = systemJavaCompiler.run(null, null, null, javapath);//前几个参数是用来保存编译过程的信息 最后一个是需要编译类的路径&nbsp;if(run==0) {//如果编译成功就通过反射执行<br>&nbsp; &nbsp; &nbsp;URL[] url = new URL[]{new URL("file:/D:compiler/")};//需要执行的类路径<br>&nbsp; &nbsp; &nbsp;Class&lt;?&gt; javaa = new URLClassLoader(url).loadClass("javaa");//获得类加载器&nbsp; &nbsp; &nbsp;Method test = javaa.getDeclaredMethod("test", null);&nbsp; &nbsp; &nbsp;String invoke = (String) test.invoke(javaa.newInstance(), null);&nbsp; &nbsp; &nbsp;System.out.println(invoke);<br>&nbsp;}12345678910111213141516171819202122232425262728293031323334}}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93198309</p>, <p><span>java 8引入了 lambda表达式 他主要用于简化代码 比如我们平时都是使用匿名类来实现一个接口 有了lambda 我们只需要考虑实现接口方法就行了 前提是此接口只能有一个抽象方法 在这里java8&nbsp;</span></p>, 1, 2020-01-29 11:32:18.0, null, 0, 0, 21, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} Result: [46, 2, spring，servlet，springmvc上下文关系, /upload/2020-01/1580269266172.jpeg, <p>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西，反之，不可！WebApplicationContext //Ioc容器对象WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletConfig().getServletContext());————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88838056</p>, <p><span>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西</span></p>, 1, 2020-01-29 11:43:03.0, null, 0, 0, 19, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:00 -<==      Total: 9
2021-01-11 16:50:00 -{conn-10001, pstmt-20003, rs-50083} closed
2021-01-11 16:50:00 -{conn-10001, pstmt-20003} clearParameters. 
2021-01-11 16:50:00 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@139d3d2]
2021-01-11 16:50:00 -{conn-10001} pool-recycle
2021-01-11 16:50:00 -任务执行
2021-01-11 16:50:19 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6e6c1053].  Returning null to indicate a session could not be found.
2021-01-11 16:50:19 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@51b9b44b].  Returning null to indicate a session could not be found.
2021-01-11 16:50:19 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@20a2ea9e].  Returning null to indicate a session could not be found.
2021-01-11 16:50:19 -GET "/homestatic/template/ue-content/templates/css/share/weibo.png", parameters={}
2021-01-11 16:50:19 -GET "/homestatic/template/ue-content/templates/css/share/qq.png", parameters={}
2021-01-11 16:50:19 -GET "/homestatic/template/ue-content/templates/css/icons.png", parameters={}
2021-01-11 16:50:19 -looking up handler for path: /homestatic/template/ue-content/templates/css/share/weibo.png
2021-01-11 16:50:19 -looking up handler for path: /homestatic/template/ue-content/templates/css/icons.png
2021-01-11 16:50:19 -looking up handler for path: /homestatic/template/ue-content/templates/css/share/qq.png
2021-01-11 16:50:19 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:19 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:19 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:19 -Completed 200 OK
2021-01-11 16:50:19 -Completed 200 OK
2021-01-11 16:50:19 -Completed 200 OK
2021-01-11 16:50:27 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@52b51900].  Returning null to indicate a session could not be found.
2021-01-11 16:50:27 -GET "/login", parameters={}
2021-01-11 16:50:27 -looking up handler for path: /login
2021-01-11 16:50:27 -Mapped to com.dong.system.controller.loginController#login(String, Model)
2021-01-11 16:50:27 -请求地址 : http://localhost:8889/login
2021-01-11 16:50:27 -HTTP METHOD : GET
2021-01-11 16:50:27 -CLASS_METHOD : com.dong.system.controller.loginController.login
2021-01-11 16:50:27 -参数 : [null, {}]
2021-01-11 16:50:27 -返回值 : admin/login
2021-01-11 16:50:27 -耗时 : 2
2021-01-11 16:50:27 -Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, application/xml;q=0.9, */*;q=0.8]
2021-01-11 16:50:27 -Completed 200 OK
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@303cc557].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@3454aed6].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -GET "/static/css/dialog.css", parameters={}
2021-01-11 16:50:28 -looking up handler for path: /static/css/dialog.css
2021-01-11 16:50:28 -GET "/static/js/jquery-1.7.2.min.js", parameters={}
2021-01-11 16:50:28 -looking up handler for path: /static/js/jquery-1.7.2.min.js
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@1947cfe2].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@5ce85dcb].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@5528a21e].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -GET "/static/js/zepto.min.js", parameters={}
2021-01-11 16:50:28 -GET "/static/js/dialog.min.js", parameters={}
2021-01-11 16:50:28 -looking up handler for path: /static/js/zepto.min.js
2021-01-11 16:50:28 -looking up handler for path: /static/js/dialog.min.js
2021-01-11 16:50:28 -GET "/admin/yzm", parameters={}
2021-01-11 16:50:28 -looking up handler for path: /admin/yzm
2021-01-11 16:50:28 -Mapped to com.dong.system.controller.loginController#yzmcode(HttpServletResponse)
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -请求地址 : http://localhost:8889/admin/yzm
2021-01-11 16:50:28 -HTTP METHOD : GET
2021-01-11 16:50:28 -CLASS_METHOD : com.dong.system.controller.loginController.yzmcode
2021-01-11 16:50:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@1496588b]
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@4e4447dd].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -Unable to resolve session ID from SessionKey [org.apache.shiro.web.session.mgt.WebSessionKey@6e19aece].  Returning null to indicate a session could not be found.
2021-01-11 16:50:28 -GET "/static/images/adminbj.jpg", parameters={}
2021-01-11 16:50:28 -GET "/static/images/login_ico.png", parameters={}
2021-01-11 16:50:28 -looking up handler for path: /static/images/adminbj.jpg
2021-01-11 16:50:28 -looking up handler for path: /static/images/login_ico.png
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
2021-01-11 16:50:28 -put added 0 on heap
2021-01-11 16:50:28 -put added 0 on heap
2021-01-11 16:50:28 -put updated, deleted 0 on heap
2021-01-11 16:50:28 -fault removed 0 from heap
2021-01-11 16:50:28 -fault added 0 on disk
2021-01-11 16:50:28 -Added HttpServletResponse Cookie [jlbk.shiro.sessionid=18f8a009-7e2c-4c0e-88c9-742c552bf685; Path=/; HttpOnly]
2021-01-11 16:50:28 -fault installation failed, deleted 0 from heap
2021-01-11 16:50:28 -fault installation failed deleted 0 from disk
2021-01-11 16:50:28 -put added 0 on heap
2021-01-11 16:50:28 -put updated, deleted 0 on heap
2021-01-11 16:50:28 -fault removed 0 from heap
2021-01-11 16:50:28 -fault added 0 on disk
2021-01-11 16:50:28 -fault installation failed, deleted 0 from heap
2021-01-11 16:50:28 -fault installation failed deleted 0 from disk
2021-01-11 16:50:28 -fault removed 0 from heap
2021-01-11 16:50:28 -fault added 0 on disk
2021-01-11 16:50:28 -返回值 : null
2021-01-11 16:50:28 -耗时 : 718
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:28 -Found 'jlbk.shiro.sessionid' cookie value [18f8a009-7e2c-4c0e-88c9-742c552bf685]
2021-01-11 16:50:28 -put added 0 on heap
2021-01-11 16:50:28 -put updated, deleted 0 on heap
2021-01-11 16:50:28 -put updated, deleted 0 on disk
2021-01-11 16:50:28 -fault removed 0 from heap
2021-01-11 16:50:28 -fault added 0 on disk
2021-01-11 16:50:28 -GET "/favicon.ico", parameters={}
2021-01-11 16:50:28 -looking up handler for path: /favicon.ico
2021-01-11 16:50:28 -Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
2021-01-11 16:50:28 -Completed 200 OK
2021-01-11 16:50:29 -batch acquisition of 1 triggers
2021-01-11 16:50:39 -Found 'jlbk.shiro.sessionid' cookie value [3de57bf4-62ce-441b-850d-9c61d84ffb9f]
2021-01-11 16:50:39 -put added 0 on heap
2021-01-11 16:50:39 -put updated, deleted 0 on heap
2021-01-11 16:50:39 -put updated, deleted 0 on disk
2021-01-11 16:50:39 -GET "/", parameters={}
2021-01-11 16:50:39 -fault removed 0 from heap
2021-01-11 16:50:39 -fault added 0 on disk
2021-01-11 16:50:39 -looking up handler for path: /
2021-01-11 16:50:39 -Mapped to com.dong.home.controller.indexController#index(Model)
2021-01-11 16:50:39 -请求地址 : http://localhost:8889/
2021-01-11 16:50:39 -HTTP METHOD : GET
2021-01-11 16:50:39 -CLASS_METHOD : com.dong.home.controller.AdviceControllerArttype.addmodel
2021-01-11 16:50:39 -参数 : [{}]
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d83b2a] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? ORDER BY sort ASC 
2021-01-11 16:50:39 -==> Parameters: 0(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20004} Parameters : [0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004} executed. 0.7071 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ? ORDER BY sort ASC
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} Result: [2, 博客, 1, /jianluboke, 2019-12-03 18:04:44.0, 主要分享博客文章, 1, 299, boke, 0]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} Result: [6, 资源分享, 2, /zyfx, 2019-12-03 18:09:34.0, 主要分享资源相关, 1, 208, ziyuanfenxiang, 0]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} Result: [8, 影院, 3, /jlyy, 2019-12-03 19:40:24.0, 电影相关, 1, 0, yingyuan, 0]
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} Result: [9, 音乐, 4, jlyinyue, 2019-12-03 19:43:04.0, 音乐相关, 1, 0, yinle, 0]
2021-01-11 16:50:39 -<==      Total: 5
2021-01-11 16:50:39 -{conn-10001, pstmt-20004, rs-50084} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20004} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d83b2a]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3810499] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT tag_id,title,createtime,createuserid FROM sys_tag 
2021-01-11 16:50:39 -==> Parameters: 
2021-01-11 16:50:39 -{conn-10001, pstmt-20005} Parameters : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20005} Types : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20005} executed. 0.8807 millis. SELECT  tag_id,title,createtime,createuserid  FROM sys_tag
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Header: [tag_id, title, createtime, createuserid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [4, JAVA, 2019-12-14 13:46:00.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [5, PHP, 2019-12-14 13:46:03.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [6, CSS, 2019-12-14 13:46:06.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [7, JAVASCRIPT, 2019-12-14 13:46:11.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [9, XML, 2019-12-14 13:46:21.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [10, HTML5, 2019-12-14 13:46:31.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [11, C#, 2019-12-14 13:46:35.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [12, GO, 2019-12-14 13:46:42.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [13, .NET, 2019-12-14 13:46:52.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [14, JVM, 2019-12-14 13:46:56.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [15, Spring, 2019-12-14 13:47:19.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [16, 互联网, 2019-12-14 13:47:27.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [17, Mybatis, 2019-12-14 13:47:49.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [18, VUE, 2019-12-14 13:47:57.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [19, Redis, 2019-12-14 13:48:09.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [20, Lucene, 2019-12-14 13:48:22.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [21, Solr, 2019-12-14 13:48:30.0, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} Result: [33, Linux, 2021-01-04 09:18:05.0, 1]
2021-01-11 16:50:39 -<==      Total: 18
2021-01-11 16:50:39 -{conn-10001, pstmt-20005, rs-50085} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20005} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3810499]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -返回值 : null
2021-01-11 16:50:39 -耗时 : 8
2021-01-11 16:50:39 -请求地址 : http://localhost:8889/
2021-01-11 16:50:39 -HTTP METHOD : GET
2021-01-11 16:50:39 -CLASS_METHOD : com.dong.home.controller.indexController.index
2021-01-11 16:50:39 -参数 : [{listArttype=[Arttype(acttypeId=60, title=首页, sort=0, url=/, createtime=2019-12-31T21:23:08, description=首页, state=1, click=0, pinyin=shouye, parentid=0, ParentTitle=null), Arttype(acttypeId=2, title=博客, sort=1, url=/jianluboke, createtime=2019-12-03T18:04:44, description=主要分享博客文章, state=1, click=299, pinyin=boke, parentid=0, ParentTitle=null), Arttype(acttypeId=6, title=资源分享, sort=2, url=/zyfx, createtime=2019-12-03T18:09:34, description=主要分享资源相关, state=1, click=208, pinyin=ziyuanfenxiang, parentid=0, ParentTitle=null), Arttype(acttypeId=8, title=影院, sort=3, url=/jlyy, createtime=2019-12-03T19:40:24, description=电影相关, state=1, click=0, pinyin=yingyuan, parentid=0, ParentTitle=null), Arttype(acttypeId=9, title=音乐, sort=4, url=jlyinyue, createtime=2019-12-03T19:43:04, description=音乐相关, state=1, click=0, pinyin=yinle, parentid=0, ParentTitle=null)], tags=[Tag(tagId=4, title=JAVA, createtime=2019-12-14T13:46, createuserid=1), Tag(tagId=5, title=PHP, createtime=2019-12-14T13:46:03, createuserid=1), Tag(tagId=6, title=CSS, createtime=2019-12-14T13:46:06, createuserid=1), Tag(tagId=7, title=JAVASCRIPT, createtime=2019-12-14T13:46:11, createuserid=1), Tag(tagId=9, title=XML, createtime=2019-12-14T13:46:21, createuserid=1), Tag(tagId=10, title=HTML5, createtime=2019-12-14T13:46:31, createuserid=1), Tag(tagId=11, title=C#, createtime=2019-12-14T13:46:35, createuserid=1), Tag(tagId=12, title=GO, createtime=2019-12-14T13:46:42, createuserid=1), Tag(tagId=13, title=.NET, createtime=2019-12-14T13:46:52, createuserid=1), Tag(tagId=14, title=JVM, createtime=2019-12-14T13:46:56, createuserid=1), Tag(tagId=15, title=Spring, createtime=2019-12-14T13:47:19, createuserid=1), Tag(tagId=16, title=互联网, createtime=2019-12-14T13:47:27, createuserid=1), Tag(tagId=17, title=Mybatis, createtime=2019-12-14T13:47:49, createuserid=1), Tag(tagId=18, title=VUE, createtime=2019-12-14T13:47:57, createuserid=1), Tag(tagId=19, title=Redis, createtime=2019-12-14T13:48:09, createuserid=1), Tag(tagId=20, title=Lucene, createtime=2019-12-14T13:48:22, createuserid=1), Tag(tagId=21, title=Solr, createtime=2019-12-14T13:48:30, createuserid=1), Tag(tagId=33, title=Linux, createtime=2021-01-04T09:18:05, createuserid=1)]}]
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6596264b] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE url = ? 
2021-01-11 16:50:39 -==> Parameters: /(String)
2021-01-11 16:50:39 -{conn-10001, pstmt-20006} Parameters : [/]
2021-01-11 16:50:39 -{conn-10001, pstmt-20006} Types : [VARCHAR]
2021-01-11 16:50:39 -{conn-10001, pstmt-20006} executed. 1.0628 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE url = ?
2021-01-11 16:50:39 -{conn-10001, pstmt-20006, rs-50086} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20006, rs-50086} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20006, rs-50086} Result: [60, 首页, 0, /, 2019-12-31 21:23:08.0, 首页, 1, 0, shouye, 0]
2021-01-11 16:50:39 -<==      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20006, rs-50086} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20006} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6596264b]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308f907e] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num FROM sys_wheel WHERE state = ? AND arttype_id = ? ORDER BY num ASC 
2021-01-11 16:50:39 -==> Parameters: 1(Integer), 60(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20007} Parameters : [1, 60]
2021-01-11 16:50:39 -{conn-10001, pstmt-20007} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20007} executed. 1.1163 millis. SELECT  wheel_id,arttype_id,url,title,imageurl,createuserid,createtime,state,num  FROM sys_wheel 
 
 WHERE state = ? AND arttype_id = ? ORDER BY num ASC
2021-01-11 16:50:39 -{conn-10001, pstmt-20007, rs-50087} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20007, rs-50087} Header: [wheel_id, arttype_id, url, title, imageurl, createuserid, createtime, state, num]
2021-01-11 16:50:39 -{conn-10001, pstmt-20007, rs-50087} Result: [8, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790976378.jpg, 1, 2019-12-31 22:59:15.0, 1, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20007, rs-50087} Result: [6, 60, http://www.baidu.com, 首页轮播, /upload/2019-12/1577790632828.jpg, 1, 2019-12-31 22:59:15.0, 1, 3]
2021-01-11 16:50:39 -{conn-10001, pstmt-20007, rs-50087} Result: [21, 60, https://baike.baidu.com/item/%E8%BF%AA%E4%B8%BD%E7%83%AD%E5%B7%B4/1180418?fr=aladdin, 迪丽热巴, /upload/2021-01/1609650811273.jpg, 1, 2021-01-03 13:13:42.0, 1, 4]
2021-01-11 16:50:39 -<==      Total: 3
2021-01-11 16:50:39 -{conn-10001, pstmt-20007, rs-50087} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20007} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308f907e]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b92633e] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2 
2021-01-11 16:50:39 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20008} Parameters : [1, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20008} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20008} executed. 1.1074 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE topstate = ? AND state = ? ORDER BY weight ASC limit 0,2
2021-01-11 16:50:39 -{conn-10001, pstmt-20008, rs-50088} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20008, rs-50088} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -{conn-10001, pstmt-20008, rs-50088} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:39 -{conn-10001, pstmt-20008, rs-50088} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:50:39 -<==      Total: 2
2021-01-11 16:50:39 -{conn-10001, pstmt-20008, rs-50088} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20008} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b92633e]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b5dce5] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid FROM sys_arttype WHERE parentid = ? AND state = ? 
2021-01-11 16:50:39 -==> Parameters: 60(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20009} Parameters : [60, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20009} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20009} executed. 0.7769 millis. SELECT  acttype_id,title,sort,url,createtime,description,state,click,pinyin,parentid  FROM sys_arttype 
 
 WHERE parentid = ? AND state = ?
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} Result: [62, 心路历程, 2, //, 2020-01-01 01:27:37.0, 首页, 1, 0, xinlulicheng, 60]
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} Result: [64, 优质资源, 4, //, 2020-01-01 01:30:55.0, 首页, 1, 0, youzhiziyuan, 60]
2021-01-11 16:50:39 -<==      Total: 4
2021-01-11 16:50:39 -{conn-10001, pstmt-20009, rs-50089} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20009} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b5dce5]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31892260] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:50:39 -==> Parameters: 61(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Parameters : [61, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} executed. 1.3426 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50090} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50090} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50090} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50090} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:39 -<==      Total: 2
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50090} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31892260]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec954b2] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:50:39 -==> Parameters: 62(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Parameters : [62, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} executed. 1.0595 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50091} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50091} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50091} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:39 -<==      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50091} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec954b2]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e26d940] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:50:39 -==> Parameters: 63(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Parameters : [63, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} executed. 1.2663 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50092} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50092} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50092} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:50:39 -<==      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50092} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e26d940]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8a2dcd] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7 
2021-01-11 16:50:39 -==> Parameters: 64(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Parameters : [64, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} Types : [INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} executed. 1.4571 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE arttype_id = ? AND state = ? ORDER BY weight ASC limit 0,7
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50093} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50093} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -<==      Total: 0
2021-01-11 16:50:39 -{conn-10001, pstmt-20010, rs-50093} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20010} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8a2dcd]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33d17700] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC 
2021-01-11 16:50:39 -==> Parameters: 1(Integer), 1(Integer), 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20011} Parameters : [1, 1, 1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20011} Types : [INTEGER, INTEGER, INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20011} executed. 1.3215 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE is_hot = ? AND type = ? AND state = ? ORDER BY clickcount DESC
2021-01-11 16:50:39 -{conn-10001, pstmt-20011, rs-50094} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20011, rs-50094} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -{conn-10001, pstmt-20011, rs-50094} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:50:39 -<==      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20011, rs-50094} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20011} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33d17700]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4251dca4] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: select*from sys_article WHERE state=1 and topstate=1 order by createtime desc 
2021-01-11 16:50:39 -==> Parameters: 
2021-01-11 16:50:39 -{conn-10001, pstmt-20012} Parameters : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20012} Types : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20012} executed. 1.1297 millis. select*from sys_article
         WHERE  state=1
            
            
                and topstate=1 
        order by createtime desc
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:50:39 -====>  Preparing: select * from sys_user where user_id=? 
2021-01-11 16:50:39 -====> Parameters: 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20013} Parameters : [1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20013} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20013} executed. 0.7514 millis. select * from sys_user where user_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20013, rs-50096} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20013, rs-50096} Header: [user_id, username, password, name, sex, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, is_vip, email, phone, area]
2021-01-11 16:50:39 -{conn-10001, pstmt-20013, rs-50096} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:50:39 -======>  Preparing: select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=? 
2021-01-11 16:50:39 -======> Parameters: 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20014} Parameters : [1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20014} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20014} executed. 0.7339 millis. select r.* from sys_role r left join sys_role_user ru on r.role_id=ru.role_id where ru.user_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20014, rs-50097} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20014, rs-50097} Header: [role_id, name, createtime, createuserid, updatetime, sign, context, state]
2021-01-11 16:50:39 -{conn-10001, pstmt-20014, rs-50097} Result: [1, 超级管理员, 2019-12-16 00:24:50.0, 1, 2019-12-30 00:48:29.0, systemadmin, 拥有最高权限, 1]
2021-01-11 16:50:39 -<======      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20014, rs-50097} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20014} clearParameters. 
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20013, rs-50096} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20013} clearParameters. 
2021-01-11 16:50:39 -====>  Preparing: select count(*) from sys_comment where articleid=66 
2021-01-11 16:50:39 -====> Parameters: 
2021-01-11 16:50:39 -{conn-10001, pstmt-20015} Parameters : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20015} Types : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20015} executed. 6.4571 millis. select count(*) from sys_comment where articleid=66
2021-01-11 16:50:39 -{conn-10001, pstmt-20015, rs-50098} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20015, rs-50098} Header: [count(*)]
2021-01-11 16:50:39 -{conn-10001, pstmt-20015, rs-50098} Result: [0]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20015, rs-50098} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20015} clearParameters. 
2021-01-11 16:50:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:50:39 -====> Parameters: 63(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Parameters : [63]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} executed. 0.6184 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50099} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50099} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50099} Result: [63, 后端技术, 3, //, 2020-01-01 01:30:06.0, 首页, 1, 0, houduanjishu, 60]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50099} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:39 -====>  Preparing: select count(*) from sys_comment where articleid=40 
2021-01-11 16:50:39 -====> Parameters: 
2021-01-11 16:50:39 -{conn-10001, pstmt-20017} Parameters : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20017} Types : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20017} executed. 0.5762 millis. select count(*) from sys_comment where articleid=40
2021-01-11 16:50:39 -{conn-10001, pstmt-20017, rs-50100} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20017, rs-50100} Header: [count(*)]
2021-01-11 16:50:39 -{conn-10001, pstmt-20017, rs-50100} Result: [1]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20017, rs-50100} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20017} clearParameters. 
2021-01-11 16:50:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:50:39 -====> Parameters: 59(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Parameters : [59]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} executed. 0.7703 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50101} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50101} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50101} Result: [59, 秘密资料, 3, null, 2019-12-31 01:23:54.0, 哈哈哈哈, 1, 43, mimiziliao, 6]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50101} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:50:39 -====>  Preparing: select count(*) from sys_comment where articleid=39 
2021-01-11 16:50:39 -====> Parameters: 
2021-01-11 16:50:39 -{conn-10001, pstmt-20018} Parameters : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20018} Types : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20018} executed. 0.7457 millis. select count(*) from sys_comment where articleid=39
2021-01-11 16:50:39 -{conn-10001, pstmt-20018, rs-50102} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20018, rs-50102} Header: [count(*)]
2021-01-11 16:50:39 -{conn-10001, pstmt-20018, rs-50102} Result: [2]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20018, rs-50102} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20018} clearParameters. 
2021-01-11 16:50:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:50:39 -====> Parameters: 61(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Parameters : [61]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} executed. 0.5443 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50103} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50103} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50103} Result: [61, 站长推荐, 1, //, 2020-01-01 01:26:58.0, 首页, 1, 0, zhanzhangtuijian, 60]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50103} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:39 -====>  Preparing: select count(*) from sys_comment where articleid=38 
2021-01-11 16:50:39 -====> Parameters: 
2021-01-11 16:50:39 -{conn-10001, pstmt-20019} Parameters : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20019} Types : []
2021-01-11 16:50:39 -{conn-10001, pstmt-20019} executed. 1.0556 millis. select count(*) from sys_comment where articleid=38
2021-01-11 16:50:39 -{conn-10001, pstmt-20019, rs-50104} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20019, rs-50104} Header: [count(*)]
2021-01-11 16:50:39 -{conn-10001, pstmt-20019, rs-50104} Result: [1]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20019, rs-50104} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20019} clearParameters. 
2021-01-11 16:50:39 -====>  Preparing: select*from sys_arttype where acttype_id=? 
2021-01-11 16:50:39 -====> Parameters: 54(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Parameters : [54]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} executed. 0.8165 millis. select*from sys_arttype where acttype_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50105} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50105} Header: [acttype_id, title, sort, url, createtime, description, state, click, pinyin, parentid]
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50105} Result: [54, java, 1, , 2019-12-31 01:19:31.0, java相关文章, 1, 28, java, 2]
2021-01-11 16:50:39 -<====      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20016, rs-50105} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20016} clearParameters. 
2021-01-11 16:50:39 -<==      Total: 4
2021-01-11 16:50:39 -{conn-10001, pstmt-20012, rs-50095} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20012} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4251dca4]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9b1c7a] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT link_id,arttypeid,url,num,clickcount,createtime,email,title,descr FROM sys_links WHERE arttypeid = ? ORDER BY num ASC 
2021-01-11 16:50:39 -==> Parameters: 60(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20020} Parameters : [60]
2021-01-11 16:50:39 -{conn-10001, pstmt-20020} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20020} executed. 0.6103 millis. SELECT  link_id,arttypeid,url,num,clickcount,createtime,email,title,descr  FROM sys_links 
 
 WHERE arttypeid = ? ORDER BY num ASC
2021-01-11 16:50:39 -{conn-10001, pstmt-20020, rs-50106} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20020, rs-50106} Header: [link_id, arttypeid, url, num, clickcount, createtime, email, title, descr]
2021-01-11 16:50:39 -{conn-10001, pstmt-20020, rs-50106} Result: [1, 60, http://www.baidu.com, 1, 1, 2020-01-16 00:35:58.0, 11@qq.cc, 百度, 百友情度相关]
2021-01-11 16:50:39 -{conn-10001, pstmt-20020, rs-50106} Result: [15, 60, http://www.sogo.com, 2, null, 2020-01-03 00:35:44.0, ww@qq.com, 搜狗, 测试]
2021-01-11 16:50:39 -<==      Total: 2
2021-01-11 16:50:39 -{conn-10001, pstmt-20020, rs-50106} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20020} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c9b1c7a]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -Creating a new SqlSession
2021-01-11 16:50:39 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3c3863] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:39 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:39 -{conn-10001} pool-connect
2021-01-11 16:50:39 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:39 -==>  Preparing: SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=? 
2021-01-11 16:50:39 -==> Parameters: 1(Integer)
2021-01-11 16:50:39 -{conn-10001, pstmt-20021} Parameters : [1]
2021-01-11 16:50:39 -{conn-10001, pstmt-20021} Types : [INTEGER]
2021-01-11 16:50:39 -{conn-10001, pstmt-20021} executed. 0.524 millis. SELECT user_id,username,password,name,sex,is_vip,Birthday,createtime,updatetime,lastlogin,createuserid,state,context,Province,city,address,logo,work,depaid,logincount,hobby,jf,is_admin,email,phone,area FROM sys_user WHERE user_id=?
2021-01-11 16:50:39 -{conn-10001, pstmt-20021, rs-50107} open
2021-01-11 16:50:39 -{conn-10001, pstmt-20021, rs-50107} Header: [user_id, username, password, name, sex, is_vip, Birthday, createtime, updatetime, lastlogin, createuserid, state, context, Province, city, address, logo, work, depaid, logincount, hobby, jf, is_admin, email, phone, area]
2021-01-11 16:50:39 -{conn-10001, pstmt-20021, rs-50107} Result: [1, admin, d8470170992ff583d79bae0325340cbe, 董猛, 男, 1, 1994-07-06, 2020-07-30 18:23:11.0, 2020-07-30 18:23:11.0, 2021-01-07 14:46:49.0, 1, 1, 隐隐约约, 湖北省, 武汉市, 1, /upload/logo/1609648503481_1.jpg, 软件工程师, 3, 242, {"0":"4","1":"7","2":"11","3":"12","4":"14","5":"19","6":"22","7":"27"}, 123, 1, 256350962@qq.com, 18062564775, 武昌区]
2021-01-11 16:50:39 -<==      Total: 1
2021-01-11 16:50:39 -{conn-10001, pstmt-20021, rs-50107} closed
2021-01-11 16:50:39 -{conn-10001, pstmt-20021} clearParameters. 
2021-01-11 16:50:39 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3c3863]
2021-01-11 16:50:39 -{conn-10001} pool-recycle
2021-01-11 16:50:39 -返回值 : home/index
2021-01-11 16:50:39 -耗时 : 74
2021-01-11 16:50:39 -Selected 'text/html' given [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.9, */*;q=0.8]
2021-01-11 16:50:39 -[THYMELEAF][http-nio-0.0.0.0-8889-exec-6] Exception processing template "home/index": An error happened during template parsing (template: "class path resource [templates/home/index.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 73 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 75 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 97 common frames omitted
2021-01-11 16:50:39 -Error rendering view [org.thymeleaf.spring5.view.ThymeleafView@69ee7c08]
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 73 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.User.getLogo()" (template: "home/head" - line 76, col 120)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 75 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 97 common frames omitted
2021-01-11 16:50:39 -Failed to complete request: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")
2021-01-11 16:50:39 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/home/index.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getLogo() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueRef(MethodReference.java:83)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:70)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1394)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1139)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dong.filter.XssRequestFilter.doFilter(XssRequestFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2021-01-11 16:50:39 -"ERROR" dispatch for GET "/error", parameters={}
2021-01-11 16:50:39 -looking up handler for path: /error
2021-01-11 16:50:39 -Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2021-01-11 16:50:39 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:50:39 -Found key 'spring.template.provider.cache' in PropertySource 'configurationProperties' with value of type String
2021-01-11 16:50:39 -Selected 'text/html' given [text/html, text/html;q=0.8]
2021-01-11 16:50:39 -Exiting from "ERROR" dispatch, status 500
2021-01-11 16:50:50 -Calling execute on job group.页面左边资源文章排行
2021-01-11 16:50:50 -batch acquisition of 1 triggers
2021-01-11 16:50:50 -Creating a new SqlSession
2021-01-11 16:50:50 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e7577ec] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:50 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:50 -{conn-10001} pool-connect
2021-01-11 16:50:50 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:50 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:50:50 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:50:50 -{conn-10001, pstmt-20002} Parameters : [1, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20002} Types : [INTEGER, INTEGER]
2021-01-11 16:50:50 -{conn-10001, pstmt-20002} executed. 0.9665 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type <> ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} open
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} Result: [38, 54, java 自定义注解、反射读取注解、动态编译, /upload/2020-01/1577944720276.jpg, null, 测试数据, 1, 2020-01-02 21:59:26.0, null, 0, 0, 202, 99, https://pan.baidu.com/s/1ydD_drB1zC5FACy1I5EHqA, ssss, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} Result: [40, 59, java 中使用脚本语言, /upload/2020-01/1578230234020.jpg, null, <p>1.继承 Thread</p><p>public class MyThread extends Thread {</p><p><br></p>, 1, 2020-01-05 21:18:01.0, null, 0, 1, 127, 99, https://pan.baidu.com/s/17_OKETRj0Gw-0obT6poWkw, 111, 1, 1, 0, 0, 0, null, null, 2]
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} Result: [70, 57, 程序员优秀的简历模板, /upload/2021-01/1609926646023.jpeg, null, <p>程序员优秀的简历模板</p>, 1, 2021-01-06 17:52:13.0, null, 0, 1, 94, 99, https://pan.baidu.com/s/1kk2mQAEJ0IMrRrdFCq-UBw, bmt5, 1, 0, 0, 2, 0, null, null, 2]
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} Result: [39, 61, java创建多线程的三种方式, /upload/2020-01/1578223439658.png, <p>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种<br>1.继承 Threadpublic class MyThread extends Thread {@Overridepublic void run() {int i=0;while(true){try {sleep(100);System.out.println(“我是”+getName()+"—"+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread();myThread.setName(“线程1”);MyThread myThread1 = new MyThread();myThread1.setName(“线程2”);myThread.start();myThread1.start();}<br>}2.实现Runnable接口public class MyThread implements Runnable {<br>private String name=null;<br>MyThread(String name){&nbsp; &nbsp; this.name=name;}String getName(){&nbsp; &nbsp; return name;}<br>@Overridepublic void run() {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("我是"+getName()+"---"+i++);&nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; }}12345678910111213141516171819202122232425}调用public class mains {public static void main(String[] args) {MyThread myThread = new MyThread(“线程1”);MyThread myThread1 = new MyThread(“线程2”);new Thread(myThread).start();new Thread(myThread1).start();<br>}1}其中还可以使用匿名类的方式public class mains {public static void main(String[] args) {new Thread(new Runnable(){public void run(){int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;}).start();<br>}12345678}lambda表达式的方式public class mains {public static void main(String[] args) {new Thread(()-&gt;{int i=0;while(true){try {Thread.sleep(100);System.out.println(“我是”+i++);} catch (InterruptedException e) {e.printStackTrace();}<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; }&nbsp; }).start();<br>}1234567}3.线程池创建带返回值的线程public class mains {public static void main(String[] args) throws ExecutionException, InterruptedException {ExecutorService executorService = Executors.newFixedThreadPool(5);//线程池大小为5iList array=new ArrayList();for(int i=0; i&lt;5; i++){Callable c = new MyCallable(“线程”+i);Future submit = executorService.submit©;array.add(submit);}for (Object fut:array) {Future fut1 = (Future) fut;Object o = fut1.get();System.out.println(o);}<br>}1}class MyCallable implements Callable{private String name;MyCallable(String name){this.name=name;}<br>@Overridepublic Object call() throws Exception {&nbsp; &nbsp; int i=0;&nbsp; &nbsp; while(true){&nbsp; &nbsp; &nbsp; &nbsp; i++;&nbsp; &nbsp; &nbsp; &nbsp;Thread.sleep(100);&nbsp; &nbsp; &nbsp; &nbsp; if(i&gt;100)break;&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(this.name+"-"+i);&nbsp; &nbsp; }&nbsp; &nbsp;return this.name+"-"+i;}1234567891011}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93483006</p>, <p><span>1.多线程 继承Thread 实现Rnunable 和使用ExecutorService、Callable、Future 前两种大部分人学习的时候一定学过 第三种</span></p>, 1, 2020-01-05 19:27:07.0, null, 0, 1, 63, 99, https://pan.baidu.com/s/1Pgk97fNApGRYn56fXXQbwQ, 111, 1, 1, 1, 0, 0, null, null, 3]
2021-01-11 16:50:50 -<==      Total: 4
2021-01-11 16:50:50 -{conn-10001, pstmt-20002, rs-50108} closed
2021-01-11 16:50:50 -{conn-10001, pstmt-20002} clearParameters. 
2021-01-11 16:50:50 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e7577ec]
2021-01-11 16:50:50 -{conn-10001} pool-recycle
2021-01-11 16:50:50 -Creating a new SqlSession
2021-01-11 16:50:50 -SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@648d1c9c] was not registered for synchronization because synchronization is not active
2021-01-11 16:50:50 -Fetching JDBC Connection from DataSource
2021-01-11 16:50:50 -{conn-10001} pool-connect
2021-01-11 16:50:50 -JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53db7f4b] will not be managed by Spring
2021-01-11 16:50:50 -==>  Preparing: SELECT ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type FROM sys_article WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20 
2021-01-11 16:50:50 -==> Parameters: 1(Integer), 1(Integer)
2021-01-11 16:50:50 -{conn-10001, pstmt-20003} Parameters : [1, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003} Types : [INTEGER, INTEGER]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003} executed. 1.2584 millis. SELECT  ar_id,arttype_id,title,litpic,context,description,createuserid,createtime,updatetime,commentcount,comment_state,clickcount,weight,downloadurl,downloadpassword,state,topstate,is_free,jf,is_hot,resson,check_datetime,type  FROM sys_article 
 
 WHERE type = ? AND state = ? ORDER BY clickcount DESC limit 0,20
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} open
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Header: [ar_id, arttype_id, title, litpic, context, description, createuserid, createtime, updatetime, commentcount, comment_state, clickcount, weight, downloadurl, downloadpassword, state, topstate, is_free, jf, is_hot, resson, check_datetime, type]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [41, 62, 消息中间件 RabbitMQ, /upload/2020-01/1578719335561.jpg, <p>一.协议介绍6.1 AMQP协议<br>AMQP即Advanced Message Queuing Protocol,一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。优点：可靠、通用<br>&nbsp; 6.2 MQTT协议1MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和致动器（比如通过Twitter让房屋联网）的通信协议。优点：格式简洁、占用带宽小、移动端通信、PUSH、嵌入式系统<br>&nbsp; 6.3 STOMP协议1STOMP（Streaming Text Orientated Message Protocol）是流文本定向消息协议，是一种为MOM(Message Oriented Middleware，面向消息的中间件)设计的简单文本协议。STOMP提供一个可互操作的连接格式，允许客户端与任意STOMP消息代理（Broker）进行交互。优点：命令模式（非topic\queue模式）<br>&nbsp; 6.4 XMPP协议1XMPP（可扩展消息处理现场协议，Extensible Messaging and Presence Protocol）是基于可扩展标记语言（XML）的协议，多用于即时消息（IM）以及在线现场探测。适用于服务器之间的准即时操作。核心是基于XML流传输，这个协议可能最终允许因特网用户向因特网上的其他任何人发送即时消息，即使其操作系统和浏览器不同。优点：通用公开、兼容性强、可扩展、安全性高，但XML编码格式占用带宽大<br>&nbsp; 6.5 其他基于TCP/IP自定义的协议1有些特殊框架（如：redis、kafka、zeroMq等）根据自身需要未严格遵循MQ规范，而是基于TCP\IP自行封装了一套协议，通过网络socket接口进行传输，实现了MQ的功能。<br>这里主要说一下RabbitMQ 他遵循的AMQP<br>消息中间件的好处是1.交互系统之间没有直接的调用关系，只是通过消息传输，故系统侵入性不强，耦合度低。2.例如原来的一套逻辑，完成支付可能涉及先修改订单状态、计算会员积分、通知物流配送，几个逻辑才能完成；通过MQ架构设计，就可将紧急重要（需要立刻响应）的业务放到该调用方法中，响应要求不高的使用消息队列，放到MQ队列中，供消费者处理。3.通过消息作为整合，大数据的背景下，消息队列还与实时处理架构整合，为数据处理提供性能支持。主要做日志处理等4.负载均衡，流量消封java还提供一个叫jms的 没有具体了解过</p><p><br></p><p>*二.amqp<br><br>producer指生产者broker是消息的服务exchange交换机queue消息队列message消息体consumer消费者<br><img src="https://img-blog.csdnimg.cn/20190627104912336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。</p><p><img src="https://img-blog.csdnimg.cn/20190627105151413.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>这两个部件的含义如下：1 Exchange接收producers发送过来的消息，按照一定的规则转发到相应的Message Queues。2 Message Queues再将消息转发到相应的Consumers。<br>下面介绍windows下面Rabbitmq安装 linux介意直接使用docker首先需要下载 Erlang <a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a> </p><p><img src="https://img-blog.csdnimg.cn/20190627105735251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>安装过后添加环境变量</p><p><img src="https://img-blog.csdnimg.cn/20190627105754805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>再下载rabbitmq 解压安装<br>然后激活启动<br>然后访问localhost:15672</p><p><img src="https://img-blog.csdnimg.cn/20190627110005754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>默认账号密码 guest guest<br>这样就安装完成了rabbitmq有4种状态 fanout,direct,topic,header<br>最后一种不常用我也没试过</p><p><img src="https://img-blog.csdnimg.cn/20190627120808711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120842148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><img src="https://img-blog.csdnimg.cn/20190627120853816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>fanout 广播模式 就是绑定了交换机的全部队列都能收到消息<br>direct 一对一模式 严格按照绑定的名字发送给队列<br>topic 通配符模式 * 和#<br>header 头模式1.第一种 fanout</p><p><br></p><p><strong><img src="https://img-blog.csdnimg.cn/2019062711070475.png" alt="å¨è¿éæå¥å¾çæè¿°"></strong><br></p><p><strong><br></strong></p><p><strong>public class ConnectionUtil {<br>&nbsp; private static final String RABBIT_HOST = "localhost";<br>&nbsp;private static final String RABBIT_USERNAME = "guest";<br>&nbsp;private static final String RABBIT_PASSWORD = "guest";<br>&nbsp;private static Connection connection = null;<br>&nbsp;public static Connection getConnection() {&nbsp; &nbsp; if(connection == null) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ConnectionFactory connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost(RABBIT_HOST);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setUsername(RABBIT_USERNAME);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connectionFactory.setPassword(RABBIT_PASSWORD);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;connection = connectionFactory.newConnection();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} catch (IOException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp;} catch (TimeoutException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; return connection;}123456789101112131415161718192021222324}<br>生产者代码public class producer {<br>public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();&nbsp; &nbsp; Channel channel = connection.createChannel();&nbsp; &nbsp; //channel.queueDeclare("queue_test",true,false,false,null);<br>&nbsp; &nbsp; channel.exchangeDeclare("jhjfanout","fanout",true,true,null);&nbsp; &nbsp; channel.basicPublish("jhjfanout","",null,"交换机发送的消息".getBytes());&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();}12345678910}<br>消费者代码第一个消费者public class consumer {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout1",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout1","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout1"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout1",false,defaultConsumer);<br>}12345678910111213141516171819202122}<br>第二个消费者public class consumer2 {<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; Connection connection = ConnectionUtil.getConnection();<br>&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("fanout",true,false,false,null);&nbsp; &nbsp; channel.queueBind("fanout","jhjfanout","");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("fanout"+new String(body,"utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(2000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("fanout",false,defaultConsumer);<br>}12345678910111213141516171819202122}</strong></p><p><strong><br></strong></p><p><strong>二 ,direct</strong></p><p><strong><br></strong></p><p><img src="https://img-blog.csdnimg.cn/20190627120655436.png" alt="å¨è¿éæå¥å¾çæè¿°"><strong><br></strong></p><p><br></p><p>生产者public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.basicPublish(“jhj”,“test”,null,“交换机发送的消息”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test”,true,false,false,null);channel.queueBind(“test”,“jhj”,“test”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test”,false,defaultConsumer);<br>}1}消费者2public class consumer2 {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.basicQos(1);channel.queueDeclare(“test2”,true,false,false,null);channel.queueBind(“test2”,“jhj”,“test2”);DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {@Overridepublic void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {System.out.println(“test2”+new String(body,“utf-8”));try {Thread.sleep(2000);} catch (InterruptedException e) {e.printStackTrace();}channel.basicAck(envelope.getDeliveryTag(),false);}};channel.basicConsume(“test2”,false,defaultConsumer);<br>}1}三 topic</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190627120727995.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>生产者public class producer {static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);connectionFactory.setHost(“localhost”);connectionFactory.setPort(5672);}Connection connection = connectionFactory.newConnection();final Channel channel = connection.createChannel();channel.exchangeDeclare(“jhj2”,“topic”);channel.basicPublish(“jhj2”,“ab.s.11”,false,false,null,“我是交换机筛选过来的”.getBytes());channel.close();connection.close();<br>}1}消费者1public class consumer {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest", "jhj2", "ab.*");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest",false,defaultConsumer);<br>&nbsp; &nbsp; }&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930消费者2public class consumer2 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.queueDeclare("toptest2", true, false, false, null);<br>&nbsp; &nbsp; channel.queueBind("toptest2", "jhj2", "ab.#");&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest2",false,defaultConsumer);<br>}123456789101112131415161718192021222324252627282930}消费者3public class consumer3 {static ConnectionFactory connectionFactory;<br>public static void main(String[] args) throws IOException, TimeoutException {&nbsp; &nbsp; if (connectionFactory == null) {&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory = new ConnectionFactory();&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setUsername("user");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPassword("admin");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setHost("localhost");&nbsp; &nbsp; &nbsp; &nbsp; connectionFactory.setPort(5672);&nbsp; &nbsp; }&nbsp; &nbsp; Connection connection = connectionFactory.newConnection();&nbsp; &nbsp; final Channel channel = connection.createChannel();&nbsp; &nbsp; channel.basicQos(1);&nbsp; &nbsp; channel.queueDeclare("toptest3", true, false, false, null);&nbsp; &nbsp; channel.queueBind("toptest3", "jhj2", "abc");&nbsp; &nbsp; DefaultConsumer defaultConsumer = new DefaultConsumer(channel) {&nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(new String(body, "utf-8"));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(1000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; channel.basicAck(envelope.getDeliveryTag(),false);<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; };&nbsp; &nbsp; channel.basicConsume("toptest3",false,defaultConsumer);<br>}1234567891011121314151617181920212223242526272829}四channel.basicConsume(“toptest3”,false,defaultConsumer);如果监听队列第二个参数为false他的意识就是需要手动提交消费结构然后需要添加channel.basicAck(envelope.getDeliveryTag(),false);这句话是公平分发 设处理的快谁就发的多 channel.basicQos(1);<br>五.rabbitmq确认机制事务+Confirm<br>1.事物public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException {if(connectionFactory==null){connectionFactory=new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“127.0.0.1”);connectionFactory.setUsername(“user”);connectionFactory.setPassword(“admin”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();//channel.queueDeclare(“test2”,true,false,false,null);channel.exchangeDeclare(“jhj”,“direct”,true,true,null);channel.txSelect();try {channel.basicPublish(“jhj”, “test”, null, “交换机发送的消息”.getBytes());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;channel.txCommit();&nbsp; &nbsp; }catch(Exception s){&nbsp; &nbsp; &nbsp; &nbsp; channel.txRollback();&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("错误");&nbsp; &nbsp; }finally {&nbsp; &nbsp; &nbsp; &nbsp; channel.close();&nbsp; &nbsp; &nbsp; &nbsp; connection.close();&nbsp; &nbsp; }<br><br><br>}123456789101112}2.confirm第1种普通confirm模式最简单，publish一条消息后，等待服务器端confirm,如果服务端返回false或者超时时间内未返回，客户端进行消息重传。<br>channel.confirmSelect();channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}<br>第二种批量hannel.confirmSelect();for(int i=0;i&lt;batchCount;i++){channel.basicPublish(ConfirmConfig.exchangeName, ConfirmConfig.routingKey, MessageProperties.PERSISTENT_TEXT_PLAIN, ConfirmConfig.msg_10B.getBytes());}if(!channel.waitForConfirms()){System.out.println(“send message failed.”);}第三种public class producer {private static ConnectionFactory connectionFactory;public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {if(connectionFactory==null){connectionFactory = new ConnectionFactory();connectionFactory.setPort(5672);connectionFactory.setHost(“localhost”);connectionFactory.setUsername(“guest”);connectionFactory.setPassword(“guest”);}Connection connection = connectionFactory.newConnection();Channel channel = connection.createChannel();channel.queueDeclare(“queue_test”,true,false,false,null);channel.confirmSelect();final SortedSet ts=new TreeSet();channel.addConfirmListener(new ConfirmListener() {public void handleAck(long l, boolean b) throws IOException {if(b){ts.headSet(l+1).clear();System.out.println(“ack”+b+“long”+l);}else {ts.remove(l);System.out.println(“ack” + b + “long” + l);}}<br>&nbsp; &nbsp; &nbsp; &nbsp; public void handleNack(long l, boolean b) throws IOException {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(b){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.headSet(l+1).clear();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ts.remove(l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("nack"+b+"long"+l);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; });<br>&nbsp; &nbsp; for (int i = 0; i &lt; 50; i++) {&nbsp; &nbsp; &nbsp; &nbsp; channel.basicPublish("","queue_test",null,("我的第一次测试"+i).getBytes());&nbsp; &nbsp; &nbsp; &nbsp; ts.add(channel.getNextPublishSeqNo());&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("---"+i);&nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(100);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; channel.close();&nbsp; &nbsp; connection.close();<br><br><br>}</p>, <p><span>在学习消息中间件的路上我 得到的知识全部介绍在下文 后期会慢慢补充 一起进步！</span><br><span>在互联网大流量的时代 单一的同步处理非常消耗时间 而且耦合度很高 为了解决这个问题消息中间件诞生 说到MQ就提一下消息中间件常用的协议</span></p>, 1, 2020-01-11 13:14:37.0, null, 0, 1, 1673, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [44, 2, 自定义基于反射 Scoket jdk动态代理 RPC框架, /upload/2020-01/1580268847693.jpg, <p>使用工具IDEA， Myeclipse编写服务端接口 HelloService</p><p><img src="https://img-blog.csdnimg.cn/20190510114408827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>服务端实现类</p><p><img src="https://img-blog.csdnimg.cn/201905101149147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>编写服务端的调用类package whu;<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;<br>import java.lang.reflect.Method;<br>import java.net.ServerSocket;import java.net.Socket;<br>public class RpcFramework {//注册开始方法public static void export(Object service, Class interfaceClazz, int port) throws Exception {<br>&nbsp; &nbsp; if (service == null) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("service instance == null");&nbsp; &nbsp; }&nbsp; &nbsp; if (port &lt; 0 || port &gt; 65535) {&nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Invalid port " + port);&nbsp; &nbsp; }&nbsp; &nbsp; System.out.println("Export service " + service.getClass().getName() + " on port " + port);&nbsp; &nbsp; //服务端socket&nbsp; &nbsp; ServerSocket server = new ServerSocket(port);&nbsp; &nbsp; //死循环达到不断监听 使用while(true)也一样&nbsp; &nbsp; for (;;) {&nbsp; &nbsp; &nbsp; &nbsp; final Socket socket = server.accept();//阻塞等待客户端连接&nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new Thread(new Runnable() {//多线程<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @Override&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public void run() {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //获取客户端传来的流对象&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String interfaceName = input.readUTF();//获取客户端传来需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String methodName = input.readUTF();//客户端传来需要调用的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject();//客户端传来需要调用的方法的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object[] arguments = (Object[]) input.readObject();//调用方法的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//返回客户端的留流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //判断客户端需要调用的接口在服务端是否存在&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!interfaceName.equals(interfaceClazz.getName())) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalAccessException("Interface wrong, export:" + interfaceClazz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; + " refer:" + interfaceName);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method method = service.getClass().getMethod(methodName, parameterTypes);//通过反射获取服务端的方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = method.invoke(service, arguments);//执行服务端方法&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(result);//返回给客户端&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Throwable t) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(t);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }).start();//开启线程&nbsp; &nbsp; &nbsp; &nbsp; } catch (Exception e) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }}123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960}<br>我这里是直接传入一个对象 你们也可以写一个map用来注册多个对象服务端启动类<br>package whu;<br>public class out {<br>public static void main(String[] args) throws Exception {&nbsp; &nbsp; HelloService service = new HelloServiceImpl();&nbsp; &nbsp; RpcFramework.export(service, HelloService.class, 9000);}1234}<br>客户端调用类<br>import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;<br>import java.net.Socket;<br>public class Rpcfrowd {<br>/**&nbsp;* @param args&nbsp;*/&nbsp;@SuppressWarnings("unchecked")//屏蔽黄线&nbsp;public static &lt;T&gt; T refer(final Class&lt;T&gt; interfaceClass, final String host, final int port) throws Exception {&nbsp; &nbsp; &nbsp;&nbsp;	&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println("Get remote service " + interfaceClass.getName() + " from server " + host + ":" + port);&nbsp; &nbsp; &nbsp; &nbsp; return (T) Proxy.newProxyInstance(interfaceClass.getClassLoader(), new Class&lt;?&gt;[] { interfaceClass },&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new InvocationHandler() {//jdk 动态代理&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO Auto-generated method stub&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Socket socket = new Socket(host, port);//建立客户端socket 传入服务端ip 和端口&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("socket通过");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectOutputStream output = new ObjectOutputStream(socket.getOutputStream());//向服务端写入流对象<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(interfaceClass.getName());//需要调用的接口名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeUTF(method.getName());//需要调用的方法名&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(method.getParameterTypes());//需要调用的参数类型&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.writeObject(args);//需要调用的参数&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("发送成功");&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ObjectInputStream input = new ObjectInputStream(socket.getInputStream());//接收服务端的返回信息<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object result = input.readObject();//接收服务端的返回信息&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("接收成功"+result);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (result instanceof Throwable) {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw (Throwable) result;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result;//返回&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; input.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; output.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socket.close();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });&nbsp; &nbsp; }123456789101112131415161718192021222324252627282930313233343536373839404142434445464748}注意第一个return是返回 生成的代理类对象 第二个是返回调用方法的返回值<br>客户端启动类import whu.HelloService;<br>public class clid {<br>public static void main(String[] args) throws Exception {	HelloService&nbsp; service = (HelloService)Rpcfrowd.refer(Class.forName("whu.HelloService"), "127.0.0.1", 9000);&nbsp; &nbsp; String result = service.hello("rod---");&nbsp; &nbsp; System.out.println(result);}12345}<br>运行服务端启动类————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：<a href="https://blog.csdn.net/qq_28422443/article/details/90055742" rel="nofollow">https://blog.csdn.net/qq_28422443/article/details/90055742</a> </p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121656921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>运行客户端启动类</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190510121747406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>简单的rpc远程调用就实现了 这里提一下服务端需要接口和实现类 客户端只需要接口就行</p>, <p>使用工具IDEA， Myeclipse</p><p>编写服务端接口 HelloService</p>, 1, 2020-01-29 11:35:34.0, null, 0, 1, 192, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [45, 2, springboot对应springcloud的版本, /upload/2020-01/1580269227935.jpg, <p>Spring Boot	Spring Cloud<br>1.2.x	Angel版本1.3.x	Brixton版本1.4.x	Camden版本1.5.x Dalston版本、Edgware版本2.0.x Finchley版本————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88871861</p>, <p><span>Spring Boot	Spring Cloud</span></p>, 1, 2020-01-29 11:40:44.0, null, 0, 0, 187, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [43, 61, Httpclient, /upload/2020-01/1580268776060.jpg, <p>HttpClient是模拟Http请求的。<br>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。<br>比如，你想在电脑上访问一个只有手机设备才能访问的wap网站，在浏览器里你是无法访问的，因为服务器端会检验User-Agent头，这时你就可以用Http Client。<br>Http Client很强大，对Cookie的处理也非常好，可以用于自动登录。我写过一个程序，可以用程序（不用浏览器）登录某论坛，在程序内向该网站发帖等。<br>简单理解就是一个程序上面的浏览器；<br>1.下面介绍他的基本使用 因为平时我们都需要用http请求第三方接口 jdk自带的又比较繁琐<br>导入maven依赖<br>org.apache.httpcomponents httpclient 4.5.4 org.apache.httpcomponents httpmime 4.5.4 org.apache.httpcomponents fluent-hc 4.5.4注意我是4.5版本这个低版本操作不一样<br>import com.sun.org.apache.bcel.internal.generic.NEW;import org.apache.http.HttpEntity;import org.apache.http.HttpHost;import org.apache.http.client.config.RequestConfig;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.params.HttpParams;import org.apache.http.util.EntityUtils;<br>import javax.swing.text.html.parser.Entity;import java.io.IOException;import java.util.ArrayList;import java.util.List;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class Httpclient {<br>public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp;//HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp;HttpPost httpPosts = new HttpPost("https://www.cnblogs.com/hutao722/p/7890853.html");//POST请求&nbsp;List arry=new ArrayList();&nbsp;arry.add(new BasicNameValuePair("username", "admin"));&nbsp;HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp;httpGets.setEntity(httpentity);//添加参数&nbsp;HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp;httpGets.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp;httpGets.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp;httpGets.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp;CloseableHttpResponse execute = Defaults.execute(httpGets);//发送消息<br>&nbsp;HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; entity.getContentType();//获取返回资源类型&nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; System.out.println(htmls);&nbsp; execute.close();//关闭response&nbsp; Defaults.close();//关闭HttpClient123456789101112131415161718192021}}<br>2.通过httpclient上传文件<br>public void upload() {CloseableHttpClient httpclient = HttpClients.createDefault();try {HttpPost httppost = new HttpPost(“http://localhost:8080/myDemo/Ajax/serivceFile.action”);<br>		FileBody bin = new FileBody(new File("F:\\image\\sendpix0.jpg"));		StringBody comment = new StringBody("A binary file of some kind", ContentType.TEXT_PLAIN);<br>		HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("bin", bin).addPart("comment", comment).build();<br>		httppost.setEntity(reqEntity);<br>		System.out.println("executing request " + httppost.getRequestLine());		CloseableHttpResponse response = httpclient.execute(httppost);		try {			System.out.println("----------------------------------------");			System.out.println(response.getStatusLine());			HttpEntity resEntity = response.getEntity();			if (resEntity != null) {				System.out.println("Response content length: " + resEntity.getContentLength());			}			EntityUtils.consume(resEntity);		} finally {			response.close();		}	} catch (ClientProtocolException e) {		e.printStackTrace();	} catch (IOException e) {		e.printStackTrace();	} finally {		try {			httpclient.close();		} catch (IOException e) {			e.printStackTrace();		}	}}12345678910111213141516171819202122232425262728293031323.下载指定文件public static void main(String[] args)throws IOException {CloseableHttpClient Defaults = HttpClients.createDefault();<br>&nbsp; &nbsp; //HttpGet httpGets = new HttpGet("https://www.cnblogs.com/hutao722/p/7890853.html"); //GET请求&nbsp; &nbsp; HttpPost httpPosts = new HttpPost("https://preview.qiantucdn.com/58pic/34/88/37/85058PICze58PICsa61297r58PICR_PIC2018.jpg!w1024_0");//POST请求&nbsp; &nbsp; List arry=new ArrayList();&nbsp; &nbsp; arry.add(new BasicNameValuePair("username", "admin"));&nbsp; &nbsp; HttpEntity httpentity= new UrlEncodedFormEntity(arry,"UTF-8");&nbsp; &nbsp; httpPosts.setEntity(httpentity);//添加参数&nbsp; &nbsp;// HttpHost httpHost = new HttpHost("175.8.109.48", 8118);//添加代理地址&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setSocketTimeout(10000).setConnectTimeout(10000).build());//设置请求超时时间和请求返回时间&nbsp; &nbsp;// httpPosts.setConfig(RequestConfig.custom().setProxy(httpHost).build());//设置代理&nbsp; &nbsp; httpPosts.setHeader("User-Agent","Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1");//设置请求头 伪装客户端&nbsp; &nbsp; CloseableHttpResponse execute = Defaults.execute(httpPosts);//发送消息<br>&nbsp; &nbsp; HttpEntity&nbsp; entity= execute.getEntity();//获取消息实体<br>&nbsp; &nbsp; InputStream content = entity.getContent();//获取响应流<br>&nbsp; &nbsp; FileOutputStream fos = new FileOutputStream(new File("F:\\dyh\\视频\\a.jpg"));&nbsp; &nbsp; byte[] buffer = new byte[4096];&nbsp; &nbsp; int len = -1;&nbsp; &nbsp; while((len = content.read(buffer) )!= -1){&nbsp; &nbsp; &nbsp; &nbsp; fos.write(buffer, 0, len);&nbsp; &nbsp; }&nbsp; &nbsp; fos.close();&nbsp; &nbsp; content.close();&nbsp; &nbsp; //files.add(filer);<br><br>&nbsp; &nbsp; entity.getContentType();//获取返回资源类型&nbsp; &nbsp; &nbsp;entity.getContentEncoding();//获取返回资源编码&nbsp; &nbsp; &nbsp;// String htmls= EntityUtils.toString( entity );//将返回实体转换成字符串&nbsp; &nbsp; &nbsp;// System.out.println(execute.getStatusLine().getStatusCode());//获取响应状态&nbsp; &nbsp; &nbsp;//System.out.println(htmls);&nbsp; &nbsp; &nbsp;execute.close();//关闭response&nbsp; &nbsp; &nbsp;Defaults.close();//关闭HttpClient<br>}注意这里如果使用流读取entity所得到的流是不可重复读取的也就是说所得的到实体只能一次消耗完,不能多次读取,所以在执行&nbsp; &nbsp; html = EntityUtils.toString(entity)后,流就关闭了,就会导致错误.12345678910111213141516171819202122232425262728293031323334353637382019-6-14 学习打卡————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/91972190</p>, <p>HttpClient是模拟Http请求的。</p><p>通常我们都是通过浏览器来进行Http请求，Http请求的头不能修改。但是如果你用Http Client，可以自定义一个Http请求，Header里的内容都可以自己定义。</p>, 1, 2020-01-29 11:33:39.0, null, 0, 0, 168, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [66, 63, Spring AOP使用@AspectJ实现日志管理, /upload/2021-01/1609926066372.png, <p><span style="font-size: 18px;">首先看一下最终实现效果，如图详细记录了用户的操作，操作方法，方法名称，时间，耗时，IP等等继续信息。</span></p><p><img src="/upload/2021-01/1609925375979.png" title="22.png" alt="22.png" width="1327" height="632"></p><p><strong><span style="font-size: 24px;">1.加入依赖jar</span></strong></p><p>&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;<br>&lt;dependency&gt;<br> &nbsp; &nbsp;&lt;groupId&gt;org.aspectj&lt;/groupId&gt;<br> &nbsp; &nbsp;&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;<br> &nbsp; &nbsp;&lt;version&gt;1.9.6&lt;/version&gt;<br>&lt;/dependency&gt;</p><p><br></p><p><strong><span style="font-size: 24px;">2.创建日志表log，以及完成后台的CRUD类</span></strong><br></p><p><img src="/upload/2021-01/1609925710652.png" title="3333333333.png" alt="3333333333.png"></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Entity&nbsp;</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.domain;<br><br>import com.baomidou.mybatisplus.annotation.IdType;<br>import com.baomidou.mybatisplus.annotation.TableId;<br>import java.time.LocalDateTime;<br>import java.io.Serializable;<br>import java.util.Date;<br><br>import com.baomidou.mybatisplus.annotation.TableName;<br>import com.fasterxml.jackson.annotation.JsonFormat;<br>import lombok.Data;<br>import lombok.EqualsAndHashCode;<br>import lombok.experimental.Accessors;<br><br>/**<br> * &lt;p&gt;<br> * <br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Data<br>@EqualsAndHashCode(callSuper = false)<br>@Accessors(chain = true)<br>@TableName("sys_loginfo")<br>public class Loginfo implements Serializable {<br><br> &nbsp; &nbsp;private static final long serialVersionUID=1L;<br><br> &nbsp; &nbsp;@TableId(value = "id", type = IdType.AUTO)<br> &nbsp; &nbsp;private Integer id;<br><br> &nbsp; &nbsp;private String loginname;<br><br> &nbsp; &nbsp;private String loginip;//请求的Ip地址<br><br> &nbsp; &nbsp;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss",timezone="GMT+8")<br> &nbsp; &nbsp;private Date logintime;<br><br><br> &nbsp; &nbsp;private Integer userid;//用户id<br><br> &nbsp; &nbsp;private String username;//用户名称<br><br> &nbsp; &nbsp;private String operation;//用户操作<br><br> &nbsp; &nbsp;private String operationmethod;//操作方法<br><br> &nbsp; &nbsp;private LocalDateTime time;//响应时间<br><br> &nbsp; &nbsp;private String method;//请求方法<br><br> &nbsp; &nbsp;private String params;//请求参数<br><br> &nbsp; &nbsp;private String consumetime;//总耗时<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Mapper</span></p><p>package com.dong.system.mapper;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;Mapper 接口<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface LoginfoMapper extends BaseMapper&lt;Loginfo&gt; {<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">Service</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service;<br><br>import com.dong.system.domain.Loginfo;<br>import com.baomidou.mybatisplus.extension.service.IService;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>public interface ILoginfoService extends IService&lt;Loginfo&gt; {<br><br> &nbsp; &nbsp;/**<br> &nbsp; &nbsp; * 1.查询全部系统日志<br> &nbsp; &nbsp; */<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo);<br><br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">ServiceImpl</span><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.system.service.impl;<br><br>import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br>import com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br>import com.dong.system.domain.Loginfo;<br>import com.dong.system.mapper.LoginfoMapper;<br>import com.dong.system.service.ILoginfoService;<br>import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br>import com.dong.system.utils.DataGridView;<br>import com.dong.system.vo.LoginfoVo;<br>import org.apache.commons.lang3.StringUtils;<br>import org.apache.commons.logging.Log;<br>import org.apache.commons.logging.LogFactory;<br>import org.springframework.stereotype.Service;<br><br>/**<br> * &lt;p&gt;<br> * &nbsp;服务实现类<br> * &lt;/p&gt;<br> *<br> * @author DM<br> * @since 2020-11-15<br> */<br>@Service<br>public class SysLoginfoServiceImpl extends ServiceImpl&lt;LoginfoMapper, Loginfo&gt; implements ILoginfoService {<br><br> &nbsp; &nbsp;private Log log = LogFactory.getLog(SysLoginfoServiceImpl.class);<br><br><br> &nbsp; &nbsp;@Override<br> &nbsp; &nbsp;public DataGridView loadAllLogInfoList(LoginfoVo loginfoVo) {<br> &nbsp; &nbsp; &nbsp; &nbsp;QueryWrapper&lt;Loginfo&gt; queryWrapper = new QueryWrapper&lt;Loginfo&gt;();<br> &nbsp; &nbsp; &nbsp; &nbsp;if(null!=loginfoVo){<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.like(StringUtils.isNotBlank(loginfoVo.getLoginname()), "loginname", loginfoVo.getLoginname());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.ge(loginfoVo.getStartTime()!=null, "logintime", loginfoVo.getStartTime());<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.le(loginfoVo.getEndTime()!=null, "logintime", loginfoVo.getEndTime());<br> &nbsp; &nbsp; &nbsp; &nbsp;}else{<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;log.info("loginfoVO参数为空");<br> &nbsp; &nbsp; &nbsp; &nbsp;}<br> &nbsp; &nbsp; &nbsp; &nbsp;queryWrapper.orderByDesc("logintime");<br> &nbsp; &nbsp; &nbsp; &nbsp;Page&lt;Loginfo&gt; page = new Page&lt;&gt;(loginfoVo.getPage(),loginfoVo.getLimit());<br> &nbsp; &nbsp; &nbsp; &nbsp;this.baseMapper.selectPage(page,queryWrapper);<br> &nbsp; &nbsp; &nbsp; &nbsp;return new DataGridView(page.getTotal(),page.getRecords());<br> &nbsp; &nbsp;}<br>}<br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">mapper/system/LoginfoMapper.xml</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br>&lt;mapper namespace="com.dong.system.mapper.LoginfoMapper"&gt;<br><br>&lt;/mapper&gt;<br><strong><span style="font-size: 24px;">3.定义日志注解接口Log</span></strong><br></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">com.dong.common.aspect.Log</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p><p>package com.dong.common.aspect;<br><br>import java.lang.annotation.ElementType;<br>import java.lang.annotation.Retention;<br>import java.lang.annotation.RetentionPolicy;<br>import java.lang.annotation.Target;<br><br>@Target(value = ElementType.METHOD)<br>@Retention(RetentionPolicy.RUNTIME)<br>public @interface Log {<br> &nbsp; &nbsp;String value() default "";<br>}<br></p><p><br></p><p><strong><span style="font-size: 24px;">4.定义aop切面</span></strong></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">WebLogAspect</span></p><p><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"></span></p>package com.dong.common.aspect;<br><br>import org.aspectj.lang.JoinPoint;<br>import org.aspectj.lang.ProceedingJoinPoint;<br>import org.aspectj.lang.annotation.*;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;<br>import org.springframework.stereotype.Component;<br>import org.springframework.web.context.request.RequestContextHolder;<br>import org.springframework.web.context.request.ServletRequestAttributes;<br><br>import javax.servlet.http.HttpServletRequest;<br>import java.util.Arrays;<br><br>@Aspect<br>@Component<br>public class WebLogAspect {<br><br> &nbsp; &nbsp;private static final Logger logger = LoggerFactory.getLogger(WebLogAspect.class);<br><br> &nbsp; &nbsp;//切面<br> &nbsp; &nbsp;@Pointcut("execution( * com.dong..controller.*.*(..))")//两个..代表所有子目录，最后括号里的两个..代表所有参数<br> &nbsp; &nbsp;public void logPointCut() {<br> &nbsp; &nbsp;}<br><br>//方法执行前<br> &nbsp; &nbsp;@Before("logPointCut()")<br> &nbsp; &nbsp;public void doBefore(JoinPoint joinPoint) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 接收到请求，记录请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();<br> &nbsp; &nbsp; &nbsp; &nbsp;HttpServletRequest request = attributes.getRequest();<br><br> &nbsp; &nbsp; &nbsp; &nbsp;// 记录下请求内容<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("请求地址 : " + request.getRequestURL().toString());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("HTTP METHOD : " + request.getMethod());<br> &nbsp; &nbsp; &nbsp; &nbsp;// 获取真实的ip地址<br> &nbsp; &nbsp; &nbsp; &nbsp;//logger.info("IP : " + IPAddressUtil.getClientIpAddress(request));<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("CLASS_METHOD : " + joinPoint.getSignature().getDeclaringTypeName() + "."<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ joinPoint.getSignature().getName());<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("参数 : " + Arrays.toString(joinPoint.getArgs()));<br><br> &nbsp; &nbsp;}<br> &nbsp;//方法执行后<br> &nbsp; &nbsp;@AfterReturning(returning = "ret", pointcut = "logPointCut()")// returning的值和doAfterReturning的参数名一致<br> &nbsp; &nbsp;public void doAfterReturning(Object ret) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;// 处理完请求，返回内容(返回值太复杂时，打印的是物理存储空间的地址)<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.debug("返回值 : " + ret);<br> &nbsp; &nbsp;}<br>//循环切面<br> &nbsp; &nbsp;@Around("logPointCut()")<br> &nbsp; &nbsp;public Object doAround(ProceedingJoinPoint pjp) throws Throwable {<br> &nbsp; &nbsp; &nbsp; &nbsp;long startTime = System.currentTimeMillis();<br> &nbsp; &nbsp; &nbsp; &nbsp;Object ob = pjp.proceed();// ob 为方法的返回值<br> &nbsp; &nbsp; &nbsp; &nbsp;logger.info("耗时 : " + (System.currentTimeMillis() - startTime));<br> &nbsp; &nbsp; &nbsp; &nbsp;return ob;<br> &nbsp; &nbsp;}<br>}<br><p><br></p>, <p>使用Spring aop使用@AspectJ实现日志管理，ctroller层的方法上直接加上@Log("方法说明“”)，记录系统用户操作日志</p>, 1, 2021-01-06 17:41:10.0, null, 0, 1, 136, 99, null, null, 1, 1, 1, 0, 1, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [47, 2, spring ioc/aop的理解, /upload/2020-01/1580269895723.jpg, <p>开发普通的spring程序需要6个jar<br>我们去官方下载了 spring的提供的jar文件</p><p><img src="https://img-blog.csdnimg.cn/20190310142615174.png" alt="è§£åå"></p><p>点击打开里面libs目录找以下jarspring-aop-3.2.4.RELEASE.jarspring-beans-3.2.4.RELEASE.jarspring-context-3.2.4.RELEASE.jarspring-core-3.2.4.RELEASE.jarspring-expression-3.2.4.RELEASE.jar还需要一个日志包 spring框架底层使用了他 不然ioc不能实例化commons-logging-1.1.1.jar<br>我们把相应的jar 导入项目并加入类路径</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/2019031014313356.png" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>我这里实现了aop 多了4个jar 后面再讲先不用管项目要求 通过指定id查询学生首先我们建一个student的pojo</p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190310144303595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å­¦çidï¼nameï¼age"></p><p>然后建立dao层接口</p>, <p><span>开发普通的spring程序需要6个jar</span><br><span>我们去官方下载了 spring的提供的jar文件</span></p>, 1, 2020-01-29 11:52:44.0, null, 0, 1, 104, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [65, 2, Linux下安装Nginx,Jdk,Tomcat, /upload/2021-01/1609723629239.jpg, <p><span style="font-size: 20px;"><strong>一 nginx 安装&nbsp;</strong></span></p><p>安装环境:&nbsp;</p><p>yum install gcc-c++&nbsp;</p><p>yum install -y pcre pcre-devel</p><p>yum install -y zlib zlib-devel&nbsp;</p><p>yum install -y openssl openssl-devel&nbsp;</p><ol style="list-style-type: decimal;"><li><p>下载 nginx-1.11.0.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p></li><li><p>解压安装&nbsp;</p><p># cd /soft&nbsp;</p><p># tar -zxvf nginx-1.11.0.tar.gz&nbsp;</p><p>#./configure --prefix=/usr/nginx --with-http_ssl_module --with-http_stub_status_module - -with-pcre&nbsp;</p><p># make &amp;&amp; make install&nbsp;&nbsp;</p></li></ol><p>&nbsp; 3.安装完毕&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动 nginx&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp;# /user/nginx/sbin/nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 关闭 nginx</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# pkill -9 nginx</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;或者&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # ps -ef|grep nginx&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # kill -9 进程号&nbsp;&nbsp;</p><p>&nbsp; &nbsp; 4.nginx 配置&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # cd /usr/nginx/conf</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi nginx.conf&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;listen&nbsp;&nbsp; 80;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;server_name&nbsp;&nbsp; www.abcd.com abcd.com;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;location / {&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index&nbsp;&nbsp; index.html index.htm;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p><p><br></p><p><span style="font-size: 20px;"><strong>二 jdk 安装&nbsp;</strong></span></p><p>&nbsp;1.下载 jdk-7u45-linux-x64.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录&nbsp;下&nbsp;</p><p>&nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# cd /soft&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# tar -zxvf jdk-7u45-linux-x64.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# mv jdk1.7.0_45 /usr/</p><p>&nbsp;3. 配置环境变量</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# vi /etc/profile&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 编辑,在最后添加下面的内容&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JAVA_HOME=/usr/jdk1.7.0_45&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export JRE_HOME=/usr/jdk1.7.0_45/jre&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; export CLASSPATH=$CLASSPATH:.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib 保存退出，</p><p>&nbsp; &nbsp; &nbsp; 然后输入下面的命令使之生效&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; # source /etc/profile&nbsp;</p><p>4.&nbsp;&nbsp; 测试&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;# java -version&nbsp;出现如下表示安装成功&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;java version "1.7.0_45"&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java(TM) SE Runtime Environment (build 1.7.0_45-b18)&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Java HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)</p><p><br></p><p><span style="font-size: 20px;">三 tomcat 安装</span></p><p>&nbsp; &nbsp;1.下载 apache-tomcat-7.0.53.tar.gz，并通过 WinSCP 工具上传到服务器/soft 目录下&nbsp;</p><p>&nbsp; &nbsp;2. 解压安装&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /soft&nbsp;# tar -zxvf apache-tomcat-7.0.53.tar.gz&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# mv apache-tomcat-7.0.53 /usr/&nbsp;</p><p>&nbsp; 3. 修改端口&nbsp;</p><p>&nbsp; &nbsp; &lt;Connector port="80" protocol="HTTP/1.1"&nbsp;URIEncoding="UTF-8"&nbsp;redirectPort="8443" /&gt;&nbsp;</p><p>&nbsp; &nbsp; 注:根据实际需要设置 tomcat 的端口&nbsp;</p><p>&nbsp; 4. tomcat 启动&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# cd /usr/tomcat7/bin/&nbsp;</p><p>&nbsp; &nbsp; &nbsp;# ./startup.sh &amp;&nbsp;</p><p>&nbsp; &nbsp; # tail -f ../logs/catalina.out&nbsp;</p><p>&nbsp; &nbsp;5.tomcat 关闭&nbsp;</p><p>&nbsp; &nbsp; # ps -ef|grep tomcat&nbsp;</p><p>&nbsp; &nbsp; # kill -9 进程号</p>, <p>本文讲解如何在linux下安装Nginx、Jdk、Tomcat</p>, 1, 2021-01-04 09:27:12.0, null, 0, 0, 70, 1, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [42, 2, java8 lambda表达式 函数式编程, /upload/2020-01/1580268632163.jpg, <p>注解的表面意思和接口差不多 只定义没有实际作用定义注解的语法是（@interface 注解名{}）自定义注解还需要添加系统提供的元注解1.@Target,2.@Retention,3.@Documented,4.@Inherited<br>一 .查看源码得知Target 有一个ElementType的枚举属性，他的作用是定义注解的范围</p><p><img src="https://img-blog.csdnimg.cn/20190621153751114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>&nbsp;1.CONSTRUCTOR:用于描述构造器　　　　2.FIELD:用于描述域　　　　3.LOCAL_VARIABLE:用于描述局部变量　　　　4.METHOD:用于描述方法　　　　5.PACKAGE:用于描述包　　　　6.PARAMETER:用于描述参数　　　　7.TYPE:用于描述类、接口(包括注解类型) 或enum声明　　　　总之他就是定义你注解能加在那个地方 不然就会报错 他有个RetentionPolicy的枚举属性<br>二.Retention 他是说你注解在那个范围保留1.SOURCE:在源文件中有效（即源文件保留）　　　　2.CLASS:在class文件中有效（即class保留）　　　　3.RUNTIME:在运行时有效（即运行时保留）</p><p><img src="https://img-blog.csdnimg.cn/2019062115433919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>三 ，定义属性 注解类里面的属性是需要加括号的 ；</p><p><img src="https://img-blog.csdnimg.cn/20190621154613468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p>我们写一个实体类用反射测试一下</p><p><img src="https://img-blog.csdnimg.cn/2019062115533430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p><img src="https://img-blog.csdnimg.cn/20190621160453201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDIyNDQz,size_16,color_FFFFFF,t_70" alt="å¨è¿éæå¥å¾çæè¿°"></p><p><br></p><p>很简单 都是先获取类或者方法再获取注解<br>下面是动态编译和反射运行的代码 注释很清楚<br>import javax.tools.JavaCompiler;import javax.tools.ToolProvider;import java.io.*;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;<br>/**<br>------------------阿弥陀佛-----------------<br>--------- .—.<br>--------- (_,/\ \<br>--------- (`a a( )<br>--------- ) = ) (<br>--------- (.–’ '–.)<br>--------- | (_/) \<br>--------- |/ \ / \ |<br>--------- \ / . \ //<br>--------- /___//<br>--------- | _/ |<br>--------- \ / /<br>--------- / /<br>--------- ( (<br>--------- |\ \<br>--------- | \ \<br>--------- /_Y/_Y<br>-------------٩(͡๏̯͡๏)佛祖保佑 永无bug-----------*/public class main {public static void main(String[] args) throws IOException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException {<br>&nbsp; String javapath="D:compiler\\javaa.java";//需要保存的文件&nbsp;String path="public class javaa{javaa(){System.out.println(\"构造方法\");}public String test(){return \"测试方法\";}}";//定义java字符串&nbsp;File file = new File(javapath);&nbsp; &nbsp; &nbsp; if(file.exists()){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //保存到文件&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.write(path);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedWriter.flush();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fileWriter.close();<br>&nbsp; &nbsp; &nbsp; }{&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //不存在就创建再保存&nbsp; &nbsp; &nbsp;boolean newFile = file.createNewFile();<br>&nbsp; &nbsp; &nbsp;FileWriter fileWriter = new FileWriter(file);&nbsp; &nbsp; &nbsp;BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);&nbsp; &nbsp; &nbsp;bufferedWriter.write(path);&nbsp; &nbsp; &nbsp;bufferedWriter.flush();&nbsp; &nbsp; &nbsp;fileWriter.close();&nbsp;}<br>JavaCompiler systemJavaCompiler = ToolProvider.getSystemJavaCompiler();//通过java自带的 tools.jar把指定文件编译成class文件&nbsp;int run = systemJavaCompiler.run(null, null, null, javapath);//前几个参数是用来保存编译过程的信息 最后一个是需要编译类的路径&nbsp;if(run==0) {//如果编译成功就通过反射执行<br>&nbsp; &nbsp; &nbsp;URL[] url = new URL[]{new URL("file:/D:compiler/")};//需要执行的类路径<br>&nbsp; &nbsp; &nbsp;Class&lt;?&gt; javaa = new URLClassLoader(url).loadClass("javaa");//获得类加载器&nbsp; &nbsp; &nbsp;Method test = javaa.getDeclaredMethod("test", null);&nbsp; &nbsp; &nbsp;String invoke = (String) test.invoke(javaa.newInstance(), null);&nbsp; &nbsp; &nbsp;System.out.println(invoke);<br>&nbsp;}12345678910111213141516171819202122232425262728293031323334}}————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/93198309</p>, <p><span>java 8引入了 lambda表达式 他主要用于简化代码 比如我们平时都是使用匿名类来实现一个接口 有了lambda 我们只需要考虑实现接口方法就行了 前提是此接口只能有一个抽象方法 在这里java8&nbsp;</span></p>, 1, 2020-01-29 11:32:18.0, null, 0, 0, 21, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} Result: [46, 2, spring，servlet，springmvc上下文关系, /upload/2020-01/1580269266172.jpeg, <p>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西，反之，不可！WebApplicationContext //Ioc容器对象WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(getServletConfig().getServletContext());————————————————版权声明：本文为CSDN博主「java攀登呀」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_28422443/article/details/88838056</p>, <p><span>Servlet上下文目标对象是所有web应用，spring上下文目标对象是单个web应用（spring提供多种方式），spring mvc目标对象是单个web应用的spring mvc框架(是spring上下文的子上下文，即继承自spring上下文，所以子能够调用父的东西</span></p>, 1, 2020-01-29 11:43:03.0, null, 0, 0, 19, 99, null, null, 1, 0, 1, 0, 0, null, null, 1]
2021-01-11 16:50:50 -<==      Total: 9
2021-01-11 16:50:50 -{conn-10001, pstmt-20003, rs-50109} closed
2021-01-11 16:50:50 -{conn-10001, pstmt-20003} clearParameters. 
2021-01-11 16:50:50 -Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@648d1c9c]
2021-01-11 16:50:50 -{conn-10001} pool-recycle
2021-01-11 16:50:50 -任务执行
